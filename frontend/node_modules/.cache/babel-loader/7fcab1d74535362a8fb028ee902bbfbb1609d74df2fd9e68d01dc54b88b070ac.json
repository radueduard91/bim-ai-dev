{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst useFileUpload = (setGraphData, showNotification) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Handle file change\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Fetch graph data with loading state\n  const fetchGraphData = async (notification = null) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\n      setGraphData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching graph data:\", error);\n      if (notification) {\n        notification(\"Error fetching graph data.\", \"error\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle file upload with loading state\n  const handleFileUpload = async (notification = null) => {\n    if (!file) {\n      if (notification) {\n        notification(\"Please select a file before uploading.\", \"error\");\n      }\n      return;\n    }\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (notification) {\n        notification(response.data.message, \"success\");\n      }\n      await fetchGraphData();\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      let errorMessage = \"Error uploading file.\";\n      if (error.response && error.response.data) {\n        errorMessage += ` ${error.response.data.detail || error.response.data.message}`;\n      }\n      if (notification) {\n        notification(errorMessage, \"error\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    file,\n    isLoading,\n    handleFileChange,\n    handleFileUpload,\n    fetchGraphData,\n    setIsLoading\n  };\n};\n_s(useFileUpload, \"yOnCj7FtVfKjS4g/N59fBy/3F/o=\");\nexport default useFileUpload;","map":{"version":3,"names":["useState","axios","useFileUpload","setGraphData","showNotification","_s","file","setFile","isLoading","setIsLoading","handleFileChange","event","target","files","fetchGraphData","notification","response","get","data","error","console","handleFileUpload","formData","FormData","append","post","headers","message","errorMessage","detail"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/FileUpload.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFileUpload = (setGraphData, showNotification) => {\r\n    const [file, setFile] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // Handle file change\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    // Fetch graph data with loading state\r\n    const fetchGraphData = async (notification = null) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8000/graph-data/\");\r\n            setGraphData(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching graph data:\", error);\r\n            if (notification) {\r\n                notification(\"Error fetching graph data.\", \"error\");\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle file upload with loading state\r\n    const handleFileUpload = async (notification = null) => {\r\n        if (!file) {\r\n            if (notification) {\r\n                notification(\"Please select a file before uploading.\", \"error\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            });\r\n            if (notification) {\r\n                notification(response.data.message, \"success\");\r\n            }\r\n            await fetchGraphData();\r\n        } catch (error) {\r\n            console.error(\"Error uploading file:\", error);\r\n            let errorMessage = \"Error uploading file.\";\r\n            if (error.response && error.response.data) {\r\n                errorMessage += ` ${error.response.data.detail || error.response.data.message}`;\r\n            }\r\n            if (notification) {\r\n                notification(errorMessage, \"error\");\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return {\r\n        file,\r\n        isLoading,\r\n        handleFileChange,\r\n        handleFileUpload,\r\n        fetchGraphData,\r\n        setIsLoading\r\n    };\r\n};\r\n\r\nexport default useFileUpload;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGA,CAACC,YAAY,EAAEC,gBAAgB,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG,MAAAA,CAAOC,YAAY,GAAG,IAAI,KAAK;IAClDN,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,mCAAmC,CAAC;MACrEd,YAAY,CAACa,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAIJ,YAAY,EAAE;QACdA,YAAY,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACvD;IACJ,CAAC,SAAS;MACNN,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;;EAED;EACA,MAAMY,gBAAgB,GAAG,MAAAA,CAAON,YAAY,GAAG,IAAI,KAAK;IACpD,IAAI,CAACT,IAAI,EAAE;MACP,IAAIS,YAAY,EAAE;QACdA,YAAY,CAAC,wCAAwC,EAAE,OAAO,CAAC;MACnE;MACA;IACJ;IAEAN,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMa,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAElB,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMf,KAAK,CAACwB,IAAI,CAAC,+BAA+B,EAAEH,QAAQ,EAAE;QACzEI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACF,IAAIX,YAAY,EAAE;QACdA,YAAY,CAACC,QAAQ,CAACE,IAAI,CAACS,OAAO,EAAE,SAAS,CAAC;MAClD;MACA,MAAMb,cAAc,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAIS,YAAY,GAAG,uBAAuB;MAC1C,IAAIT,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAE;QACvCU,YAAY,IAAI,IAAIT,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACW,MAAM,IAAIV,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACS,OAAO,EAAE;MACnF;MACA,IAAIZ,YAAY,EAAE;QACdA,YAAY,CAACa,YAAY,EAAE,OAAO,CAAC;MACvC;IACJ,CAAC,SAAS;MACNnB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IACHH,IAAI;IACJE,SAAS;IACTE,gBAAgB;IAChBW,gBAAgB;IAChBP,cAAc;IACdL;EACJ,CAAC;AACL,CAAC;AAACJ,EAAA,CApEIH,aAAa;AAsEnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}