{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization\\\\index.js\",\n  _s = $RefreshSig$();\n// [START_IMPORTS]\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\n\n// Import modular utility functions\nimport { processDragDrop, handleDragStart, handleDragEnd, handleDragOver, handleDragLeave } from './DragDropUtils';\nimport { filterAndSortRows, getUniqueCategories, getCellColor, getCellBorderStyle } from './FilterSortUtils';\nimport { calculateCounts } from './CountCalculators';\nimport { sortRows, processRowSpans } from './RowProcessing';\nimport { addNewAttribute, handleClickInput, setInputRef } from './AttributeManagement';\n\n// Component imports\nimport TableRow from '../TableRow';\nimport ConfirmationPopup from '../ConfirmationPopup';\n// [END_IMPORTS]\n\n// [START_COMPONENT_DEFINITION]\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableVisualization = ({\n  graphData,\n  handleLabelChange,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  // [START_STATE_HOOKS]\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"all\");\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const ROWS_PER_PAGE = 50;\n\n  // Additional state management\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [sortedRows, setSortedRows] = useState([]);\n  const [rowSpans, setRowSpans] = useState({});\n  const [clusterCounts, setClusterCounts] = useState({});\n  const [objectCounts, setObjectCounts] = useState({});\n  const [confirmPopup, setConfirmPopup] = useState({\n    isOpen: false\n  });\n  const [hoveredRow, setHoveredRow] = useState(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const inputRefs = useRef({});\n  // [END_STATE_HOOKS]\n\n  // [START_MEMOIZED_ROWS]\n  const filteredAndSortedRows = useMemo(() => filterAndSortRows(sortedRows, searchTerm, filterCategory, sortConfig), [sortedRows, searchTerm, filterCategory, sortConfig]);\n  const paginatedRows = useMemo(() => {\n    const startIndex = (currentPage - 1) * ROWS_PER_PAGE;\n    return filteredAndSortedRows.slice(startIndex, startIndex + ROWS_PER_PAGE);\n  }, [filteredAndSortedRows, currentPage]);\n  // [END_MEMOIZED_ROWS]\n\n  // [START_PAGINATION_CALCULATIONS]\n  const totalPages = Math.ceil(filteredAndSortedRows.length / ROWS_PER_PAGE);\n  // [END_PAGINATION_CALCULATIONS]\n\n  // [START_EVENT_HANDLERS]\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  // [END_EVENT_HANDLERS]\n\n  // [START_PAGE_RESET_EFFECT]\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm, filterCategory]);\n  // [END_PAGE_RESET_EFFECT]\n\n  // [START_GRAPH_DATA_PROCESSING_EFFECT]\n  useEffect(() => {\n    if (graphData) {\n      const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n      const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n      const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n\n      // Create rows with relationships\n      const rows = attributes.map(attr => {\n        const parentObject = objects.find(obj => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n        const parentCluster = parentObject ? clusters.find(sys => graphData.linkDataArray.some(link => link.from === sys.key && link.to === parentObject.key)) : null;\n        return {\n          attr,\n          parentObject,\n          parentCluster\n        };\n      });\n\n      // Sort rows\n      const sorted = sortRows(rows);\n      setSortedRows(sorted);\n\n      // Process row spans\n      const spans = processRowSpans(sorted);\n      setRowSpans(spans);\n\n      // Calculate counts\n      const {\n        clusterCounts,\n        objectCounts\n      } = calculateCounts(graphData);\n      setClusterCounts(clusterCounts);\n      setObjectCounts(objectCounts);\n    }\n  }, [graphData]);\n  // [END_GRAPH_DATA_PROCESSING_EFFECT]\n\n  // [START_PROCESSED_ROWS_MEMO]\n  const processedRows = useMemo(() => {\n    let currentCluster = null;\n    return paginatedRows.map((row, index) => {\n      var _row$parentCluster;\n      // Determine if this is the first row of a new cluster\n      const isFirstInCluster = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) !== currentCluster;\n\n      // Update current cluster\n      if (isFirstInCluster) {\n        var _row$parentCluster2;\n        currentCluster = ((_row$parentCluster2 = row.parentCluster) === null || _row$parentCluster2 === void 0 ? void 0 : _row$parentCluster2.label) || 'Unlinked';\n      }\n      return {\n        ...row,\n        isFirstInCluster,\n        isStickyCluster: true // You can add logic to control this if needed\n      };\n    });\n  }, [paginatedRows]);\n  // [END_PROCESSED_ROWS_MEMO]\n\n  // [START_NO_DATA_FALLBACK]\n  if (!graphData || graphData.nodeDataArray.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '200px',\n        color: '#666'\n      },\n      children: \"No data available. Please upload a file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n  // [END_NO_DATA_FALLBACK]\n\n  // [START_RENDER_METHOD]\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    style: {\n      position: 'relative',\n      height: '100%',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '16px',\n        gap: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search nodes...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px 12px',\n            border: '1px solid #cbd5e1',\n            borderRadius: '4px',\n            fontSize: '0.875rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterCategory,\n        onChange: e => setFilterCategory(e.target.value),\n        style: {\n          padding: '8px 12px',\n          border: '1px solid #cbd5e1',\n          borderRadius: '4px',\n          fontSize: '0.875rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unlinked\",\n          children: \"Unlinked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), getUniqueCategories(sortedRows).clusters.map(cluster => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cluster,\n          children: [\"Cluster: \", cluster]\n        }, `cluster-${cluster}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)), getUniqueCategories(sortedRows).objects.map(object => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: object,\n          children: [\"Object: \", object]\n        }, `object-${object}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), confirmPopup.isOpen && /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n      onConfirm: () => addNewAttribute(graphData, setGraphData, fetchGraphData, setConfirmPopup),\n      onCancel: () => setConfirmPopup({\n        isOpen: false\n      }),\n      title: \"Add New Attribute\",\n      message: \"An unlinked attribute will be created at the top of the table. Would you like to proceed?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        borderCollapse: \"collapse\",\n        fontSize: \"0.875rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"8px\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: \"#f1f5f9\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"12px 8px\",\n              textAlign: \"left\",\n              borderBottom: \"2px solid #e2e8f0\",\n              color: \"#1e293b\",\n              fontWeight: \"600\",\n              width: \"30%\",\n              position: \"sticky\",\n              top: 0,\n              zIndex: 5,\n              backgroundColor: \"#f1f5f9\"\n            },\n            children: \"Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"12px 8px\",\n              textAlign: \"left\",\n              borderBottom: \"2px solid #e2e8f0\",\n              color: \"#1e293b\",\n              fontWeight: \"600\",\n              width: \"30%\",\n              position: \"sticky\",\n              top: 0,\n              zIndex: 5,\n              backgroundColor: \"#f1f5f9\"\n            },\n            children: \"Object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"12px 8px\",\n              textAlign: \"left\",\n              borderBottom: \"2px solid #e2e8f0\",\n              color: \"#1e293b\",\n              fontWeight: \"600\",\n              width: \"40%\",\n              position: \"sticky\",\n              top: 0,\n              zIndex: 5,\n              backgroundColor: \"#f1f5f9\"\n            },\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          row: row,\n          index: index,\n          rowSpans: rowSpans,\n          clusterCounts: clusterCounts,\n          objectCounts: objectCounts,\n          hoveredRow: hoveredRow,\n          hoveredCell: hoveredCell,\n          setHoveredRow: setHoveredRow,\n          setHoveredCell: setHoveredCell,\n          handleDragStart: (event, key, category) => handleDragStart(event, key, category, setDraggedItem),\n          handleDragEnd: event => handleDragEnd(event, setDraggedItem),\n          handleDragOver: handleDragOver,\n          handleDragLeave: handleDragLeave,\n          handleDrop: (event, targetKey, targetCategory) => processDragDrop(event, targetKey, targetCategory, graphData, setGraphData, fetchGraphData),\n          openPopup: openPopup,\n          handleClickInput: (key, currentLabel, currentName) => handleClickInput(inputRefs, openPopup, key, currentLabel, currentName),\n          handleLabelChange: handleLabelChange,\n          setInputRef: setInputRef(inputRefs),\n          isFirstInCluster: row.isFirstInCluster,\n          isStickyCluster: row.isStickyCluster,\n          getDisplayText: text => {\n            if (!text) return \"\";\n            const lines = text.split('\\n');\n            const firstTwoLines = lines.slice(0, 2).join('\\n');\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                display: 'inline-block',\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  overflow: 'hidden',\n                  whiteSpace: 'pre-line',\n                  maxWidth: \"calc(100% - 20px)\",\n                  marginRight: \"2px\",\n                  textOverflow: \"ellipsis\",\n                  display: \"-webkit-box\",\n                  WebkitLineClamp: 2,\n                  WebkitBoxOrient: \"vertical\"\n                },\n                dangerouslySetInnerHTML: {\n                  __html: firstTwoLines.substring(0, 100)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 41\n              }, this), text && text.length > 100 && /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                style: {\n                  position: 'absolute',\n                  bottom: '2px',\n                  right: '2px',\n                  cursor: \"pointer\",\n                  color: \"#64748b\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"11\",\n                  cy: \"11\",\n                  r: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"16.65\",\n                  y2: \"16.65\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"11\",\n                  y1: \"8\",\n                  x2: \"11\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"8\",\n                  y1: \"11\",\n                  x2: \"14\",\n                  y2: \"11\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 37\n            }, this);\n          },\n          getCellColor: getCellColor,\n          getCellBorderStyle: getCellBorderStyle\n        }, row.attr.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '16px',\n        gap: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevPage,\n        disabled: currentPage === 1,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: currentPage === 1 ? '#e2e8f0' : '#1e40af',\n          color: currentPage === 1 ? '#64748b' : 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: currentPage === 1 ? 'not-allowed' : 'pointer'\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === totalPages,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: currentPage === totalPages ? '#e2e8f0' : '#1e40af',\n          color: currentPage === totalPages ? '#64748b' : 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: currentPage === totalPages ? 'not-allowed' : 'pointer'\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n  // [END_RENDER_METHOD]\n};\n_s(TableVisualization, \"RV0/MNXYHSxfuvZMAwdWzbVSDlc=\");\n_c = TableVisualization;\nexport default TableVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","processDragDrop","handleDragStart","handleDragEnd","handleDragOver","handleDragLeave","filterAndSortRows","getUniqueCategories","getCellColor","getCellBorderStyle","calculateCounts","sortRows","processRowSpans","addNewAttribute","handleClickInput","setInputRef","TableRow","ConfirmationPopup","jsxDEV","_jsxDEV","TableVisualization","graphData","handleLabelChange","openPopup","setGraphData","fetchGraphData","_s","searchTerm","setSearchTerm","filterCategory","setFilterCategory","sortConfig","setSortConfig","key","direction","currentPage","setCurrentPage","ROWS_PER_PAGE","draggedItem","setDraggedItem","sortedRows","setSortedRows","rowSpans","setRowSpans","clusterCounts","setClusterCounts","objectCounts","setObjectCounts","confirmPopup","setConfirmPopup","isOpen","hoveredRow","setHoveredRow","hoveredCell","setHoveredCell","inputRefs","filteredAndSortedRows","paginatedRows","startIndex","slice","totalPages","Math","ceil","length","handleSort","handleNextPage","handlePrevPage","clusters","nodeDataArray","filter","node","category","objects","attributes","rows","map","attr","parentObject","find","obj","linkDataArray","some","link","from","to","parentCluster","sys","sorted","spans","processedRows","currentCluster","row","index","_row$parentCluster","isFirstInCluster","label","_row$parentCluster2","isStickyCluster","style","display","justifyContent","alignItems","height","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","position","overflowY","marginBottom","gap","flex","type","placeholder","value","onChange","e","target","width","padding","border","borderRadius","fontSize","cluster","object","onConfirm","onCancel","title","message","borderCollapse","backgroundColor","overflow","textAlign","borderBottom","fontWeight","top","zIndex","event","handleDrop","targetKey","targetCategory","currentLabel","currentName","getDisplayText","text","lines","split","firstTwoLines","join","whiteSpace","maxWidth","marginRight","textOverflow","WebkitLineClamp","WebkitBoxOrient","dangerouslySetInnerHTML","__html","substring","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","bottom","right","cursor","cx","cy","r","x1","y1","x2","y2","marginTop","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization/index.js"],"sourcesContent":["// [START_IMPORTS]\r\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\r\n\r\n// Import modular utility functions\r\nimport { \r\n    processDragDrop,\r\n    handleDragStart,\r\n    handleDragEnd,\r\n    handleDragOver,\r\n    handleDragLeave\r\n} from './DragDropUtils';\r\nimport { \r\n    filterAndSortRows, \r\n    getUniqueCategories,\r\n    getCellColor,\r\n    getCellBorderStyle\r\n} from './FilterSortUtils';\r\nimport { calculateCounts } from './CountCalculators';\r\nimport { \r\n    sortRows, \r\n    processRowSpans \r\n} from './RowProcessing';\r\nimport { \r\n    addNewAttribute,\r\n    handleClickInput,\r\n    setInputRef \r\n} from './AttributeManagement';\r\n\r\n// Component imports\r\nimport TableRow from '../TableRow';\r\nimport ConfirmationPopup from '../ConfirmationPopup';\r\n// [END_IMPORTS]\r\n\r\n// [START_COMPONENT_DEFINITION]\r\nconst TableVisualization = ({ \r\n    graphData, \r\n    handleLabelChange, \r\n    openPopup, \r\n    setGraphData, \r\n    fetchGraphData \r\n}) => {\r\n    // [START_STATE_HOOKS]\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [filterCategory, setFilterCategory] = useState(\"all\");\r\n    const [sortConfig, setSortConfig] = useState({ \r\n        key: null, \r\n        direction: 'asc' \r\n    });\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const ROWS_PER_PAGE = 50;\r\n\r\n    // Additional state management\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const [sortedRows, setSortedRows] = useState([]);\r\n    const [rowSpans, setRowSpans] = useState({});\r\n    const [clusterCounts, setClusterCounts] = useState({});\r\n    const [objectCounts, setObjectCounts] = useState({});\r\n    const [confirmPopup, setConfirmPopup] = useState({ isOpen: false });\r\n    const [hoveredRow, setHoveredRow] = useState(null);\r\n    const [hoveredCell, setHoveredCell] = useState(null);\r\n    const inputRefs = useRef({});\r\n    // [END_STATE_HOOKS]\r\n\r\n    // [START_MEMOIZED_ROWS]\r\n    const filteredAndSortedRows = useMemo(() => \r\n        filterAndSortRows(sortedRows, searchTerm, filterCategory, sortConfig), \r\n        [sortedRows, searchTerm, filterCategory, sortConfig]\r\n    );\r\n\r\n    const paginatedRows = useMemo(() => {\r\n        const startIndex = (currentPage - 1) * ROWS_PER_PAGE;\r\n        return filteredAndSortedRows.slice(startIndex, startIndex + ROWS_PER_PAGE);\r\n    }, [filteredAndSortedRows, currentPage]);\r\n    // [END_MEMOIZED_ROWS]\r\n\r\n// [START_PAGINATION_CALCULATIONS]\r\n    const totalPages = Math.ceil(filteredAndSortedRows.length / ROWS_PER_PAGE);\r\n    // [END_PAGINATION_CALCULATIONS]\r\n\r\n    // [START_EVENT_HANDLERS]\r\n    const handleSort = (key) => {\r\n        let direction = 'asc';\r\n        if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n            direction = 'desc';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n    // [END_EVENT_HANDLERS]\r\n\r\n    // [START_PAGE_RESET_EFFECT]\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [searchTerm, filterCategory]);\r\n    // [END_PAGE_RESET_EFFECT]\r\n\r\n    // [START_GRAPH_DATA_PROCESSING_EFFECT]\r\n    useEffect(() => {\r\n        if (graphData) {\r\n            const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n            const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n            const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n            // Create rows with relationships\r\n            const rows = attributes.map((attr) => {\r\n                const parentObject = objects.find((obj) =>\r\n                    graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n                );\r\n\r\n                const parentCluster = parentObject\r\n                    ? clusters.find((sys) =>\r\n                        graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n                    )\r\n                    : null;\r\n\r\n                return { attr, parentObject, parentCluster };\r\n            });\r\n\r\n            // Sort rows\r\n            const sorted = sortRows(rows);\r\n            setSortedRows(sorted);\r\n\r\n            // Process row spans\r\n            const spans = processRowSpans(sorted);\r\n            setRowSpans(spans);\r\n\r\n            // Calculate counts\r\n            const { clusterCounts, objectCounts } = calculateCounts(graphData);\r\n            setClusterCounts(clusterCounts);\r\n            setObjectCounts(objectCounts);\r\n        }\r\n    }, [graphData]);\r\n    // [END_GRAPH_DATA_PROCESSING_EFFECT]\r\n\r\n    // [START_PROCESSED_ROWS_MEMO]\r\n    const processedRows = useMemo(() => {\r\n        let currentCluster = null;\r\n        return paginatedRows.map((row, index) => {\r\n            // Determine if this is the first row of a new cluster\r\n            const isFirstInCluster = row.parentCluster?.label !== currentCluster;\r\n            \r\n            // Update current cluster\r\n            if (isFirstInCluster) {\r\n                currentCluster = row.parentCluster?.label || 'Unlinked';\r\n            }\r\n\r\n            return {\r\n                ...row,\r\n                isFirstInCluster,\r\n                isStickyCluster: true  // You can add logic to control this if needed\r\n            };\r\n        });\r\n    }, [paginatedRows]);\r\n    // [END_PROCESSED_ROWS_MEMO]\r\n\r\n    // [START_NO_DATA_FALLBACK]\r\n    if (!graphData || graphData.nodeDataArray.length === 0) {\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '200px',\r\n                color: '#666'\r\n            }}>\r\n                No data available. Please upload a file.\r\n            </div>\r\n        );\r\n    }\r\n    // [END_NO_DATA_FALLBACK]\r\n\r\n// [START_RENDER_METHOD]\r\n    return (\r\n        <div \r\n            className=\"table-container\" \r\n            style={{ \r\n                position: 'relative', \r\n                height: '100%', \r\n                overflowY: 'auto' \r\n            }}\r\n        >\r\n            {/* [START_SEARCH_AND_FILTER_CONTROLS] */}\r\n            <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'space-between', \r\n                marginBottom: '16px',\r\n                gap: '16px'\r\n            }}>\r\n                {/* Search Input */}\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    flex: 1 \r\n                }}>\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Search nodes...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: '8px 12px',\r\n                            border: '1px solid #cbd5e1',\r\n                            borderRadius: '4px',\r\n                            fontSize: '0.875rem'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {/* Category Filter */}\r\n                <select \r\n                    value={filterCategory}\r\n                    onChange={(e) => setFilterCategory(e.target.value)}\r\n                    style={{\r\n                        padding: '8px 12px',\r\n                        border: '1px solid #cbd5e1',\r\n                        borderRadius: '4px',\r\n                        fontSize: '0.875rem'\r\n                    }}\r\n                >\r\n                    <option value=\"all\">All Categories</option>\r\n                    <option value=\"unlinked\">Unlinked</option>\r\n                    {getUniqueCategories(sortedRows).clusters.map(cluster => (\r\n                        <option key={`cluster-${cluster}`} value={cluster}>\r\n                            Cluster: {cluster}\r\n                        </option>\r\n                    ))}\r\n                    {getUniqueCategories(sortedRows).objects.map(object => (\r\n                        <option key={`object-${object}`} value={object}>\r\n                            Object: {object}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            {/* [END_SEARCH_AND_FILTER_CONTROLS] */}\r\n\r\n            {/* [START_CONFIRMATION_POPUP] */}\r\n            {confirmPopup.isOpen && (\r\n                <ConfirmationPopup \r\n                    onConfirm={() => addNewAttribute(\r\n                        graphData, \r\n                        setGraphData, \r\n                        fetchGraphData, \r\n                        setConfirmPopup\r\n                    )}\r\n                    onCancel={() => setConfirmPopup({ isOpen: false })}\r\n                    title=\"Add New Attribute\"\r\n                    message=\"An unlinked attribute will be created at the top of the table. Would you like to proceed?\"\r\n                />\r\n            )}\r\n            {/* [END_CONFIRMATION_POPUP] */}\r\n\r\n            {/* [START_TABLE_CONTAINER] */}\r\n            <table style={{ \r\n                width: \"100%\", \r\n                borderCollapse: \"collapse\",\r\n                fontSize: \"0.875rem\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"8px\",\r\n                overflow: \"hidden\"\r\n            }}>\r\n                {/* [START_TABLE_HEADER] */}\r\n                <thead>\r\n                    <tr style={{ backgroundColor: \"#f1f5f9\" }}>\r\n                        <th style={{ \r\n                            padding: \"12px 8px\", \r\n                            textAlign: \"left\", \r\n                            borderBottom: \"2px solid #e2e8f0\", \r\n                            color: \"#1e293b\",\r\n                            fontWeight: \"600\",\r\n                            width: \"30%\",\r\n                            position: \"sticky\",\r\n                            top: 0,\r\n                            zIndex: 5,\r\n                            backgroundColor: \"#f1f5f9\"\r\n                        }}>\r\n                            Cluster\r\n                        </th>\r\n                        <th style={{ \r\n                            padding: \"12px 8px\", \r\n                            textAlign: \"left\", \r\n                            borderBottom: \"2px solid #e2e8f0\", \r\n                            color: \"#1e293b\",\r\n                            fontWeight: \"600\",\r\n                            width: \"30%\",\r\n                            position: \"sticky\",\r\n                            top: 0,\r\n                            zIndex: 5,\r\n                            backgroundColor: \"#f1f5f9\"\r\n                        }}>\r\n                            Object\r\n                        </th>\r\n                        <th style={{ \r\n                            padding: \"12px 8px\", \r\n                            textAlign: \"left\", \r\n                            borderBottom: \"2px solid #e2e8f0\", \r\n                            color: \"#1e293b\",\r\n                            fontWeight: \"600\",\r\n                            width: \"40%\",\r\n                            position: \"sticky\",\r\n                            top: 0,\r\n                            zIndex: 5,\r\n                            backgroundColor: \"#f1f5f9\"\r\n                        }}>\r\n                            Attribute\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                {/* [END_TABLE_HEADER] */}\r\n\r\n                {/* [START_TABLE_BODY] */}\r\n                <tbody>\r\n                    {processedRows.map((row, index) => (\r\n                        <TableRow \r\n                            key={row.attr.key}\r\n                            row={row}\r\n                            index={index}\r\n                            rowSpans={rowSpans}\r\n                            clusterCounts={clusterCounts}\r\n                            objectCounts={objectCounts}\r\n                            hoveredRow={hoveredRow}\r\n                            hoveredCell={hoveredCell}\r\n                            setHoveredRow={setHoveredRow}\r\n                            setHoveredCell={setHoveredCell}\r\n                            handleDragStart={(event, key, category) => \r\n                                handleDragStart(event, key, category, setDraggedItem)\r\n                            }\r\n                            handleDragEnd={(event) => \r\n                                handleDragEnd(event, setDraggedItem)\r\n                            }\r\n                            handleDragOver={handleDragOver}\r\n                            handleDragLeave={handleDragLeave}\r\n                            handleDrop={(event, targetKey, targetCategory) => \r\n                                processDragDrop(\r\n                                    event, \r\n                                    targetKey, \r\n                                    targetCategory, \r\n                                    graphData, \r\n                                    setGraphData, \r\n                                    fetchGraphData\r\n                                )\r\n                            }\r\n                            openPopup={openPopup}\r\n                            handleClickInput={(key, currentLabel, currentName) => \r\n                                handleClickInput(\r\n                                    inputRefs, \r\n                                    openPopup, \r\n                                    key, \r\n                                    currentLabel, \r\n                                    currentName\r\n                                )\r\n                            }\r\n                            handleLabelChange={handleLabelChange}\r\n                            setInputRef={setInputRef(inputRefs)}\r\n                            isFirstInCluster={row.isFirstInCluster}\r\n                            isStickyCluster={row.isStickyCluster}\r\n                            getDisplayText={(text) => {\r\n                                if (!text) return \"\";\r\n                                const lines = text.split('\\n');\r\n                                const firstTwoLines = lines.slice(0, 2).join('\\n');\r\n                                \r\n                                return (\r\n                                    <div style={{ position: 'relative', display: 'inline-block', width: \"100%\" }}>\r\n                                        <div \r\n                                            style={{ \r\n                                                overflow: 'hidden', \r\n                                                whiteSpace: 'pre-line', \r\n                                                maxWidth: \"calc(100% - 20px)\", \r\n                                                marginRight: \"2px\",\r\n                                                textOverflow: \"ellipsis\",\r\n                                                display: \"-webkit-box\",\r\n                                                WebkitLineClamp: 2,\r\n                                                WebkitBoxOrient: \"vertical\"\r\n                                            }}\r\n                                            dangerouslySetInnerHTML={{ __html: firstTwoLines.substring(0, 100) }}\r\n                                        />\r\n                                        {text && text.length > 100 && (\r\n                                            <svg \r\n                                                xmlns=\"http://www.w3.org/2000/svg\" \r\n                                                width=\"16\" \r\n                                                height=\"16\" \r\n                                                viewBox=\"0 0 24 24\" \r\n                                                fill=\"none\" \r\n                                                stroke=\"currentColor\" \r\n                                                strokeWidth=\"2\" \r\n                                                strokeLinecap=\"round\" \r\n                                                strokeLinejoin=\"round\"\r\n                                                style={{ \r\n                                                    position: 'absolute', \r\n                                                    bottom: '2px', \r\n                                                    right: '2px', \r\n                                                    cursor: \"pointer\",\r\n                                                    color: \"#64748b\"\r\n                                                }}\r\n                                            >\r\n                                                <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n                                                <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n                                                <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\r\n                                                <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\r\n                                            </svg>\r\n                                        )}\r\n                                    </div>\r\n                                );\r\n                            }}\r\n                            getCellColor={getCellColor}\r\n                            getCellBorderStyle={getCellBorderStyle}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n                {/* [END_TABLE_BODY] */}\r\n            </table>\r\n            {/* [END_TABLE_CONTAINER] */}\r\n\r\n            {/* [START_PAGINATION_CONTROLS] */}\r\n            {totalPages > 1 && (\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: '16px',\r\n                    gap: '12px'\r\n                }}>\r\n                    <button \r\n                        onClick={handlePrevPage}\r\n                        disabled={currentPage === 1}\r\n                        style={{\r\n                            padding: '8px 16px',\r\n                            backgroundColor: currentPage === 1 ? '#e2e8f0' : '#1e40af',\r\n                            color: currentPage === 1 ? '#64748b' : 'white',\r\n                            border: 'none',\r\n                            borderRadius: '4px',\r\n                            cursor: currentPage === 1 ? 'not-allowed' : 'pointer'\r\n                        }}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n                    <span>\r\n                        Page {currentPage} of {totalPages}\r\n                    </span>\r\n                    <button \r\n                        onClick={handleNextPage}\r\n                        disabled={currentPage === totalPages}\r\n                        style={{\r\n                            padding: '8px 16px',\r\n                            backgroundColor: currentPage === totalPages ? '#e2e8f0' : '#1e40af',\r\n                            color: currentPage === totalPages ? '#64748b' : 'white',\r\n                            border: 'none',\r\n                            borderRadius: '4px',\r\n                            cursor: currentPage === totalPages ? 'not-allowed' : 'pointer'\r\n                        }}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {/* [END_PAGINATION_CONTROLS] */}\r\n        </div>\r\n    );\r\n    // [END_RENDER_METHOD]\r\n};\r\n\r\nexport default TableVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}