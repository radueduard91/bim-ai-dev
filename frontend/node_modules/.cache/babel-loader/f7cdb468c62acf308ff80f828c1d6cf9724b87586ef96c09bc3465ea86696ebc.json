{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\LabelEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LabelEditor = ({\n  graphData,\n  setGraphData\n}) => {\n  _s();\n  const [popup, setPopup] = useState({\n    isOpen: false,\n    key: null,\n    value: \"\"\n  });\n  const openPopup = (key, currentValue) => {\n    setPopup({\n      isOpen: true,\n      key,\n      value: currentValue\n    });\n  };\n  const closePopup = () => {\n    setPopup({\n      isOpen: false,\n      key: null,\n      value: \"\"\n    });\n  };\n  const savePopupChanges = () => {\n    const updatedValue = popup.value;\n    setGraphData(prev => ({\n      ...prev,\n      nodeDataArray: prev.nodeDataArray.map(node => node.key === popup.key ? {\n        ...node,\n        hoverLabel: updatedValue\n      } : node)\n    }));\n    closePopup();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: popup.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        background: \"white\",\n        border: \"1px solid black\",\n        padding: \"20px\",\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"40\",\n        value: popup.value,\n        onChange: e => setPopup({\n          ...popup,\n          value: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: savePopupChanges,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LabelEditor, \"davsCGzfo5d33A0sfpHaMPyzZ8Y=\");\n_c = LabelEditor;\nexport default LabelEditor;\nvar _c;\n$RefreshReg$(_c, \"LabelEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LabelEditor","graphData","setGraphData","_s","popup","setPopup","isOpen","key","value","openPopup","currentValue","closePopup","savePopupChanges","updatedValue","prev","nodeDataArray","map","node","hoverLabel","children","style","position","top","left","transform","background","border","padding","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onChange","e","target","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/LabelEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst LabelEditor = ({ graphData, setGraphData }) => {\r\n  const [popup, setPopup] = useState({ isOpen: false, key: null, value: \"\" });\r\n\r\n  const openPopup = (key, currentValue) => {\r\n    setPopup({ isOpen: true, key, value: currentValue });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setPopup({ isOpen: false, key: null, value: \"\" });\r\n  };\r\n\r\n  const savePopupChanges = () => {\r\n    const updatedValue = popup.value;\r\n    setGraphData((prev) => ({\r\n      ...prev,\r\n      nodeDataArray: prev.nodeDataArray.map((node) =>\r\n        node.key === popup.key ? { ...node, hoverLabel: updatedValue } : node\r\n      ),\r\n    }));\r\n    closePopup();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {popup.isOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            background: \"white\",\r\n            border: \"1px solid black\",\r\n            padding: \"20px\",\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <h3>Edit Label</h3>\r\n          <textarea\r\n            rows=\"5\"\r\n            cols=\"40\"\r\n            value={popup.value}\r\n            onChange={(e) => setPopup({ ...popup, value: e.target.value })}\r\n          />\r\n          <br />\r\n          <button onClick={savePopupChanges}>Save</button>\r\n          <button onClick={closePopup} style={{ marginLeft: \"10px\" }}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}