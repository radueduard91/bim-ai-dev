{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\GraphVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as go from \"gojs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphVisualization = ({\n  graphData,\n  dimensions,\n  setDimensions\n}) => {\n  _s();\n  const diagramRef = useRef();\n  useEffect(() => {\n    if (graphData) {\n      const $ = go.GraphObject.make;\n\n      // Dispose of the old diagram if it exists\n      if (diagramRef.current) {\n        const existingDiagram = go.Diagram.fromDiv(diagramRef.current);\n        if (existingDiagram) {\n          existingDiagram.div = null; // Clears the previous diagram instance\n        }\n      }\n\n      // Create a new diagram with improved styling\n      const myDiagram = $(go.Diagram, diagramRef.current, {\n        \"undoManager.isEnabled\": true,\n        layout: $(go.TreeLayout, {\n          angle: 0,\n          layerSpacing: 60,\n          // Increased spacing between layers\n          nodeSpacing: 30 // Increased spacing between nodes\n        }),\n        initialContentAlignment: go.Spot.Center,\n        // Center the diagram in the viewport\n        \"animationManager.isEnabled\": true,\n        // Enable animations\n        \"toolManager.hoverDelay\": 100,\n        // Faster hover response\n        \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom // Mouse wheel zooms instead of scrolls\n      });\n\n      // Define node templates based on category\n      const nodeTemplates = new go.Map();\n\n      // System (Cluster) Node Template\n      nodeTemplates.add(\"system\", $(go.Node, \"Auto\", {\n        locationSpot: go.Spot.Center,\n        selectionAdorned: true,\n        selectionObjectName: \"SHAPE\",\n        mouseEnter: (e, obj) => showHover(e, obj),\n        mouseLeave: (e, obj) => hideHover(e, obj)\n      },\n      // Node shape with gradient fill\n      $(go.Shape, \"Rectangle\", {\n        name: \"SHAPE\",\n        fill: $(go.Brush, \"Linear\", {\n          0: \"#1E40AF\",\n          // Dark blue\n          1: \"#3B82F6\" // Medium blue\n        }),\n        stroke: \"#1E3A8A\",\n        strokeWidth: 2,\n        // Removed shadow properties\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true,\n        cursor: \"pointer\",\n        width: 160,\n        height: 60\n      }),\n      // Header with icon\n      $(go.Panel, \"Horizontal\", {\n        alignment: go.Spot.TopCenter,\n        alignmentFocus: go.Spot.TopCenter,\n        margin: 8\n      }, $(go.Shape, \"Circle\", {\n        width: 16,\n        height: 16,\n        fill: \"white\",\n        margin: new go.Margin(0, 5, 0, 0)\n      }), $(go.TextBlock, {\n        font: \"bold 14px sans-serif\",\n        stroke: \"white\",\n        textAlign: \"center\",\n        margin: 2,\n        maxSize: new go.Size(140, NaN),\n        wrap: go.TextBlock.WrapFit\n      }, new go.Binding(\"text\", \"label\"))),\n      // Hover panel\n      $(go.Panel, \"Auto\", {\n        name: \"HOVER_PANEL\",\n        visible: false,\n        alignment: go.Spot.Bottom,\n        alignmentFocus: go.Spot.Top\n      }, $(go.Shape, \"RoundedRectangle\", {\n        fill: \"lightyellow\",\n        stroke: \"#E6C700\",\n        strokeWidth: 1,\n        parameter1: 4\n      }), $(go.TextBlock, {\n        margin: 8,\n        font: \"12px sans-serif\",\n        stroke: \"#333\",\n        textAlign: \"center\",\n        wrap: go.TextBlock.WrapFit,\n        maxSize: new go.Size(200, NaN)\n      }, new go.Binding(\"text\", \"hoverLabel\")))));\n\n      // Object Node Template\n      nodeTemplates.add(\"object\", $(go.Node, \"Auto\", {\n        locationSpot: go.Spot.Center,\n        selectionAdorned: true,\n        selectionObjectName: \"SHAPE\",\n        mouseEnter: (e, obj) => showHover(e, obj),\n        mouseLeave: (e, obj) => hideHover(e, obj)\n      }, $(go.Shape, \"RoundedRectangle\", {\n        name: \"SHAPE\",\n        fill: $(go.Brush, \"Linear\", {\n          0: \"#065F46\",\n          // Dark green\n          1: \"#10B981\" // Medium green\n        }),\n        stroke: \"#064E3B\",\n        strokeWidth: 2,\n        // Removed shadow properties\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true,\n        cursor: \"pointer\",\n        width: 140,\n        height: 50\n      }), $(go.Panel, \"Horizontal\", {\n        alignment: go.Spot.TopCenter,\n        alignmentFocus: go.Spot.TopCenter,\n        margin: 8\n      }, $(go.Shape, \"Triangle\", {\n        width: 14,\n        height: 14,\n        fill: \"white\",\n        margin: new go.Margin(0, 5, 0, 0)\n      }), $(go.TextBlock, {\n        font: \"bold 13px sans-serif\",\n        stroke: \"white\",\n        margin: 2,\n        maxSize: new go.Size(120, NaN),\n        wrap: go.TextBlock.WrapFit\n      }, new go.Binding(\"text\", \"label\"))), $(go.Panel, \"Auto\", {\n        name: \"HOVER_PANEL\",\n        visible: false,\n        alignment: go.Spot.Bottom,\n        alignmentFocus: go.Spot.Top\n      }, $(go.Shape, \"RoundedRectangle\", {\n        fill: \"lightyellow\",\n        stroke: \"#E6C700\",\n        strokeWidth: 1,\n        parameter1: 4\n      }), $(go.TextBlock, {\n        margin: 8,\n        font: \"12px sans-serif\",\n        stroke: \"#333\",\n        textAlign: \"center\",\n        wrap: go.TextBlock.WrapFit,\n        maxSize: new go.Size(200, NaN)\n      }, new go.Binding(\"text\", \"hoverLabel\")))));\n\n      // Attribute Node Template\n      nodeTemplates.add(\"attribute\", $(go.Node, \"Auto\", {\n        locationSpot: go.Spot.Center,\n        selectionAdorned: true,\n        selectionObjectName: \"SHAPE\",\n        mouseEnter: (e, obj) => showHover(e, obj),\n        mouseLeave: (e, obj) => hideHover(e, obj)\n      }, $(go.Shape, \"RoundedRectangle\", {\n        name: \"SHAPE\",\n        fill: $(go.Brush, \"Linear\", {\n          0: \"#9D174D\",\n          // Dark purple\n          1: \"#EC4899\" // Medium pink\n        }),\n        stroke: \"#831843\",\n        strokeWidth: 2,\n        // Removed shadow properties\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true,\n        cursor: \"pointer\",\n        width: 120,\n        height: 40\n      }), $(go.Panel, \"Horizontal\", {\n        alignment: go.Spot.TopCenter,\n        alignmentFocus: go.Spot.TopCenter,\n        margin: 6\n      }, $(go.Shape, \"Diamond\", {\n        width: 12,\n        height: 12,\n        fill: \"white\",\n        margin: new go.Margin(0, 5, 0, 0)\n      }), $(go.TextBlock, {\n        font: \"12px sans-serif\",\n        stroke: \"white\",\n        margin: 2,\n        maxSize: new go.Size(100, NaN),\n        wrap: go.TextBlock.WrapFit\n      }, new go.Binding(\"text\", \"label\"))), $(go.Panel, \"Auto\", {\n        name: \"HOVER_PANEL\",\n        visible: false,\n        alignment: go.Spot.Bottom,\n        alignmentFocus: go.Spot.Top\n      }, $(go.Shape, \"RoundedRectangle\", {\n        fill: \"lightyellow\",\n        stroke: \"#E6C700\",\n        strokeWidth: 1,\n        parameter1: 4\n      }), $(go.TextBlock, {\n        margin: 8,\n        font: \"12px sans-serif\",\n        stroke: \"#333\",\n        textAlign: \"center\",\n        wrap: go.TextBlock.WrapFit,\n        maxSize: new go.Size(200, NaN)\n      }, new go.Binding(\"text\", \"hoverLabel\")))));\n\n      // Set the node template map\n      myDiagram.nodeTemplateMap = nodeTemplates;\n\n      // Enhanced link template with removed shadow properties\n      myDiagram.linkTemplate = $(go.Link, {\n        routing: go.Link.AvoidsNodes,\n        curve: go.Link.JumpOver,\n        corner: 10,\n        reshapable: true,\n        relinkableFrom: true,\n        relinkableTo: true\n        // Removed shadow properties\n      }, $(go.Shape, {\n        stroke: \"#555\",\n        strokeWidth: 2\n      }), $(go.Shape, {\n        toArrow: \"Triangle\",\n        fill: \"#555\",\n        stroke: null,\n        scale: 1.2\n      }));\n\n      // Hover functions\n      function showHover(e, obj) {\n        const hoverPanel = obj.findObject(\"HOVER_PANEL\");\n        if (hoverPanel && obj.data.hoverLabel) {\n          hoverPanel.visible = true;\n        }\n      }\n      function hideHover(e, obj) {\n        const hoverPanel = obj.findObject(\"HOVER_PANEL\");\n        if (hoverPanel) {\n          hoverPanel.visible = false;\n        }\n      }\n\n      // Set the model data\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\n\n      // Adjust diagram dimensions after layout is complete\n      myDiagram.addDiagramListener(\"InitialLayoutCompleted\", () => {\n        const bounds = myDiagram.documentBounds;\n        setDimensions({\n          width: `${Math.ceil(bounds.width + 50)}px`,\n          // Add some padding\n          height: `${Math.ceil(bounds.height + 50)}px`\n        });\n      });\n    }\n  }, [graphData, setDimensions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: diagramRef,\n      style: {\n        width: \"100%\",\n        height: dimensions.height,\n        border: \"1px solid #e2e8f0\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.05)\",\n        background: \"#f8fafc\",\n        transition: \"all 0.3s ease\"\n      },\n      children: !graphData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          color: \"#64748b\",\n          fontSize: \"16px\",\n          fontStyle: \"italic\"\n        },\n        children: \"Graph will be displayed here after uploading a file.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphVisualization, \"Iu16wR3n3MQey8BGIV6Jc19t6GQ=\");\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","go","jsxDEV","_jsxDEV","GraphVisualization","graphData","dimensions","setDimensions","_s","diagramRef","$","GraphObject","make","current","existingDiagram","Diagram","fromDiv","div","myDiagram","layout","TreeLayout","angle","layerSpacing","nodeSpacing","initialContentAlignment","Spot","Center","ToolManager","WheelZoom","nodeTemplates","Map","add","Node","locationSpot","selectionAdorned","selectionObjectName","mouseEnter","e","obj","showHover","mouseLeave","hideHover","Shape","name","fill","Brush","stroke","strokeWidth","portId","fromLinkable","toLinkable","cursor","width","height","Panel","alignment","TopCenter","alignmentFocus","margin","Margin","TextBlock","font","textAlign","maxSize","Size","NaN","wrap","WrapFit","Binding","visible","Bottom","Top","parameter1","nodeTemplateMap","linkTemplate","Link","routing","AvoidsNodes","curve","JumpOver","corner","reshapable","relinkableFrom","relinkableTo","toArrow","scale","hoverPanel","findObject","data","hoverLabel","model","GraphLinksModel","nodeDataArray","linkDataArray","addDiagramListener","bounds","documentBounds","Math","ceil","className","children","ref","style","border","borderRadius","boxShadow","background","transition","display","alignItems","justifyContent","color","fontSize","fontStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/GraphVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as go from \"gojs\";\r\n\r\nconst GraphVisualization = ({ graphData, dimensions, setDimensions }) => {\r\n  const diagramRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (graphData) {\r\n      const $ = go.GraphObject.make;\r\n\r\n      // Dispose of the old diagram if it exists\r\n      if (diagramRef.current) {\r\n        const existingDiagram = go.Diagram.fromDiv(diagramRef.current);\r\n        if (existingDiagram) {\r\n          existingDiagram.div = null; // Clears the previous diagram instance\r\n        }\r\n      }\r\n\r\n      // Create a new diagram with improved styling\r\n      const myDiagram = $(go.Diagram, diagramRef.current, {\r\n        \"undoManager.isEnabled\": true,\r\n        layout: $(go.TreeLayout, { \r\n          angle: 0, \r\n          layerSpacing: 60,  // Increased spacing between layers\r\n          nodeSpacing: 30    // Increased spacing between nodes\r\n        }),\r\n        initialContentAlignment: go.Spot.Center, // Center the diagram in the viewport\r\n        \"animationManager.isEnabled\": true,      // Enable animations\r\n        \"toolManager.hoverDelay\": 100,          // Faster hover response\r\n        \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom, // Mouse wheel zooms instead of scrolls\r\n      });\r\n\r\n      // Define node templates based on category\r\n      const nodeTemplates = new go.Map();\r\n      \r\n      // System (Cluster) Node Template\r\n      nodeTemplates.add(\"system\",\r\n        $(go.Node, \"Auto\", \r\n          {\r\n            locationSpot: go.Spot.Center,\r\n            selectionAdorned: true,\r\n            selectionObjectName: \"SHAPE\",\r\n            mouseEnter: (e, obj) => showHover(e, obj),\r\n            mouseLeave: (e, obj) => hideHover(e, obj),\r\n          },\r\n          // Node shape with gradient fill\r\n          $(go.Shape, \"Rectangle\", {\r\n              name: \"SHAPE\",\r\n              fill: $(go.Brush, \"Linear\", { \r\n                0: \"#1E40AF\", // Dark blue\r\n                1: \"#3B82F6\"  // Medium blue\r\n              }),\r\n              stroke: \"#1E3A8A\",\r\n              strokeWidth: 2,\r\n              // Removed shadow properties\r\n              portId: \"\",\r\n              fromLinkable: true,\r\n              toLinkable: true,\r\n              cursor: \"pointer\",\r\n              width: 160,\r\n              height: 60,\r\n            }),\r\n          // Header with icon\r\n          $(go.Panel, \"Horizontal\", \r\n            { alignment: go.Spot.TopCenter, alignmentFocus: go.Spot.TopCenter, margin: 8 },\r\n            $(go.Shape, \"Circle\", {\r\n              width: 16, \r\n              height: 16, \r\n              fill: \"white\",\r\n              margin: new go.Margin(0, 5, 0, 0)\r\n            }),\r\n            $(go.TextBlock, \r\n              { \r\n                font: \"bold 14px sans-serif\", \r\n                stroke: \"white\",\r\n                textAlign: \"center\",\r\n                margin: 2,\r\n                maxSize: new go.Size(140, NaN),\r\n                wrap: go.TextBlock.WrapFit\r\n              },\r\n              new go.Binding(\"text\", \"label\"))\r\n          ),\r\n          // Hover panel\r\n          $(go.Panel, \"Auto\",\r\n            {\r\n              name: \"HOVER_PANEL\",\r\n              visible: false,\r\n              alignment: go.Spot.Bottom,\r\n              alignmentFocus: go.Spot.Top\r\n            },\r\n            $(go.Shape, \"RoundedRectangle\", {\r\n              fill: \"lightyellow\",\r\n              stroke: \"#E6C700\",\r\n              strokeWidth: 1,\r\n              parameter1: 4\r\n            }),\r\n            $(go.TextBlock, {\r\n              margin: 8,\r\n              font: \"12px sans-serif\",\r\n              stroke: \"#333\",\r\n              textAlign: \"center\",\r\n              wrap: go.TextBlock.WrapFit,\r\n              maxSize: new go.Size(200, NaN)\r\n            }, new go.Binding(\"text\", \"hoverLabel\"))\r\n          )\r\n        )\r\n      );\r\n      \r\n      // Object Node Template\r\n      nodeTemplates.add(\"object\",\r\n        $(go.Node, \"Auto\", \r\n          {\r\n            locationSpot: go.Spot.Center,\r\n            selectionAdorned: true,\r\n            selectionObjectName: \"SHAPE\",\r\n            mouseEnter: (e, obj) => showHover(e, obj),\r\n            mouseLeave: (e, obj) => hideHover(e, obj),\r\n          },\r\n          $(go.Shape, \"RoundedRectangle\", {\r\n            name: \"SHAPE\",\r\n            fill: $(go.Brush, \"Linear\", { \r\n              0: \"#065F46\", // Dark green\r\n              1: \"#10B981\"  // Medium green\r\n            }),\r\n            stroke: \"#064E3B\",\r\n            strokeWidth: 2,\r\n            // Removed shadow properties\r\n            portId: \"\",\r\n            fromLinkable: true,\r\n            toLinkable: true,\r\n            cursor: \"pointer\",\r\n            width: 140,\r\n            height: 50,\r\n          }),\r\n          $(go.Panel, \"Horizontal\", \r\n            { alignment: go.Spot.TopCenter, alignmentFocus: go.Spot.TopCenter, margin: 8 },\r\n            $(go.Shape, \"Triangle\", {\r\n              width: 14, \r\n              height: 14, \r\n              fill: \"white\",\r\n              margin: new go.Margin(0, 5, 0, 0)\r\n            }),\r\n            $(go.TextBlock, \r\n              { \r\n                font: \"bold 13px sans-serif\", \r\n                stroke: \"white\",\r\n                margin: 2,\r\n                maxSize: new go.Size(120, NaN),\r\n                wrap: go.TextBlock.WrapFit\r\n              },\r\n              new go.Binding(\"text\", \"label\"))\r\n          ),\r\n          $(go.Panel, \"Auto\",\r\n            {\r\n              name: \"HOVER_PANEL\",\r\n              visible: false,\r\n              alignment: go.Spot.Bottom,\r\n              alignmentFocus: go.Spot.Top\r\n            },\r\n            $(go.Shape, \"RoundedRectangle\", {\r\n              fill: \"lightyellow\",\r\n              stroke: \"#E6C700\",\r\n              strokeWidth: 1,\r\n              parameter1: 4\r\n            }),\r\n            $(go.TextBlock, {\r\n              margin: 8,\r\n              font: \"12px sans-serif\",\r\n              stroke: \"#333\",\r\n              textAlign: \"center\",\r\n              wrap: go.TextBlock.WrapFit,\r\n              maxSize: new go.Size(200, NaN)\r\n            }, new go.Binding(\"text\", \"hoverLabel\"))\r\n          )\r\n        )\r\n      );\r\n      \r\n      // Attribute Node Template\r\n      nodeTemplates.add(\"attribute\",\r\n        $(go.Node, \"Auto\", \r\n          {\r\n            locationSpot: go.Spot.Center,\r\n            selectionAdorned: true,\r\n            selectionObjectName: \"SHAPE\",\r\n            mouseEnter: (e, obj) => showHover(e, obj),\r\n            mouseLeave: (e, obj) => hideHover(e, obj),\r\n          },\r\n          $(go.Shape, \"RoundedRectangle\", {\r\n            name: \"SHAPE\",\r\n            fill: $(go.Brush, \"Linear\", { \r\n              0: \"#9D174D\", // Dark purple\r\n              1: \"#EC4899\"  // Medium pink\r\n            }),\r\n            stroke: \"#831843\",\r\n            strokeWidth: 2,\r\n            // Removed shadow properties\r\n            portId: \"\",\r\n            fromLinkable: true,\r\n            toLinkable: true,\r\n            cursor: \"pointer\",\r\n            width: 120,\r\n            height: 40,\r\n          }),\r\n          $(go.Panel, \"Horizontal\", \r\n            { alignment: go.Spot.TopCenter, alignmentFocus: go.Spot.TopCenter, margin: 6 },\r\n            $(go.Shape, \"Diamond\", {\r\n              width: 12, \r\n              height: 12, \r\n              fill: \"white\",\r\n              margin: new go.Margin(0, 5, 0, 0)\r\n            }),\r\n            $(go.TextBlock, \r\n              { \r\n                font: \"12px sans-serif\", \r\n                stroke: \"white\",\r\n                margin: 2,\r\n                maxSize: new go.Size(100, NaN),\r\n                wrap: go.TextBlock.WrapFit\r\n              },\r\n              new go.Binding(\"text\", \"label\"))\r\n          ),\r\n          $(go.Panel, \"Auto\",\r\n            {\r\n              name: \"HOVER_PANEL\",\r\n              visible: false,\r\n              alignment: go.Spot.Bottom,\r\n              alignmentFocus: go.Spot.Top\r\n            },\r\n            $(go.Shape, \"RoundedRectangle\", {\r\n              fill: \"lightyellow\",\r\n              stroke: \"#E6C700\",\r\n              strokeWidth: 1,\r\n              parameter1: 4\r\n            }),\r\n            $(go.TextBlock, {\r\n              margin: 8,\r\n              font: \"12px sans-serif\",\r\n              stroke: \"#333\",\r\n              textAlign: \"center\",\r\n              wrap: go.TextBlock.WrapFit,\r\n              maxSize: new go.Size(200, NaN)\r\n            }, new go.Binding(\"text\", \"hoverLabel\"))\r\n          )\r\n        )\r\n      );\r\n\r\n      // Set the node template map\r\n      myDiagram.nodeTemplateMap = nodeTemplates;\r\n      \r\n      // Enhanced link template with removed shadow properties\r\n      myDiagram.linkTemplate =\r\n        $(go.Link,\r\n          {\r\n            routing: go.Link.AvoidsNodes,\r\n            curve: go.Link.JumpOver,\r\n            corner: 10,\r\n            reshapable: true,\r\n            relinkableFrom: true,\r\n            relinkableTo: true,\r\n            // Removed shadow properties\r\n          },\r\n          $(go.Shape,\r\n            {\r\n              stroke: \"#555\",\r\n              strokeWidth: 2,\r\n            }),\r\n          $(go.Shape,\r\n            {\r\n              toArrow: \"Triangle\",\r\n              fill: \"#555\",\r\n              stroke: null,\r\n              scale: 1.2\r\n            })\r\n        );\r\n\r\n      // Hover functions\r\n      function showHover(e, obj) {\r\n        const hoverPanel = obj.findObject(\"HOVER_PANEL\");\r\n        if (hoverPanel && obj.data.hoverLabel) {\r\n          hoverPanel.visible = true;\r\n        }\r\n      }\r\n      \r\n      function hideHover(e, obj) {\r\n        const hoverPanel = obj.findObject(\"HOVER_PANEL\");\r\n        if (hoverPanel) {\r\n          hoverPanel.visible = false;\r\n        }\r\n      }\r\n\r\n      // Set the model data\r\n      myDiagram.model = new go.GraphLinksModel(\r\n        graphData.nodeDataArray, \r\n        graphData.linkDataArray\r\n      );\r\n\r\n      // Adjust diagram dimensions after layout is complete\r\n      myDiagram.addDiagramListener(\"InitialLayoutCompleted\", () => {\r\n        const bounds = myDiagram.documentBounds;\r\n        setDimensions({\r\n          width: `${Math.ceil(bounds.width + 50)}px`, // Add some padding\r\n          height: `${Math.ceil(bounds.height + 50)}px`,\r\n        });\r\n      });\r\n    }\r\n  }, [graphData, setDimensions]);\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <div\r\n        ref={diagramRef}\r\n        style={{\r\n          width: \"100%\",\r\n          height: dimensions.height,\r\n          border: \"1px solid #e2e8f0\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.05)\",\r\n          background: \"#f8fafc\",\r\n          transition: \"all 0.3s ease\",\r\n        }}\r\n      >\r\n        {!graphData && (\r\n          <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n            color: \"#64748b\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"italic\"\r\n          }}>\r\n            Graph will be displayed here after uploading a file.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}