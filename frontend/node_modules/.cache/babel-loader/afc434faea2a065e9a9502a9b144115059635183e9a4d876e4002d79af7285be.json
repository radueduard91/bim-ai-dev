{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableVisualization = ({\n  graphData,\n  handleLabelChange,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [sortedRows, setSortedRows] = useState([]);\n  const handleDragStart = (event, key) => {\n    event.dataTransfer.setData(\"text/plain\", key);\n    setDraggedItem(key);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    if (sourceKey && sourceKey !== targetKey) {\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n\n        // Find the source node and target node.\n        const sourceNode = updatedNodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = updatedNodeDataArray.find(node => node.key === targetKey);\n        if (sourceNode && targetNode) {\n          // Remove all existing links where the source node is the to\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          if (sourceNode.category === \"attribute\") {\n            // If target is object, create new link\n            if (targetNode.category === \"object\") {\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n            // if target is system, check if object exists then create new links\n            else if (targetNode.category === \"system\") {\n              const linkedObject = updatedNodeDataArray.find(node => prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey));\n              if (linkedObject) {\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\n              }\n              const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\n              const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\n              if (objectLinks.length > 0) {\n                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\n                if (parentObject) {\n                  updatedLinkDataArray.push({\n                    from: targetKey,\n                    to: parentObject.key\n                  });\n                  updatedLinkDataArray.push({\n                    from: parentObject.key,\n                    to: sourceKey\n                  });\n                }\n              }\n            }\n          }\n\n          //If source is object\n          else if (sourceNode.category === \"object\") {\n            if (targetNode.category === \"system\") {\n              updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n          }\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n      const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n      const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n      try {\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        if (response.data.message === \"Drag-and-drop operation completed successfully\") {\n          await fetchGraphData();\n        }\n      } catch (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\n          alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.error(\"Error applying drag and drop:\", error.request);\n          alert(\"Error applying drag and drop. No response from server\");\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.error(\"Error applying drag and drop:\", error.message);\n          alert(`Error applying drag and drop: ${error.message}`);\n        }\n      }\n    }\n    setDraggedItem(null);\n  };\n\n  // Sort function\n  const sortRows = rows => {\n    return [...rows].sort((a, b) => {\n      var _a$parentCluster, _b$parentCluster, _a$parentObject, _b$parentObject;\n      const clusterA = ((_a$parentCluster = a.parentCluster) === null || _a$parentCluster === void 0 ? void 0 : _a$parentCluster.label) || \"Unlinked\";\n      const clusterB = ((_b$parentCluster = b.parentCluster) === null || _b$parentCluster === void 0 ? void 0 : _b$parentCluster.label) || \"Unlinked\";\n      const objectA = ((_a$parentObject = a.parentObject) === null || _a$parentObject === void 0 ? void 0 : _a$parentObject.label) || \"Unlinked\";\n      const objectB = ((_b$parentObject = b.parentObject) === null || _b$parentObject === void 0 ? void 0 : _b$parentObject.label) || \"Unlinked\";\n      const attributeA = a.attr.label;\n      const attributeB = b.attr.label;\n      const compareClusters = clusterA.localeCompare(clusterB);\n      if (compareClusters !== 0) return compareClusters;\n      const compareObjects = objectA.localeCompare(objectB);\n      if (compareObjects !== 0) return compareObjects;\n      return attributeA.localeCompare(attributeB);\n    });\n  };\n  useEffect(() => {\n    if (graphData) {\n      const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n      const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n      const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n      const rows = attributes.map(attr => {\n        const parentObject = objects.find(obj => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n        const parentCluster = parentObject ? clusters.find(sys => graphData.linkDataArray.some(link => link.from === sys.key && link.to === parentObject.key)) : null;\n        return {\n          attr,\n          parentObject,\n          parentCluster\n        };\n      });\n      setSortedRows(sortRows(rows));\n    }\n  }, [graphData]);\n  const getObjectCount = clusterKey => {\n    if (!graphData) return 0;\n    const uniqueObjects = new Set();\n    graphData.linkDataArray.filter(link => {\n      var _graphData$nodeDataAr;\n      return link.from === clusterKey && ((_graphData$nodeDataAr = graphData.nodeDataArray.find(node => node.key === link.to)) === null || _graphData$nodeDataAr === void 0 ? void 0 : _graphData$nodeDataAr.category) === \"object\";\n    }).forEach(link => uniqueObjects.add(link.to));\n    return uniqueObjects.size;\n  };\n  const getAttributeCount = objectKey => {\n    if (!graphData) return 0;\n    return graphData.linkDataArray.filter(link => {\n      var _graphData$nodeDataAr2;\n      return link.from === objectKey && ((_graphData$nodeDataAr2 = graphData.nodeDataArray.find(node => node.key === link.to)) === null || _graphData$nodeDataAr2 === void 0 ? void 0 : _graphData$nodeDataAr2.category) === \"attribute\";\n    }).length;\n  };\n  useEffect(() => {\n    if (graphData) {\n      fetchGraphData();\n    }\n  }, []);\n  if (!graphData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Table will be displayed here after uploading a file.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 28\n  }, this);\n  let prevCluster = null;\n  let prevObject = null;\n  let clusterRowspan = 1;\n  let objectRowspan = 1;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\"\n          },\n          children: \"Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\"\n          },\n          children: \"Object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\"\n          },\n          children: \"Attribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: sortedRows.map((row, index) => {\n        var _row$parentCluster, _row$parentObject, _row$parentCluster4, _row$parentCluster5, _row$parentCluster6, _row$parentCluster7, _row$parentCluster9, _row$parentObject4, _row$parentObject5, _row$parentObject6;\n        const currentCluster = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) || \"Unlinked\";\n        const currentObject = ((_row$parentObject = row.parentObject) === null || _row$parentObject === void 0 ? void 0 : _row$parentObject.label) || \"Unlinked\";\n        let renderClusterCell = false;\n        let renderObjectCell = false;\n        if (currentCluster !== prevCluster) {\n          renderClusterCell = true;\n          clusterRowspan = 1;\n        } else {\n          clusterRowspan++;\n        }\n        if (currentObject !== prevObject) {\n          renderObjectCell = true;\n          objectRowspan = 1;\n        } else {\n          objectRowspan++;\n        }\n        prevCluster = currentCluster;\n        prevObject = currentObject;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\",\n              borderBottom: currentCluster === prevCluster ? 'none' : '1px solid black',\n              borderTop: currentCluster !== prevCluster ? '1px solid black' : 'none'\n            },\n            rowSpan: currentCluster === prevCluster ? 1 : clusterRowspan,\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => {\n              var _row$parentCluster2;\n              return handleDrop(e, (_row$parentCluster2 = row.parentCluster) === null || _row$parentCluster2 === void 0 ? void 0 : _row$parentCluster2.key, \"system\");\n            },\n            children: [renderClusterCell ? /*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => {\n                var _row$parentCluster3;\n                return handleDragStart(e, (_row$parentCluster3 = row.parentCluster) === null || _row$parentCluster3 === void 0 ? void 0 : _row$parentCluster3.key);\n              },\n              children: [((_row$parentCluster4 = row.parentCluster) === null || _row$parentCluster4 === void 0 ? void 0 : _row$parentCluster4.label) || \"Unlinked\", \" (\", getObjectCount((_row$parentCluster5 = row.parentCluster) === null || _row$parentCluster5 === void 0 ? void 0 : _row$parentCluster5.key), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this), renderClusterCell && ((_row$parentCluster6 = row.parentCluster) === null || _row$parentCluster6 === void 0 ? void 0 : _row$parentCluster6.label) !== \"Unlinked\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_row$parentCluster7 = row.parentCluster) === null || _row$parentCluster7 === void 0 ? void 0 : _row$parentCluster7.hoverLabel) || \"\",\n              onChange: e => {\n                var _row$parentCluster8;\n                return handleLabelChange(e, (_row$parentCluster8 = row.parentCluster) === null || _row$parentCluster8 === void 0 ? void 0 : _row$parentCluster8.key);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 34\n            }, this), renderClusterCell && ((_row$parentCluster9 = row.parentCluster) === null || _row$parentCluster9 === void 0 ? void 0 : _row$parentCluster9.label) !== \"Unlinked\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _row$parentCluster10, _row$parentCluster11;\n                return openPopup((_row$parentCluster10 = row.parentCluster) === null || _row$parentCluster10 === void 0 ? void 0 : _row$parentCluster10.key, ((_row$parentCluster11 = row.parentCluster) === null || _row$parentCluster11 === void 0 ? void 0 : _row$parentCluster11.hoverLabel) || \"\");\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\",\n              borderBottom: currentObject === prevObject ? 'none' : '1px solid black',\n              borderTop: currentObject !== prevObject ? '1px solid black' : 'none'\n            },\n            rowSpan: currentObject === prevObject ? 1 : objectRowspan,\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => {\n              var _row$parentObject2;\n              return handleDrop(e, (_row$parentObject2 = row.parentObject) === null || _row$parentObject2 === void 0 ? void 0 : _row$parentObject2.key, \"object\");\n            },\n            children: [renderObjectCell ? /*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => {\n                var _row$parentObject3;\n                return handleDragStart(e, (_row$parentObject3 = row.parentObject) === null || _row$parentObject3 === void 0 ? void 0 : _row$parentObject3.key);\n              },\n              children: [((_row$parentObject4 = row.parentObject) === null || _row$parentObject4 === void 0 ? void 0 : _row$parentObject4.label) || \"Unlinked\", \" (\", getAttributeCount((_row$parentObject5 = row.parentObject) === null || _row$parentObject5 === void 0 ? void 0 : _row$parentObject5.key), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 39\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this), renderObjectCell && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_row$parentObject6 = row.parentObject) === null || _row$parentObject6 === void 0 ? void 0 : _row$parentObject6.hoverLabel) || \"\",\n              onChange: e => {\n                var _row$parentObject7;\n                return handleLabelChange(e, (_row$parentObject7 = row.parentObject) === null || _row$parentObject7 === void 0 ? void 0 : _row$parentObject7.key);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this), renderObjectCell && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _row$parentObject8, _row$parentObject9;\n                return openPopup((_row$parentObject8 = row.parentObject) === null || _row$parentObject8 === void 0 ? void 0 : _row$parentObject8.key, ((_row$parentObject9 = row.parentObject) === null || _row$parentObject9 === void 0 ? void 0 : _row$parentObject9.hoverLabel) || \"\");\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => handleDragStart(e, row.attr.key),\n              children: row.attr.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row.attr.hoverLabel || \"\",\n              onChange: e => handleLabelChange(e, row.attr.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openPopup(row.attr.key, row.attr.hoverLabel || \"\"),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 28\n          }, this)]\n        }, row.attr.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(TableVisualization, \"LF/R4QDBjCpe7xoq8HGs5nUq2so=\");\n_c = TableVisualization;\nexport default TableVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableVisualization\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TableVisualization","graphData","handleLabelChange","openPopup","setGraphData","fetchGraphData","_s","draggedItem","setDraggedItem","sortedRows","setSortedRows","handleDragStart","event","key","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","targetKey","targetCategory","sourceKey","getData","prev","updatedNodeDataArray","nodeDataArray","updatedLinkDataArray","linkDataArray","sourceNode","find","node","targetNode","filter","link","to","category","push","from","linkedObject","some","objects","objectLinks","obj","length","parentObject","l","response","post","source","target","sourceType","targetType","data","message","error","console","status","alert","detail","request","sortRows","rows","sort","a","b","_a$parentCluster","_b$parentCluster","_a$parentObject","_b$parentObject","clusterA","parentCluster","label","clusterB","objectA","objectB","attributeA","attr","attributeB","compareClusters","localeCompare","compareObjects","clusters","attributes","map","sys","getObjectCount","clusterKey","uniqueObjects","Set","_graphData$nodeDataAr","forEach","add","size","getAttributeCount","objectKey","_graphData$nodeDataAr2","children","fileName","_jsxFileName","lineNumber","columnNumber","prevCluster","prevObject","clusterRowspan","objectRowspan","style","width","borderCollapse","border","padding","row","index","_row$parentCluster","_row$parentObject","_row$parentCluster4","_row$parentCluster5","_row$parentCluster6","_row$parentCluster7","_row$parentCluster9","_row$parentObject4","_row$parentObject5","_row$parentObject6","currentCluster","currentObject","renderClusterCell","renderObjectCell","borderBottom","borderTop","rowSpan","onDragOver","e","onDrop","_row$parentCluster2","draggable","onDragStart","_row$parentCluster3","type","value","hoverLabel","onChange","_row$parentCluster8","onClick","_row$parentCluster10","_row$parentCluster11","_row$parentObject2","_row$parentObject3","_row$parentObject7","_row$parentObject8","_row$parentObject9","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TableVisualization = ({ graphData, handleLabelChange, openPopup, setGraphData, fetchGraphData }) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const [sortedRows, setSortedRows] = useState([]);\r\n  \r\n    const handleDragStart = (event, key) => {\r\n      event.dataTransfer.setData(\"text/plain\", key);\r\n      setDraggedItem(key);\r\n    };\r\n  \r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n  \r\n      const handleDrop = async (event, targetKey, targetCategory) => {\r\n        event.preventDefault();\r\n        const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n\r\n        if (sourceKey && sourceKey !== targetKey) {\r\n            setGraphData((prev) => {\r\n                let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                let updatedLinkDataArray = [...prev.linkDataArray];\r\n\r\n                // Find the source node and target node.\r\n                const sourceNode = updatedNodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = updatedNodeDataArray.find(node => node.key === targetKey);\r\n                   if(sourceNode && targetNode) {\r\n                        // Remove all existing links where the source node is the to\r\n                     updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                     if (sourceNode.category === \"attribute\") {\r\n                        // If target is object, create new link\r\n                        if(targetNode.category === \"object\"){\r\n                            updatedLinkDataArray.push({from: targetKey, to: sourceKey});\r\n                        }\r\n                        // if target is system, check if object exists then create new links\r\n                        else if(targetNode.category === \"system\") {\r\n                             const linkedObject = updatedNodeDataArray.find(node => \r\n                                prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey)\r\n                            )\r\n                            if(linkedObject){\r\n                                 updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\r\n                            }\r\n\r\n                           const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\r\n                           const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\r\n                             if(objectLinks.length > 0){\r\n                                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\r\n                                if(parentObject){\r\n                                    updatedLinkDataArray.push({from: targetKey, to: parentObject.key})\r\n                                    updatedLinkDataArray.push({from: parentObject.key, to: sourceKey});\r\n                                }\r\n                           }\r\n                        }\r\n                     }\r\n\r\n                    //If source is object\r\n                     else if (sourceNode.category === \"object\"){\r\n                         if (targetNode.category === \"system\"){\r\n                                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                                updatedLinkDataArray.push({from: targetKey, to: sourceKey});\r\n                         }\r\n                     }\r\n                }\r\n\r\n\r\n                return {\r\n                  ...prev,\r\n                  nodeDataArray: updatedNodeDataArray,\r\n                  linkDataArray: updatedLinkDataArray,\r\n                };\r\n            });\r\n\r\n                const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n             try {\r\n                    const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\",{\r\n                      source: sourceKey,\r\n                      target: targetKey,\r\n                      sourceType: sourceNode.category,\r\n                      targetType: targetNode.category\r\n                    });\r\n                    if(response.data.message === \"Drag-and-drop operation completed successfully\"){\r\n                         await fetchGraphData()\r\n                    }\r\n                 \r\n                } catch (error) {\r\n                       if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\r\n                    alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\r\n                  } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.error(\"Error applying drag and drop:\", error.request);\r\n                     alert(\"Error applying drag and drop. No response from server\");\r\n                  } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.error(\"Error applying drag and drop:\", error.message);\r\n                    alert(`Error applying drag and drop: ${error.message}`);\r\n                  }\r\n                }\r\n        }\r\n        setDraggedItem(null)\r\n    };\r\n    \r\n    // Sort function\r\n     const sortRows = (rows) => {\r\n        return [...rows].sort((a, b) => {\r\n           const clusterA = a.parentCluster?.label || \"Unlinked\";\r\n            const clusterB = b.parentCluster?.label || \"Unlinked\";\r\n            const objectA = a.parentObject?.label || \"Unlinked\";\r\n            const objectB = b.parentObject?.label || \"Unlinked\";\r\n            const attributeA = a.attr.label;\r\n            const attributeB = b.attr.label;\r\n\r\n\r\n            const compareClusters = clusterA.localeCompare(clusterB);\r\n            if(compareClusters !== 0) return compareClusters;\r\n            \r\n            const compareObjects = objectA.localeCompare(objectB);\r\n            if (compareObjects !== 0) return compareObjects;\r\n           \r\n           return attributeA.localeCompare(attributeB);\r\n          });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(graphData){\r\n              const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n              const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n              const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n            \r\n              const rows = attributes.map((attr) => {\r\n                const parentObject = objects.find((obj) =>\r\n                  graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n                );\r\n\r\n                 const parentCluster = parentObject\r\n                  ? clusters.find((sys) =>\r\n                      graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n                    )\r\n                 : null;\r\n                \r\n                return {attr, parentObject, parentCluster}\r\n            });\r\n            setSortedRows(sortRows(rows));\r\n        }\r\n    }, [graphData]);\r\n\r\n  const getObjectCount = (clusterKey) => {\r\n        if (!graphData) return 0;\r\n        const uniqueObjects = new Set();\r\n         graphData.linkDataArray.filter(link => link.from === clusterKey && graphData.nodeDataArray.find(node => node.key === link.to)?.category === \"object\").forEach(link => uniqueObjects.add(link.to));\r\n           return uniqueObjects.size;\r\n    };\r\n    \r\n    const getAttributeCount = (objectKey) => {\r\n         if (!graphData) return 0;\r\n         return graphData.linkDataArray.filter(link => link.from === objectKey && graphData.nodeDataArray.find(node => node.key === link.to)?.category === \"attribute\").length;\r\n     };\r\n    useEffect(() => {\r\n         if(graphData){\r\n            fetchGraphData()\r\n        }\r\n  }, []);\r\n\r\n    if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\r\n\r\n    let prevCluster = null;\r\n    let prevObject = null;\r\n    let clusterRowspan = 1;\r\n    let objectRowspan = 1;\r\n\r\n    return (\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n                <tr>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Cluster</th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Object</th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Attribute</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {sortedRows.map((row, index) => {\r\n                    const currentCluster = row.parentCluster?.label || \"Unlinked\";\r\n                    const currentObject = row.parentObject?.label || \"Unlinked\";\r\n                    let renderClusterCell = false;\r\n                    let renderObjectCell = false;\r\n\r\n                    if (currentCluster !== prevCluster) {\r\n                         renderClusterCell = true;\r\n                         clusterRowspan = 1;\r\n                      } else {\r\n                            clusterRowspan++;\r\n                     }\r\n                    if (currentObject !== prevObject) {\r\n                         renderObjectCell = true;\r\n                         objectRowspan = 1;\r\n                      } else {\r\n                          objectRowspan++;\r\n                       }\r\n                        prevCluster = currentCluster;\r\n                       prevObject = currentObject;\r\n                    return (\r\n                        <tr key={row.attr.key}>\r\n                            <td\r\n                                style={{\r\n                                    border: \"1px solid black\",\r\n                                    padding: \"5px\",\r\n                                    borderBottom: currentCluster === prevCluster ? 'none' : '1px solid black',\r\n                                    borderTop: (currentCluster !== prevCluster) ? '1px solid black' : 'none'\r\n                                  }}\r\n                                rowSpan={currentCluster === prevCluster ? 1 : clusterRowspan}\r\n                                 onDragOver={(e) => handleDragOver(e)}\r\n                                onDrop={(e) => handleDrop(e, row.parentCluster?.key, \"system\")}\r\n                            >\r\n                                {renderClusterCell ? (\r\n                                    <div\r\n                                        draggable\r\n                                        onDragStart={(e) => handleDragStart(e, row.parentCluster?.key)}\r\n                                     >\r\n                                        {row.parentCluster?.label || \"Unlinked\"} ({getObjectCount(row.parentCluster?.key)})\r\n                                    </div>\r\n                                 ) : null}\r\n                                <br />\r\n                                {renderClusterCell && row.parentCluster?.label !== \"Unlinked\" &&(\r\n                                 <input\r\n                                    type=\"text\"\r\n                                     value={row.parentCluster?.hoverLabel || \"\"}\r\n                                     onChange={(e) => handleLabelChange(e, row.parentCluster?.key)}\r\n                                 />\r\n                                 )}\r\n                                {renderClusterCell && row.parentCluster?.label !== \"Unlinked\" && (\r\n                                     <button onClick={() => openPopup(row.parentCluster?.key, row.parentCluster?.hoverLabel || \"\")}>+</button>\r\n                                 )}\r\n                            </td>\r\n                            <td\r\n                                style={{\r\n                                    border: \"1px solid black\",\r\n                                    padding: \"5px\",\r\n                                    borderBottom: currentObject === prevObject ? 'none' : '1px solid black',\r\n                                     borderTop: (currentObject !== prevObject) ? '1px solid black' : 'none'\r\n                                    }}\r\n                                rowSpan={currentObject === prevObject ? 1 : objectRowspan}\r\n                                 onDragOver={(e) => handleDragOver(e)}\r\n                                onDrop={(e) => handleDrop(e, row.parentObject?.key, \"object\")}\r\n                            >\r\n                                 {renderObjectCell ? (\r\n                                      <div\r\n                                        draggable\r\n                                        onDragStart={(e) => handleDragStart(e, row.parentObject?.key)}\r\n                                          >\r\n                                      {row.parentObject?.label || \"Unlinked\"} ({getAttributeCount(row.parentObject?.key)})\r\n                                     </div>\r\n                                 ) : null}\r\n                                <br />\r\n                                 {renderObjectCell && (\r\n                                    <input\r\n                                      type=\"text\"\r\n                                       value={row.parentObject?.hoverLabel || \"\"}\r\n                                       onChange={(e) => handleLabelChange(e, row.parentObject?.key)}\r\n                                  />\r\n                                  )}\r\n                                {renderObjectCell && (\r\n                                   <button onClick={() => openPopup(row.parentObject?.key, row.parentObject?.hoverLabel || \"\")}>+</button>\r\n                                   )}\r\n                           </td>\r\n                           <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n                                <div\r\n                                     draggable\r\n                                     onDragStart={(e) => handleDragStart(e, row.attr.key)}\r\n                                    >\r\n                                    {row.attr.label}\r\n                                </div>\r\n                              <br />\r\n                              <input\r\n                                    type=\"text\"\r\n                                    value={row.attr.hoverLabel || \"\"}\r\n                                    onChange={(e) => handleLabelChange(e, row.attr.key)}\r\n                                     />\r\n                                <button onClick={() => openPopup(row.attr.key, row.attr.hoverLabel || \"\")}>+</button>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TableVisualization;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,iBAAiB;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACtG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgB,eAAe,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;IACtCD,KAAK,CAACE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,GAAG,CAAC;IAC7CL,cAAc,CAACK,GAAG,CAAC;EACrB,CAAC;EAED,MAAMG,cAAc,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,CAAC,CAAC;EAC1B,CAAC;EAEC,MAAMC,UAAU,GAAG,MAAAA,CAAON,KAAK,EAAEO,SAAS,EAAEC,cAAc,KAAK;IAC7DR,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB,MAAMI,SAAS,GAAGT,KAAK,CAACE,YAAY,CAACQ,OAAO,CAAC,YAAY,CAAC;IAE1D,IAAID,SAAS,IAAIA,SAAS,KAAKF,SAAS,EAAE;MACtCf,YAAY,CAAEmB,IAAI,IAAK;QACnB,IAAIC,oBAAoB,GAAG,CAAC,GAAGD,IAAI,CAACE,aAAa,CAAC;QAClD,IAAIC,oBAAoB,GAAG,CAAC,GAAGH,IAAI,CAACI,aAAa,CAAC;;QAElD;QACA,MAAMC,UAAU,GAAGJ,oBAAoB,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACjB,GAAG,KAAKQ,SAAS,CAAC;QAC5E,MAAMU,UAAU,GAAGP,oBAAoB,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACjB,GAAG,KAAKM,SAAS,CAAC;QACzE,IAAGS,UAAU,IAAIG,UAAU,EAAE;UACxB;UACHL,oBAAoB,GAAGA,oBAAoB,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKb,SAAS,CAAC;UAEjF,IAAIO,UAAU,CAACO,QAAQ,KAAK,WAAW,EAAE;YACtC;YACA,IAAGJ,UAAU,CAACI,QAAQ,KAAK,QAAQ,EAAC;cAChCT,oBAAoB,CAACU,IAAI,CAAC;gBAACC,IAAI,EAAElB,SAAS;gBAAEe,EAAE,EAAEb;cAAS,CAAC,CAAC;YAC/D;YACA;YAAA,KACK,IAAGU,UAAU,CAACI,QAAQ,KAAK,QAAQ,EAAE;cACrC,MAAMG,YAAY,GAAGd,oBAAoB,CAACK,IAAI,CAACC,IAAI,IAChDP,IAAI,CAACI,aAAa,CAACY,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACI,IAAI,KAAKP,IAAI,CAACjB,GAAG,IAAIoB,IAAI,CAACC,EAAE,KAAKb,SAAS,CACnF,CAAC;cACD,IAAGiB,YAAY,EAAC;gBACXZ,oBAAoB,GAAGA,oBAAoB,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACI,IAAI,KAAKC,YAAY,CAACzB,GAAG,IAAIoB,IAAI,CAACC,EAAE,KAAKb,SAAS,CAAC;cACxH;cAED,MAAMmB,OAAO,GAAGhB,oBAAoB,CAACQ,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACK,QAAQ,KAAK,QAAQ,CAAC;cAC/E,MAAMM,WAAW,GAAGf,oBAAoB,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKb,SAAS,IAAImB,OAAO,CAACD,IAAI,CAACG,GAAG,IAAIA,GAAG,CAAC7B,GAAG,KAAKoB,IAAI,CAACI,IAAI,CAAC,CAAC;cAC1H,IAAGI,WAAW,CAACE,MAAM,GAAG,CAAC,EAAC;gBACvB,MAAMC,YAAY,GAAGJ,OAAO,CAACX,IAAI,CAACa,GAAG,IAAID,WAAW,CAACF,IAAI,CAACM,CAAC,IAAIA,CAAC,CAACR,IAAI,KAAKK,GAAG,CAAC7B,GAAG,CAAC,CAAC;gBACnF,IAAG+B,YAAY,EAAC;kBACZlB,oBAAoB,CAACU,IAAI,CAAC;oBAACC,IAAI,EAAElB,SAAS;oBAAEe,EAAE,EAAEU,YAAY,CAAC/B;kBAAG,CAAC,CAAC;kBAClEa,oBAAoB,CAACU,IAAI,CAAC;oBAACC,IAAI,EAAEO,YAAY,CAAC/B,GAAG;oBAAEqB,EAAE,EAAEb;kBAAS,CAAC,CAAC;gBACtE;cACL;YACH;UACH;;UAED;UAAA,KACM,IAAIO,UAAU,CAACO,QAAQ,KAAK,QAAQ,EAAC;YACtC,IAAIJ,UAAU,CAACI,QAAQ,KAAK,QAAQ,EAAC;cAC9BT,oBAAoB,GAAGA,oBAAoB,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKb,SAAS,CAAC;cACjFK,oBAAoB,CAACU,IAAI,CAAC;gBAACC,IAAI,EAAElB,SAAS;gBAAEe,EAAE,EAAEb;cAAS,CAAC,CAAC;YAClE;UACJ;QACL;QAGA,OAAO;UACL,GAAGE,IAAI;UACPE,aAAa,EAAED,oBAAoB;UACnCG,aAAa,EAAED;QACjB,CAAC;MACL,CAAC,CAAC;MAEE,MAAME,UAAU,GAAG3B,SAAS,CAACwB,aAAa,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACjB,GAAG,KAAKQ,SAAS,CAAC;MAC/E,MAAMU,UAAU,GAAG9B,SAAS,CAACwB,aAAa,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACjB,GAAG,KAAKM,SAAS,CAAC;MAClF,IAAI;QACG,MAAM2B,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,wCAAwC,EAAC;UACzEC,MAAM,EAAE3B,SAAS;UACjB4B,MAAM,EAAE9B,SAAS;UACjB+B,UAAU,EAAEtB,UAAU,CAACO,QAAQ;UAC/BgB,UAAU,EAAEpB,UAAU,CAACI;QACzB,CAAC,CAAC;QACF,IAAGW,QAAQ,CAACM,IAAI,CAACC,OAAO,KAAK,gDAAgD,EAAC;UACzE,MAAMhD,cAAc,CAAC,CAAC;QAC3B;MAEJ,CAAC,CAAC,OAAOiD,KAAK,EAAE;QACT,IAAIA,KAAK,CAACR,QAAQ,EAAE;UACvB;UACA;UACAS,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACR,QAAQ,CAACU,MAAM,EAAEF,KAAK,CAACR,QAAQ,CAACM,IAAI,CAAC;UAC1FK,KAAK,CAAC,yCAAyCH,KAAK,CAACR,QAAQ,CAACU,MAAM,cAAcF,KAAK,CAACR,QAAQ,CAACM,IAAI,CAACM,MAAM,EAAE,CAAC;QACjH,CAAC,MAAM,IAAIJ,KAAK,CAACK,OAAO,EAAE;UACxB;UACAJ,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACK,OAAO,CAAC;UAC5DF,KAAK,CAAC,uDAAuD,CAAC;QACjE,CAAC,MAAM;UACL;UACAF,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACD,OAAO,CAAC;UAC7DI,KAAK,CAAC,iCAAiCH,KAAK,CAACD,OAAO,EAAE,CAAC;QACzD;MACF;IACR;IACA7C,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACC,MAAMoD,QAAQ,GAAIC,IAAI,IAAK;IACxB,OAAO,CAAC,GAAGA,IAAI,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAC,gBAAA,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,eAAA;MAC7B,MAAMC,QAAQ,GAAG,EAAAJ,gBAAA,GAAAF,CAAC,CAACO,aAAa,cAAAL,gBAAA,uBAAfA,gBAAA,CAAiBM,KAAK,KAAI,UAAU;MACpD,MAAMC,QAAQ,GAAG,EAAAN,gBAAA,GAAAF,CAAC,CAACM,aAAa,cAAAJ,gBAAA,uBAAfA,gBAAA,CAAiBK,KAAK,KAAI,UAAU;MACrD,MAAME,OAAO,GAAG,EAAAN,eAAA,GAAAJ,CAAC,CAACnB,YAAY,cAAAuB,eAAA,uBAAdA,eAAA,CAAgBI,KAAK,KAAI,UAAU;MACnD,MAAMG,OAAO,GAAG,EAAAN,eAAA,GAAAJ,CAAC,CAACpB,YAAY,cAAAwB,eAAA,uBAAdA,eAAA,CAAgBG,KAAK,KAAI,UAAU;MACnD,MAAMI,UAAU,GAAGZ,CAAC,CAACa,IAAI,CAACL,KAAK;MAC/B,MAAMM,UAAU,GAAGb,CAAC,CAACY,IAAI,CAACL,KAAK;MAG/B,MAAMO,eAAe,GAAGT,QAAQ,CAACU,aAAa,CAACP,QAAQ,CAAC;MACxD,IAAGM,eAAe,KAAK,CAAC,EAAE,OAAOA,eAAe;MAEhD,MAAME,cAAc,GAAGP,OAAO,CAACM,aAAa,CAACL,OAAO,CAAC;MACrD,IAAIM,cAAc,KAAK,CAAC,EAAE,OAAOA,cAAc;MAEhD,OAAOL,UAAU,CAACI,aAAa,CAACF,UAAU,CAAC;IAC5C,CAAC,CAAC;EACR,CAAC;EAEDjF,SAAS,CAAC,MAAM;IACZ,IAAGK,SAAS,EAAC;MACP,MAAMgF,QAAQ,GAAGhF,SAAS,CAACwB,aAAa,CAACO,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACK,QAAQ,KAAK,QAAQ,CAAC;MACrF,MAAMK,OAAO,GAAGvC,SAAS,CAACwB,aAAa,CAACO,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACK,QAAQ,KAAK,QAAQ,CAAC;MACpF,MAAM+C,UAAU,GAAGjF,SAAS,CAACwB,aAAa,CAACO,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACK,QAAQ,KAAK,WAAW,CAAC;MAE1F,MAAM0B,IAAI,GAAGqB,UAAU,CAACC,GAAG,CAAEP,IAAI,IAAK;QACpC,MAAMhC,YAAY,GAAGJ,OAAO,CAACX,IAAI,CAAEa,GAAG,IACpCzC,SAAS,CAAC0B,aAAa,CAACY,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACI,IAAI,KAAKK,GAAG,CAAC7B,GAAG,IAAIoB,IAAI,CAACC,EAAE,KAAK0C,IAAI,CAAC/D,GAAG,CACtF,CAAC;QAEA,MAAMyD,aAAa,GAAG1B,YAAY,GAC/BqC,QAAQ,CAACpD,IAAI,CAAEuD,GAAG,IAChBnF,SAAS,CAAC0B,aAAa,CAACY,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACI,IAAI,KAAK+C,GAAG,CAACvE,GAAG,IAAIoB,IAAI,CAACC,EAAE,KAAKU,YAAY,CAAC/B,GAAG,CAC9F,CAAC,GACF,IAAI;QAEP,OAAO;UAAC+D,IAAI;UAAEhC,YAAY;UAAE0B;QAAa,CAAC;MAC9C,CAAC,CAAC;MACF5D,aAAa,CAACkD,QAAQ,CAACC,IAAI,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,CAAC5D,SAAS,CAAC,CAAC;EAEjB,MAAMoF,cAAc,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACrF,SAAS,EAAE,OAAO,CAAC;IACxB,MAAMsF,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC9BvF,SAAS,CAAC0B,aAAa,CAACK,MAAM,CAACC,IAAI;MAAA,IAAAwD,qBAAA;MAAA,OAAIxD,IAAI,CAACI,IAAI,KAAKiD,UAAU,IAAI,EAAAG,qBAAA,GAAAxF,SAAS,CAACwB,aAAa,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACjB,GAAG,KAAKoB,IAAI,CAACC,EAAE,CAAC,cAAAuD,qBAAA,uBAA1DA,qBAAA,CAA4DtD,QAAQ,MAAK,QAAQ;IAAA,EAAC,CAACuD,OAAO,CAACzD,IAAI,IAAIsD,aAAa,CAACI,GAAG,CAAC1D,IAAI,CAACC,EAAE,CAAC,CAAC;IAC/L,OAAOqD,aAAa,CAACK,IAAI;EAChC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;IACpC,IAAI,CAAC7F,SAAS,EAAE,OAAO,CAAC;IACxB,OAAOA,SAAS,CAAC0B,aAAa,CAACK,MAAM,CAACC,IAAI;MAAA,IAAA8D,sBAAA;MAAA,OAAI9D,IAAI,CAACI,IAAI,KAAKyD,SAAS,IAAI,EAAAC,sBAAA,GAAA9F,SAAS,CAACwB,aAAa,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACjB,GAAG,KAAKoB,IAAI,CAACC,EAAE,CAAC,cAAA6D,sBAAA,uBAA1DA,sBAAA,CAA4D5D,QAAQ,MAAK,WAAW;IAAA,EAAC,CAACQ,MAAM;EACzK,CAAC;EACF/C,SAAS,CAAC,MAAM;IACX,IAAGK,SAAS,EAAC;MACVI,cAAc,CAAC,CAAC;IACpB;EACN,CAAC,EAAE,EAAE,CAAC;EAEJ,IAAI,CAACJ,SAAS,EAAE,oBAAOF,OAAA;IAAAiG,QAAA,EAAG;EAAoD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAElF,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,UAAU,GAAG,IAAI;EACrB,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,aAAa,GAAG,CAAC;EAErB,oBACIzG,OAAA;IAAO0G,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAW,CAAE;IAAAX,QAAA,gBACxDjG,OAAA;MAAAiG,QAAA,eACIjG,OAAA;QAAAiG,QAAA,gBACIjG,OAAA;UAAI0G,KAAK,EAAE;YAAEG,MAAM,EAAE,iBAAiB;YAAEC,OAAO,EAAE;UAAM,CAAE;UAAAb,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtErG,OAAA;UAAI0G,KAAK,EAAE;YAAEG,MAAM,EAAE,iBAAiB;YAAEC,OAAO,EAAE;UAAM,CAAE;UAAAb,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrErG,OAAA;UAAI0G,KAAK,EAAE;YAAEG,MAAM,EAAE,iBAAiB;YAAEC,OAAO,EAAE;UAAM,CAAE;UAAAb,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRrG,OAAA;MAAAiG,QAAA,EACKvF,UAAU,CAAC0E,GAAG,CAAC,CAAC2B,GAAG,EAAEC,KAAK,KAAK;QAAA,IAAAC,kBAAA,EAAAC,iBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;QAC5B,MAAMC,cAAc,GAAG,EAAAV,kBAAA,GAAAF,GAAG,CAACxC,aAAa,cAAA0C,kBAAA,uBAAjBA,kBAAA,CAAmBzC,KAAK,KAAI,UAAU;QAC7D,MAAMoD,aAAa,GAAG,EAAAV,iBAAA,GAAAH,GAAG,CAAClE,YAAY,cAAAqE,iBAAA,uBAAhBA,iBAAA,CAAkB1C,KAAK,KAAI,UAAU;QAC3D,IAAIqD,iBAAiB,GAAG,KAAK;QAC7B,IAAIC,gBAAgB,GAAG,KAAK;QAE5B,IAAIH,cAAc,KAAKrB,WAAW,EAAE;UAC/BuB,iBAAiB,GAAG,IAAI;UACxBrB,cAAc,GAAG,CAAC;QACrB,CAAC,MAAM;UACDA,cAAc,EAAE;QACvB;QACD,IAAIoB,aAAa,KAAKrB,UAAU,EAAE;UAC7BuB,gBAAgB,GAAG,IAAI;UACvBrB,aAAa,GAAG,CAAC;QACpB,CAAC,MAAM;UACHA,aAAa,EAAE;QAClB;QACCH,WAAW,GAAGqB,cAAc;QAC7BpB,UAAU,GAAGqB,aAAa;QAC7B,oBACI5H,OAAA;UAAAiG,QAAA,gBACIjG,OAAA;YACI0G,KAAK,EAAE;cACHG,MAAM,EAAE,iBAAiB;cACzBC,OAAO,EAAE,KAAK;cACdiB,YAAY,EAAEJ,cAAc,KAAKrB,WAAW,GAAG,MAAM,GAAG,iBAAiB;cACzE0B,SAAS,EAAGL,cAAc,KAAKrB,WAAW,GAAI,iBAAiB,GAAG;YACpE,CAAE;YACJ2B,OAAO,EAAEN,cAAc,KAAKrB,WAAW,GAAG,CAAC,GAAGE,cAAe;YAC5D0B,UAAU,EAAGC,CAAC,IAAKlH,cAAc,CAACkH,CAAC,CAAE;YACtCC,MAAM,EAAGD,CAAC;cAAA,IAAAE,mBAAA;cAAA,OAAKlH,UAAU,CAACgH,CAAC,GAAAE,mBAAA,GAAEtB,GAAG,CAACxC,aAAa,cAAA8D,mBAAA,uBAAjBA,mBAAA,CAAmBvH,GAAG,EAAE,QAAQ,CAAC;YAAA,CAAC;YAAAmF,QAAA,GAE9D4B,iBAAiB,gBACd7H,OAAA;cACIsI,SAAS;cACTC,WAAW,EAAGJ,CAAC;gBAAA,IAAAK,mBAAA;gBAAA,OAAK5H,eAAe,CAACuH,CAAC,GAAAK,mBAAA,GAAEzB,GAAG,CAACxC,aAAa,cAAAiE,mBAAA,uBAAjBA,mBAAA,CAAmB1H,GAAG,CAAC;cAAA,CAAC;cAAAmF,QAAA,GAE9D,EAAAkB,mBAAA,GAAAJ,GAAG,CAACxC,aAAa,cAAA4C,mBAAA,uBAAjBA,mBAAA,CAAmB3C,KAAK,KAAI,UAAU,EAAC,IAAE,EAACc,cAAc,EAAA8B,mBAAA,GAACL,GAAG,CAACxC,aAAa,cAAA6C,mBAAA,uBAAjBA,mBAAA,CAAmBtG,GAAG,CAAC,EAAC,GACtF;YAAA;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,GACL,IAAI,eACTrG,OAAA;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACLwB,iBAAiB,IAAI,EAAAR,mBAAA,GAAAN,GAAG,CAACxC,aAAa,cAAA8C,mBAAA,uBAAjBA,mBAAA,CAAmB7C,KAAK,MAAK,UAAU,iBAC5DxE,OAAA;cACGyI,IAAI,EAAC,MAAM;cACVC,KAAK,EAAE,EAAApB,mBAAA,GAAAP,GAAG,CAACxC,aAAa,cAAA+C,mBAAA,uBAAjBA,mBAAA,CAAmBqB,UAAU,KAAI,EAAG;cAC3CC,QAAQ,EAAGT,CAAC;gBAAA,IAAAU,mBAAA;gBAAA,OAAK1I,iBAAiB,CAACgI,CAAC,GAAAU,mBAAA,GAAE9B,GAAG,CAACxC,aAAa,cAAAsE,mBAAA,uBAAjBA,mBAAA,CAAmB/H,GAAG,CAAC;cAAA;YAAC;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CACA,EACDwB,iBAAiB,IAAI,EAAAN,mBAAA,GAAAR,GAAG,CAACxC,aAAa,cAAAgD,mBAAA,uBAAjBA,mBAAA,CAAmB/C,KAAK,MAAK,UAAU,iBACxDxE,OAAA;cAAQ8I,OAAO,EAAEA,CAAA;gBAAA,IAAAC,oBAAA,EAAAC,oBAAA;gBAAA,OAAM5I,SAAS,EAAA2I,oBAAA,GAAChC,GAAG,CAACxC,aAAa,cAAAwE,oBAAA,uBAAjBA,oBAAA,CAAmBjI,GAAG,EAAE,EAAAkI,oBAAA,GAAAjC,GAAG,CAACxC,aAAa,cAAAyE,oBAAA,uBAAjBA,oBAAA,CAAmBL,UAAU,KAAI,EAAE,CAAC;cAAA,CAAC;cAAA1C,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAC3G;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACLrG,OAAA;YACI0G,KAAK,EAAE;cACHG,MAAM,EAAE,iBAAiB;cACzBC,OAAO,EAAE,KAAK;cACdiB,YAAY,EAAEH,aAAa,KAAKrB,UAAU,GAAG,MAAM,GAAG,iBAAiB;cACtEyB,SAAS,EAAGJ,aAAa,KAAKrB,UAAU,GAAI,iBAAiB,GAAG;YACjE,CAAE;YACN0B,OAAO,EAAEL,aAAa,KAAKrB,UAAU,GAAG,CAAC,GAAGE,aAAc;YACzDyB,UAAU,EAAGC,CAAC,IAAKlH,cAAc,CAACkH,CAAC,CAAE;YACtCC,MAAM,EAAGD,CAAC;cAAA,IAAAc,kBAAA;cAAA,OAAK9H,UAAU,CAACgH,CAAC,GAAAc,kBAAA,GAAElC,GAAG,CAAClE,YAAY,cAAAoG,kBAAA,uBAAhBA,kBAAA,CAAkBnI,GAAG,EAAE,QAAQ,CAAC;YAAA,CAAC;YAAAmF,QAAA,GAE5D6B,gBAAgB,gBACZ9H,OAAA;cACEsI,SAAS;cACTC,WAAW,EAAGJ,CAAC;gBAAA,IAAAe,kBAAA;gBAAA,OAAKtI,eAAe,CAACuH,CAAC,GAAAe,kBAAA,GAAEnC,GAAG,CAAClE,YAAY,cAAAqG,kBAAA,uBAAhBA,kBAAA,CAAkBpI,GAAG,CAAC;cAAA,CAAC;cAAAmF,QAAA,GAE/D,EAAAuB,kBAAA,GAAAT,GAAG,CAAClE,YAAY,cAAA2E,kBAAA,uBAAhBA,kBAAA,CAAkBhD,KAAK,KAAI,UAAU,EAAC,IAAE,EAACsB,iBAAiB,EAAA2B,kBAAA,GAACV,GAAG,CAAClE,YAAY,cAAA4E,kBAAA,uBAAhBA,kBAAA,CAAkB3G,GAAG,CAAC,EAAC,GACpF;YAAA;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,GACN,IAAI,eACTrG,OAAA;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACJyB,gBAAgB,iBACd9H,OAAA;cACEyI,IAAI,EAAC,MAAM;cACVC,KAAK,EAAE,EAAAhB,kBAAA,GAAAX,GAAG,CAAClE,YAAY,cAAA6E,kBAAA,uBAAhBA,kBAAA,CAAkBiB,UAAU,KAAI,EAAG;cAC1CC,QAAQ,EAAGT,CAAC;gBAAA,IAAAgB,kBAAA;gBAAA,OAAKhJ,iBAAiB,CAACgI,CAAC,GAAAgB,kBAAA,GAAEpC,GAAG,CAAClE,YAAY,cAAAsG,kBAAA,uBAAhBA,kBAAA,CAAkBrI,GAAG,CAAC;cAAA;YAAC;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CACA,EACFyB,gBAAgB,iBACd9H,OAAA;cAAQ8I,OAAO,EAAEA,CAAA;gBAAA,IAAAM,kBAAA,EAAAC,kBAAA;gBAAA,OAAMjJ,SAAS,EAAAgJ,kBAAA,GAACrC,GAAG,CAAClE,YAAY,cAAAuG,kBAAA,uBAAhBA,kBAAA,CAAkBtI,GAAG,EAAE,EAAAuI,kBAAA,GAAAtC,GAAG,CAAClE,YAAY,cAAAwG,kBAAA,uBAAhBA,kBAAA,CAAkBV,UAAU,KAAI,EAAE,CAAC;cAAA,CAAC;cAAA1C,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACrG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACLrG,OAAA;YAAI0G,KAAK,EAAE;cAAEG,MAAM,EAAE,iBAAiB;cAAEC,OAAO,EAAE;YAAM,CAAE;YAAAb,QAAA,gBACpDjG,OAAA;cACKsI,SAAS;cACTC,WAAW,EAAGJ,CAAC,IAAKvH,eAAe,CAACuH,CAAC,EAAEpB,GAAG,CAAClC,IAAI,CAAC/D,GAAG,CAAE;cAAAmF,QAAA,EAErDc,GAAG,CAAClC,IAAI,CAACL;YAAK;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eACRrG,OAAA;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNrG,OAAA;cACMyI,IAAI,EAAC,MAAM;cACXC,KAAK,EAAE3B,GAAG,CAAClC,IAAI,CAAC8D,UAAU,IAAI,EAAG;cACjCC,QAAQ,EAAGT,CAAC,IAAKhI,iBAAiB,CAACgI,CAAC,EAAEpB,GAAG,CAAClC,IAAI,CAAC/D,GAAG;YAAE;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACPrG,OAAA;cAAQ8I,OAAO,EAAEA,CAAA,KAAM1I,SAAS,CAAC2G,GAAG,CAAClC,IAAI,CAAC/D,GAAG,EAAEiG,GAAG,CAAClC,IAAI,CAAC8D,UAAU,IAAI,EAAE,CAAE;cAAA1C,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CAAC;QAAA,GA7EAU,GAAG,CAAClC,IAAI,CAAC/D,GAAG;UAAAoF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8EjB,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAC9F,EAAA,CAhSIN,kBAAkB;AAAAqJ,EAAA,GAAlBrJ,kBAAkB;AAkSxB,eAAeA,kBAAkB;AAAC,IAAAqJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}