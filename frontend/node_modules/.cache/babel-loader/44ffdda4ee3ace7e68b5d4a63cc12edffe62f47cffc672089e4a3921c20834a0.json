{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\BootstrapNestedList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport './BootstrapNestedList.css'; // Import the css file for this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapNestedList = ({\n  graphData,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const inputRefs = useRef({});\n  const [expandedItems, setExpandedItems] = useState({});\n  useEffect(() => {\n    if (graphData) {\n      const initialExpanded = graphData.nodeDataArray.reduce((acc, node) => {\n        if (node.category === \"system\" || node.category === \"object\") acc[node.key] = true;\n        return acc;\n      }, {});\n      setExpandedItems(initialExpanded);\n    }\n  }, [graphData]);\n  const toggleItem = key => {\n    setExpandedItems(prevExpandedItems => ({\n      ...prevExpandedItems,\n      [key]: !prevExpandedItems[key]\n    }));\n  };\n  const handleDragStart = (event, key) => {\n    event.dataTransfer.setData(\"text/plain\", key);\n    setDraggedItem(key);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    if (sourceKey && sourceKey !== targetKey) {\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n\n        // Find the source node and target node.\n        const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\n        if (sourceNode && targetNode) {\n          // Remove all existing links where the source node is the to\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          if (sourceNode.category === \"attribute\") {\n            // If target is object, create new link\n            if (targetNode.category === \"object\") {\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n            // if target is system, check if object exists then create new links\n            else if (targetNode.category === \"system\") {\n              const linkedObject = updatedNodeDataArray.find(node => prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey));\n              if (linkedObject) {\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\n              }\n              const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\n              const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\n              if (objectLinks.length > 0) {\n                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\n                if (parentObject) {\n                  updatedLinkDataArray.push({\n                    from: targetKey,\n                    to: parentObject.key\n                  });\n                  updatedLinkDataArray.push({\n                    from: parentObject.key,\n                    to: sourceKey\n                  });\n                }\n              }\n            }\n          }\n\n          //If source is object\n          else if (sourceNode.category === \"object\") {\n            if (targetNode.category === \"system\") {\n              updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n          }\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n      const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n      const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n      try {\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        if (response.data.message === \"Drag-and-drop operation completed successfully\") {\n          await fetchGraphData();\n        }\n      } catch (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\n          alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.error(\"Error applying drag and drop:\", error.request);\n          alert(\"Error applying drag and drop. No response from server\");\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.error(\"Error applying drag and drop:\", error.message);\n          alert(`Error applying drag and drop: ${error.message}`);\n        }\n      }\n    }\n    setDraggedItem(null);\n  };\n  const getDisplayText = text => {\n    if (!text) return \"\";\n    const lines = text.split('\\n');\n    const firstTwoLines = lines.slice(0, 2).join('\\n');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden',\n          whiteSpace: 'pre-line',\n          maxWidth: \"calc(100% - 20px)\",\n          marginRight: \"2px\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: firstTwoLines.substring(0, 100)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/zoom-in.png\",\n        alt: \"Click to expand\",\n        style: {\n          position: 'absolute',\n          bottom: '2px',\n          right: '2px',\n          width: \"16px\",\n          height: \"16px\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }, this);\n  };\n  const handleClickInput = (key, currentLabel, currentName) => {\n    openPopup(key, currentLabel, currentName);\n    if (inputRefs.current[key] && inputRefs.current[key].current) {\n      inputRefs.current[key].current.focus();\n    }\n  };\n  const setInputRef = key => {\n    return inputRefs.current[key] ? inputRefs.current[key] : inputRefs.current[key] = /*#__PURE__*/React.createRef();\n  };\n  const renderNestedList = (items, level = 0) => {\n    if (!items || !graphData) {\n      return null;\n    }\n    const getIndentClass = level => {\n      return `list-group-item-indent-${level}`;\n    };\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: items.map(item => {\n        const node = graphData.nodeDataArray.find(n => n.key === item);\n        if (!node) return null;\n        const linkedItems = graphData.linkDataArray.filter(link => link.from === node.key).map(link => link.to);\n        const isExpanded = expandedItems[node.key];\n        const uniqueId = `item-${node.key}`;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-group-item ${getIndentClass(level)}`,\n          onDragOver: e => handleDragOver(e),\n          onDrop: e => handleDrop(e, node.key, node.category),\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              lineHeight: \"1.2\",\n              textDecoration: \"none\",\n              color: \"black\"\n            },\n            onClick: () => toggleItem(node.key),\n            draggable: true,\n            onDragStart: e => handleDragStart(e, node.key),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                flex: 1,\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\"\n              },\n              children: [\" \", node.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fas ${isExpanded ? 'fa-minus-square' : 'fa-plus-square'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"50%\",\n              border: node.hoverLabel ? \"1px solid #ccc\" : \"none\",\n              padding: \"2px\",\n              position: 'relative'\n            },\n            onClick: () => handleClickInput(node.key, node.hoverLabel || \"\", node.label || \"\"),\n            children: getDisplayText(node.hoverLabel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: node.hoverLabel || \"\",\n            style: {\n              display: \"none\"\n            },\n            ref: setInputRef(node.key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: `nested-list ${isExpanded ? 'show' : ''}`,\n            id: uniqueId,\n            children: graphData.nodeDataArray.filter(n => linkedItems.some(l => l === n.key) && n.category === \"attribute\").map(attribute => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `list-group-item ${getIndentClass(level + 1)}`,\n                onDragOver: e => handleDragOver(e),\n                onDrop: e => handleDrop(e, attribute.key, attribute.category),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  draggable: true,\n                  onDragStart: e => handleDragStart(e, attribute.key),\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.2\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      flex: 1,\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                      whiteSpace: \"nowrap\",\n                      padding: \"0.2rem\"\n                    },\n                    children: attribute.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 74\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"50%\",\n                      border: attribute.hoverLabel ? \"1px solid #ccc\" : \"none\",\n                      padding: \"2px\",\n                      position: 'relative'\n                    },\n                    onClick: () => handleClickInput(attribute.key, attribute.hoverLabel || \"\", attribute.label || \"\"),\n                    children: getDisplayText(attribute.hoverLabel)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 77\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: attribute.hoverLabel || \"\",\n                    style: {\n                      display: \"none\"\n                    },\n                    ref: setInputRef(attribute.key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 78\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 69\n                }, this)\n              }, attribute.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 63\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 37\n          }, this)]\n        }, node.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 30\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 18\n    }, this);\n  };\n  if (!graphData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Table will be displayed here after uploading a file.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 32\n  }, this);\n  const rootNodes = graphData.nodeDataArray.filter(node => node.category === \"system\").map(node => node.key);\n  return renderNestedList(rootNodes);\n};\n_s(BootstrapNestedList, \"2CHjEn8dDt2S7GOMgHcisem8Gpg=\");\n_c = BootstrapNestedList;\nexport default BootstrapNestedList;\nvar _c;\n$RefreshReg$(_c, \"BootstrapNestedList\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","axios","jsxDEV","_jsxDEV","BootstrapNestedList","graphData","openPopup","setGraphData","fetchGraphData","_s","draggedItem","setDraggedItem","inputRefs","expandedItems","setExpandedItems","initialExpanded","nodeDataArray","reduce","acc","node","category","key","toggleItem","prevExpandedItems","handleDragStart","event","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","targetKey","targetCategory","sourceKey","getData","prev","updatedNodeDataArray","updatedLinkDataArray","linkDataArray","sourceNode","find","targetNode","filter","link","to","push","from","linkedObject","some","objects","objectLinks","obj","length","parentObject","l","response","post","source","target","sourceType","targetType","data","message","error","console","status","alert","detail","request","getDisplayText","text","lines","split","firstTwoLines","slice","join","style","position","display","children","overflow","whiteSpace","maxWidth","marginRight","dangerouslySetInnerHTML","__html","substring","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","bottom","right","width","height","cursor","handleClickInput","currentLabel","currentName","current","focus","setInputRef","createRef","renderNestedList","items","level","getIndentClass","className","map","item","n","linkedItems","isExpanded","uniqueId","onDragOver","e","onDrop","href","alignItems","lineHeight","textDecoration","color","onClick","draggable","onDragStart","flex","textOverflow","label","border","hoverLabel","padding","type","value","ref","id","attribute","rootNodes","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/BootstrapNestedList.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './BootstrapNestedList.css'; // Import the css file for this component\r\n\r\nconst BootstrapNestedList = ({ graphData, openPopup, setGraphData, fetchGraphData }) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const inputRefs = useRef({});\r\n    const [expandedItems, setExpandedItems] = useState({});\r\n\r\n     useEffect(() => {\r\n           if (graphData) {\r\n            const initialExpanded = graphData.nodeDataArray.reduce((acc, node) => {\r\n              if (node.category === \"system\" || node.category === \"object\") acc[node.key] = true;\r\n              return acc;\r\n            }, {});\r\n              setExpandedItems(initialExpanded)\r\n          }\r\n         }, [graphData]);\r\n\r\n    const toggleItem = (key) => {\r\n         setExpandedItems((prevExpandedItems) => ({\r\n             ...prevExpandedItems,\r\n             [key]: !prevExpandedItems[key],\r\n         }));\r\n     };\r\n      const handleDragStart = (event, key) => {\r\n            event.dataTransfer.setData(\"text/plain\", key);\r\n            setDraggedItem(key);\r\n        };\r\n\r\n        const handleDragOver = (event) => {\r\n            event.preventDefault();\r\n        };\r\n\r\n        const handleDrop = async (event, targetKey, targetCategory) => {\r\n            event.preventDefault();\r\n            const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n\r\n            if (sourceKey && sourceKey !== targetKey) {\r\n                setGraphData((prev) => {\r\n                    let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                    let updatedLinkDataArray = [...prev.linkDataArray];\r\n\r\n                    // Find the source node and target node.\r\n                    const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\r\n                    const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\r\n                    if (sourceNode && targetNode) {\r\n                        // Remove all existing links where the source node is the to\r\n                        updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                        if (sourceNode.category === \"attribute\") {\r\n                            // If target is object, create new link\r\n                            if (targetNode.category === \"object\") {\r\n                                updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                            }\r\n                            // if target is system, check if object exists then create new links\r\n                            else if (targetNode.category === \"system\") {\r\n                                const linkedObject = updatedNodeDataArray.find(node =>\r\n                                    prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey)\r\n                                )\r\n                                if (linkedObject) {\r\n                                    updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\r\n                                }\r\n\r\n                                const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\r\n                                const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\r\n                                if (objectLinks.length > 0) {\r\n                                    const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\r\n                                    if (parentObject) {\r\n                                        updatedLinkDataArray.push({ from: targetKey, to: parentObject.key })\r\n                                        updatedLinkDataArray.push({ from: parentObject.key, to: sourceKey });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        //If source is object\r\n                        else if (sourceNode.category === \"object\") {\r\n                            if (targetNode.category === \"system\") {\r\n                                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                                updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        ...prev,\r\n                        nodeDataArray: updatedNodeDataArray,\r\n                        linkDataArray: updatedLinkDataArray,\r\n                    };\r\n                });\r\n\r\n                const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n                try {\r\n                    const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n                        source: sourceKey,\r\n                        target: targetKey,\r\n                        sourceType: sourceNode.category,\r\n                        targetType: targetNode.category\r\n                    });\r\n                    if (response.data.message === \"Drag-and-drop operation completed successfully\") {\r\n                        await fetchGraphData()\r\n                    }\r\n\r\n                } catch (error) {\r\n                    if (error.response) {\r\n                        // The request was made and the server responded with a status code\r\n                        // that falls out of the range of 2xx\r\n                        console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\r\n                        alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\r\n                    } else if (error.request) {\r\n                        // The request was made but no response was received\r\n                        console.error(\"Error applying drag and drop:\", error.request);\r\n                        alert(\"Error applying drag and drop. No response from server\");\r\n                    } else {\r\n                        // Something happened in setting up the request that triggered an Error\r\n                        console.error(\"Error applying drag and drop:\", error.message);\r\n                        alert(`Error applying drag and drop: ${error.message}`);\r\n                    }\r\n                }\r\n            }\r\n            setDraggedItem(null)\r\n        };\r\n\r\n\r\n          const getDisplayText = (text) => {\r\n                if (!text) return \"\";\r\n                const lines = text.split('\\n');\r\n                const firstTwoLines = lines.slice(0, 2).join('\\n');\r\n                return (\r\n                  <div style={{ position: 'relative', display: 'inline-block' }}>\r\n                     <div style={{  overflow: 'hidden', whiteSpace: 'pre-line',  maxWidth:\"calc(100% - 20px)\", marginRight: \"2px\" }}\r\n                       dangerouslySetInnerHTML={{__html: firstTwoLines.substring(0, 100) }}\r\n                    />\r\n                   <img\r\n                     src=\"/zoom-in.png\"\r\n                     alt=\"Click to expand\"\r\n                     style={{ position: 'absolute', bottom: '2px', right: '2px', width: \"16px\", height: \"16px\", cursor: \"pointer\" }}\r\n                   />\r\n                </div>\r\n              );\r\n        };\r\n\r\n         const handleClickInput = (key, currentLabel, currentName) => {\r\n               openPopup(key, currentLabel, currentName);\r\n              if (inputRefs.current[key] && inputRefs.current[key].current) {\r\n                  inputRefs.current[key].current.focus();\r\n                }\r\n           }\r\n\r\n        const setInputRef = (key) => {\r\n           return inputRefs.current[key] ? inputRefs.current[key] :  (inputRefs.current[key] = React.createRef())\r\n          }\r\n\r\n        const renderNestedList = (items, level = 0) => {\r\n            if (!items || !graphData) {\r\n                return null;\r\n            }\r\n             const getIndentClass = (level) => {\r\n               return `list-group-item-indent-${level}`;\r\n             };\r\n\r\n             return (\r\n                 <ul className=\"list-group\">\r\n                     {items.map((item) => {\r\n                         const node = graphData.nodeDataArray.find(n => n.key === item);\r\n                        if (!node) return null;\r\n                         const linkedItems = graphData.linkDataArray\r\n                             .filter(link => link.from === node.key)\r\n                             .map(link => link.to);\r\n\r\n                         const isExpanded = expandedItems[node.key];\r\n                         const uniqueId = `item-${node.key}`;\r\n                         return (\r\n                             <li key={node.key} className={`list-group-item ${getIndentClass(level)}`}\r\n                                 onDragOver={(e) => handleDragOver(e)}\r\n                                  onDrop={(e) => handleDrop(e, node.key, node.category)}\r\n                               >\r\n                                <a\r\n                                     href=\"#\"\r\n                                      style={{ display: \"flex\", alignItems: \"center\", lineHeight: \"1.2\", textDecoration: \"none\", color: \"black\" }}\r\n                                      onClick={() => toggleItem(node.key)}\r\n                                       draggable\r\n                                        onDragStart={(e) => handleDragStart(e, node.key)}\r\n                                 >\r\n                                     <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}> {node.label}</span>\r\n                                     <i className={`fas ${isExpanded ? 'fa-minus-square' : 'fa-plus-square'}`}></i>\r\n                                 </a>\r\n                                   <div\r\n                                        style={{ width: \"50%\", border: node.hoverLabel ? \"1px solid #ccc\" : \"none\" , padding:\"2px\", position: 'relative' }}\r\n                                          onClick={() => handleClickInput(node.key, node.hoverLabel || \"\", node.label || \"\")}\r\n                                         >\r\n                                               {getDisplayText(node.hoverLabel)}\r\n                                      </div>\r\n                                       <input\r\n                                            type=\"text\"\r\n                                            value={node.hoverLabel || \"\"}\r\n                                            style={{ display: \"none\"  }}\r\n                                             ref={setInputRef(node.key)}\r\n\r\n                                        />\r\n                                    <ul className={`nested-list ${isExpanded ? 'show' : ''}`} id={uniqueId}>\r\n                                         {graphData.nodeDataArray\r\n                                                .filter(n => linkedItems.some(l => l === n.key) && n.category === \"attribute\" )\r\n                                                 .map(attribute => {\r\n                                                        return (\r\n                                                              <li key={attribute.key} className={`list-group-item ${getIndentClass(level + 1)}`}\r\n                                                                     onDragOver={(e) => handleDragOver(e)}\r\n                                                                    onDrop={(e) => handleDrop(e, attribute.key, attribute.category)}\r\n                                                                 >\r\n                                                                    <div\r\n                                                                         draggable\r\n                                                                           onDragStart={(e) => handleDragStart(e, attribute.key)}\r\n                                                                          style={{ display: \"flex\", alignItems: \"center\", lineHeight: \"1.2\" }}\r\n                                                                     >\r\n                                                                         <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", padding:\"0.2rem\" }}>{attribute.label}</span>\r\n                                                                            <div\r\n                                                                             style={{ width: \"50%\", border: attribute.hoverLabel ? \"1px solid #ccc\" : \"none\" , padding:\"2px\", position: 'relative' }}\r\n                                                                                   onClick={() => handleClickInput(attribute.key, attribute.hoverLabel || \"\", attribute.label || \"\")}\r\n                                                                                   >\r\n                                                                                         {getDisplayText(attribute.hoverLabel)}\r\n                                                                            </div>\r\n                                                                             <input\r\n                                                                                  type=\"text\"\r\n                                                                                   value={attribute.hoverLabel || \"\"}\r\n                                                                                style={{ display: \"none\" }}\r\n                                                                                  ref={setInputRef(attribute.key)}\r\n                                                                            />\r\n                                                                    </div>\r\n                                                                 </li>\r\n                                                             )\r\n                                                    })\r\n                                           }\r\n                                     </ul>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n          };\r\n        if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\r\n         const rootNodes = graphData.nodeDataArray.filter(node => node.category === \"system\").map(node => node.key);\r\n\r\n         return renderNestedList(rootNodes);\r\n};\r\n\r\nexport default BootstrapNestedList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMe,SAAS,GAAGd,MAAM,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAErDG,SAAS,CAAC,MAAM;IACV,IAAIK,SAAS,EAAE;MACd,MAAMU,eAAe,GAAGV,SAAS,CAACW,aAAa,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QACpE,IAAIA,IAAI,CAACC,QAAQ,KAAK,QAAQ,IAAID,IAAI,CAACC,QAAQ,KAAK,QAAQ,EAAEF,GAAG,CAACC,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI;QAClF,OAAOH,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACJJ,gBAAgB,CAACC,eAAe,CAAC;IACrC;EACD,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEpB,MAAMiB,UAAU,GAAID,GAAG,IAAK;IACvBP,gBAAgB,CAAES,iBAAiB,KAAM;MACrC,GAAGA,iBAAiB;MACpB,CAACF,GAAG,GAAG,CAACE,iBAAiB,CAACF,GAAG;IACjC,CAAC,CAAC,CAAC;EACP,CAAC;EACA,MAAMG,eAAe,GAAGA,CAACC,KAAK,EAAEJ,GAAG,KAAK;IAClCI,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEN,GAAG,CAAC;IAC7CV,cAAc,CAACU,GAAG,CAAC;EACvB,CAAC;EAED,MAAMO,cAAc,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAOL,KAAK,EAAEM,SAAS,EAAEC,cAAc,KAAK;IAC3DP,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,MAAMI,SAAS,GAAGR,KAAK,CAACC,YAAY,CAACQ,OAAO,CAAC,YAAY,CAAC;IAE1D,IAAID,SAAS,IAAIA,SAAS,KAAKF,SAAS,EAAE;MACtCxB,YAAY,CAAE4B,IAAI,IAAK;QACnB,IAAIC,oBAAoB,GAAG,CAAC,GAAGD,IAAI,CAACnB,aAAa,CAAC;QAClD,IAAIqB,oBAAoB,GAAG,CAAC,GAAGF,IAAI,CAACG,aAAa,CAAC;;QAElD;QACA,MAAMC,UAAU,GAAGJ,IAAI,CAACnB,aAAa,CAACwB,IAAI,CAACrB,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKY,SAAS,CAAC;QAC1E,MAAMQ,UAAU,GAAGN,IAAI,CAACnB,aAAa,CAACwB,IAAI,CAACrB,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKU,SAAS,CAAC;QAC1E,IAAIQ,UAAU,IAAIE,UAAU,EAAE;UAC1B;UACAJ,oBAAoB,GAAGA,oBAAoB,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,SAAS,CAAC;UAEjF,IAAIM,UAAU,CAACnB,QAAQ,KAAK,WAAW,EAAE;YACrC;YACA,IAAIqB,UAAU,CAACrB,QAAQ,KAAK,QAAQ,EAAE;cAClCiB,oBAAoB,CAACQ,IAAI,CAAC;gBAAEC,IAAI,EAAEf,SAAS;gBAAEa,EAAE,EAAEX;cAAU,CAAC,CAAC;YACjE;YACA;YAAA,KACK,IAAIQ,UAAU,CAACrB,QAAQ,KAAK,QAAQ,EAAE;cACvC,MAAM2B,YAAY,GAAGX,oBAAoB,CAACI,IAAI,CAACrB,IAAI,IAC/CgB,IAAI,CAACG,aAAa,CAACU,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK3B,IAAI,CAACE,GAAG,IAAIsB,IAAI,CAACC,EAAE,KAAKX,SAAS,CACnF,CAAC;cACD,IAAIc,YAAY,EAAE;gBACdV,oBAAoB,GAAGA,oBAAoB,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAKC,YAAY,CAAC1B,GAAG,IAAIsB,IAAI,CAACC,EAAE,KAAKX,SAAS,CAAC;cACvH;cAEA,MAAMgB,OAAO,GAAGb,oBAAoB,CAACM,MAAM,CAACvB,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,QAAQ,CAAC;cAC/E,MAAM8B,WAAW,GAAGb,oBAAoB,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,SAAS,IAAIgB,OAAO,CAACD,IAAI,CAACG,GAAG,IAAIA,GAAG,CAAC9B,GAAG,KAAKsB,IAAI,CAACG,IAAI,CAAC,CAAC;cAC5H,IAAII,WAAW,CAACE,MAAM,GAAG,CAAC,EAAE;gBACxB,MAAMC,YAAY,GAAGJ,OAAO,CAACT,IAAI,CAACW,GAAG,IAAID,WAAW,CAACF,IAAI,CAACM,CAAC,IAAIA,CAAC,CAACR,IAAI,KAAKK,GAAG,CAAC9B,GAAG,CAAC,CAAC;gBACnF,IAAIgC,YAAY,EAAE;kBACdhB,oBAAoB,CAACQ,IAAI,CAAC;oBAAEC,IAAI,EAAEf,SAAS;oBAAEa,EAAE,EAAES,YAAY,CAAChC;kBAAI,CAAC,CAAC;kBACpEgB,oBAAoB,CAACQ,IAAI,CAAC;oBAAEC,IAAI,EAAEO,YAAY,CAAChC,GAAG;oBAAEuB,EAAE,EAAEX;kBAAU,CAAC,CAAC;gBACxE;cACJ;YACJ;UACJ;;UAEA;UAAA,KACK,IAAIM,UAAU,CAACnB,QAAQ,KAAK,QAAQ,EAAE;YACvC,IAAIqB,UAAU,CAACrB,QAAQ,KAAK,QAAQ,EAAE;cAClCiB,oBAAoB,GAAGA,oBAAoB,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,SAAS,CAAC;cACjFI,oBAAoB,CAACQ,IAAI,CAAC;gBAAEC,IAAI,EAAEf,SAAS;gBAAEa,EAAE,EAAEX;cAAU,CAAC,CAAC;YACjE;UACJ;QACJ;QAEA,OAAO;UACH,GAAGE,IAAI;UACPnB,aAAa,EAAEoB,oBAAoB;UACnCE,aAAa,EAAED;QACnB,CAAC;MACL,CAAC,CAAC;MAEF,MAAME,UAAU,GAAGlC,SAAS,CAACW,aAAa,CAACwB,IAAI,CAACrB,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKY,SAAS,CAAC;MAC/E,MAAMQ,UAAU,GAAGpC,SAAS,CAACW,aAAa,CAACwB,IAAI,CAACrB,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKU,SAAS,CAAC;MAC/E,IAAI;QACA,MAAMwB,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,IAAI,CAAC,wCAAwC,EAAE;UACxEC,MAAM,EAAExB,SAAS;UACjByB,MAAM,EAAE3B,SAAS;UACjB4B,UAAU,EAAEpB,UAAU,CAACnB,QAAQ;UAC/BwC,UAAU,EAAEnB,UAAU,CAACrB;QAC3B,CAAC,CAAC;QACF,IAAImC,QAAQ,CAACM,IAAI,CAACC,OAAO,KAAK,gDAAgD,EAAE;UAC5E,MAAMtD,cAAc,CAAC,CAAC;QAC1B;MAEJ,CAAC,CAAC,OAAOuD,KAAK,EAAE;QACZ,IAAIA,KAAK,CAACR,QAAQ,EAAE;UAChB;UACA;UACAS,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACR,QAAQ,CAACU,MAAM,EAAEF,KAAK,CAACR,QAAQ,CAACM,IAAI,CAAC;UAC1FK,KAAK,CAAC,yCAAyCH,KAAK,CAACR,QAAQ,CAACU,MAAM,cAAcF,KAAK,CAACR,QAAQ,CAACM,IAAI,CAACM,MAAM,EAAE,CAAC;QACnH,CAAC,MAAM,IAAIJ,KAAK,CAACK,OAAO,EAAE;UACtB;UACAJ,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACK,OAAO,CAAC;UAC7DF,KAAK,CAAC,uDAAuD,CAAC;QAClE,CAAC,MAAM;UACH;UACAF,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACD,OAAO,CAAC;UAC7DI,KAAK,CAAC,iCAAiCH,KAAK,CAACD,OAAO,EAAE,CAAC;QAC3D;MACJ;IACJ;IACAnD,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAGC,MAAM0D,cAAc,GAAIC,IAAI,IAAK;IAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAC9B,MAAMC,aAAa,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAClD,oBACExE,OAAA;MAAKyE,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,OAAO,EAAE;MAAe,CAAE;MAAAC,QAAA,gBAC3D5E,OAAA;QAAKyE,KAAK,EAAE;UAAGI,QAAQ,EAAE,QAAQ;UAAEC,UAAU,EAAE,UAAU;UAAGC,QAAQ,EAAC,mBAAmB;UAAEC,WAAW,EAAE;QAAM,CAAE;QAC7GC,uBAAuB,EAAE;UAACC,MAAM,EAAEZ,aAAa,CAACa,SAAS,CAAC,CAAC,EAAE,GAAG;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACHvF,OAAA;QACEwF,GAAG,EAAC,cAAc;QAClBC,GAAG,EAAC,iBAAiB;QACrBhB,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEgB,MAAM,EAAE,KAAK;UAAEC,KAAK,EAAE,KAAK;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAU;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd,CAAC;EAEA,MAAMQ,gBAAgB,GAAGA,CAAC7E,GAAG,EAAE8E,YAAY,EAAEC,WAAW,KAAK;IACvD9F,SAAS,CAACe,GAAG,EAAE8E,YAAY,EAAEC,WAAW,CAAC;IAC1C,IAAIxF,SAAS,CAACyF,OAAO,CAAChF,GAAG,CAAC,IAAIT,SAAS,CAACyF,OAAO,CAAChF,GAAG,CAAC,CAACgF,OAAO,EAAE;MAC1DzF,SAAS,CAACyF,OAAO,CAAChF,GAAG,CAAC,CAACgF,OAAO,CAACC,KAAK,CAAC,CAAC;IACxC;EACL,CAAC;EAEJ,MAAMC,WAAW,GAAIlF,GAAG,IAAK;IAC1B,OAAOT,SAAS,CAACyF,OAAO,CAAChF,GAAG,CAAC,GAAGT,SAAS,CAACyF,OAAO,CAAChF,GAAG,CAAC,GAAKT,SAAS,CAACyF,OAAO,CAAChF,GAAG,CAAC,gBAAGzB,KAAK,CAAC4G,SAAS,CAAC,CAAE;EACvG,CAAC;EAEH,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,KAAK,GAAG,CAAC,KAAK;IAC3C,IAAI,CAACD,KAAK,IAAI,CAACrG,SAAS,EAAE;MACtB,OAAO,IAAI;IACf;IACC,MAAMuG,cAAc,GAAID,KAAK,IAAK;MAChC,OAAO,0BAA0BA,KAAK,EAAE;IAC1C,CAAC;IAED,oBACIxG,OAAA;MAAI0G,SAAS,EAAC,YAAY;MAAA9B,QAAA,EACrB2B,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACjB,MAAM5F,IAAI,GAAGd,SAAS,CAACW,aAAa,CAACwB,IAAI,CAACwE,CAAC,IAAIA,CAAC,CAAC3F,GAAG,KAAK0F,IAAI,CAAC;QAC/D,IAAI,CAAC5F,IAAI,EAAE,OAAO,IAAI;QACrB,MAAM8F,WAAW,GAAG5G,SAAS,CAACiC,aAAa,CACtCI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK3B,IAAI,CAACE,GAAG,CAAC,CACtCyF,GAAG,CAACnE,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC;QAEzB,MAAMsE,UAAU,GAAGrG,aAAa,CAACM,IAAI,CAACE,GAAG,CAAC;QAC1C,MAAM8F,QAAQ,GAAG,QAAQhG,IAAI,CAACE,GAAG,EAAE;QACnC,oBACIlB,OAAA;UAAmB0G,SAAS,EAAE,mBAAmBD,cAAc,CAACD,KAAK,CAAC,EAAG;UACrES,UAAU,EAAGC,CAAC,IAAKzF,cAAc,CAACyF,CAAC,CAAE;UACpCC,MAAM,EAAGD,CAAC,IAAKvF,UAAU,CAACuF,CAAC,EAAElG,IAAI,CAACE,GAAG,EAAEF,IAAI,CAACC,QAAQ,CAAE;UAAA2D,QAAA,gBAExD5E,OAAA;YACKoH,IAAI,EAAC,GAAG;YACP3C,KAAK,EAAE;cAAEE,OAAO,EAAE,MAAM;cAAE0C,UAAU,EAAE,QAAQ;cAAEC,UAAU,EAAE,KAAK;cAAEC,cAAc,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAC5GC,OAAO,EAAEA,CAAA,KAAMtG,UAAU,CAACH,IAAI,CAACE,GAAG,CAAE;YACnCwG,SAAS;YACRC,WAAW,EAAGT,CAAC,IAAK7F,eAAe,CAAC6F,CAAC,EAAElG,IAAI,CAACE,GAAG,CAAE;YAAA0D,QAAA,gBAEpD5E,OAAA;cAAMyE,KAAK,EAAE;gBAAEmD,IAAI,EAAE,CAAC;gBAAE/C,QAAQ,EAAE,QAAQ;gBAAEgD,YAAY,EAAE,UAAU;gBAAE/C,UAAU,EAAE;cAAS,CAAE;cAAAF,QAAA,GAAC,GAAC,EAAC5D,IAAI,CAAC8G,KAAK;YAAA;cAAA1C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClHvF,OAAA;cAAG0G,SAAS,EAAE,OAAOK,UAAU,GAAG,iBAAiB,GAAG,gBAAgB;YAAG;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC,eACFvF,OAAA;YACKyE,KAAK,EAAE;cAAEmB,KAAK,EAAE,KAAK;cAAEmC,MAAM,EAAE/G,IAAI,CAACgH,UAAU,GAAG,gBAAgB,GAAG,MAAM;cAAGC,OAAO,EAAC,KAAK;cAAEvD,QAAQ,EAAE;YAAW,CAAE;YACjH+C,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAAC/E,IAAI,CAACE,GAAG,EAAEF,IAAI,CAACgH,UAAU,IAAI,EAAE,EAAEhH,IAAI,CAAC8G,KAAK,IAAI,EAAE,CAAE;YAAAlD,QAAA,EAE7EV,cAAc,CAAClD,IAAI,CAACgH,UAAU;UAAC;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACLvF,OAAA;YACKkI,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEnH,IAAI,CAACgH,UAAU,IAAI,EAAG;YAC7BvD,KAAK,EAAE;cAAEE,OAAO,EAAE;YAAQ,CAAE;YAC3ByD,GAAG,EAAEhC,WAAW,CAACpF,IAAI,CAACE,GAAG;UAAE;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE/B,CAAC,eACNvF,OAAA;YAAI0G,SAAS,EAAE,eAAeK,UAAU,GAAG,MAAM,GAAG,EAAE,EAAG;YAACsB,EAAE,EAAErB,QAAS;YAAApC,QAAA,EACjE1E,SAAS,CAACW,aAAa,CAChB0B,MAAM,CAACsE,CAAC,IAAIC,WAAW,CAACjE,IAAI,CAACM,CAAC,IAAIA,CAAC,KAAK0D,CAAC,CAAC3F,GAAG,CAAC,IAAI2F,CAAC,CAAC5F,QAAQ,KAAK,WAAY,CAAC,CAC7E0F,GAAG,CAAC2B,SAAS,IAAI;cACX,oBACMtI,OAAA;gBAAwB0G,SAAS,EAAE,mBAAmBD,cAAc,CAACD,KAAK,GAAG,CAAC,CAAC,EAAG;gBAC3ES,UAAU,EAAGC,CAAC,IAAKzF,cAAc,CAACyF,CAAC,CAAE;gBACtCC,MAAM,EAAGD,CAAC,IAAKvF,UAAU,CAACuF,CAAC,EAAEoB,SAAS,CAACpH,GAAG,EAAEoH,SAAS,CAACrH,QAAQ,CAAE;gBAAA2D,QAAA,eAEhE5E,OAAA;kBACK0H,SAAS;kBACPC,WAAW,EAAGT,CAAC,IAAK7F,eAAe,CAAC6F,CAAC,EAAEoB,SAAS,CAACpH,GAAG,CAAE;kBACvDuD,KAAK,EAAE;oBAAEE,OAAO,EAAE,MAAM;oBAAE0C,UAAU,EAAE,QAAQ;oBAAEC,UAAU,EAAE;kBAAM,CAAE;kBAAA1C,QAAA,gBAErE5E,OAAA;oBAAMyE,KAAK,EAAE;sBAAEmD,IAAI,EAAE,CAAC;sBAAE/C,QAAQ,EAAE,QAAQ;sBAAEgD,YAAY,EAAE,UAAU;sBAAE/C,UAAU,EAAE,QAAQ;sBAAEmD,OAAO,EAAC;oBAAS,CAAE;oBAAArD,QAAA,EAAE0D,SAAS,CAACR;kBAAK;oBAAA1C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACrIvF,OAAA;oBACCyE,KAAK,EAAE;sBAAEmB,KAAK,EAAE,KAAK;sBAAEmC,MAAM,EAAEO,SAAS,CAACN,UAAU,GAAG,gBAAgB,GAAG,MAAM;sBAAGC,OAAO,EAAC,KAAK;sBAAEvD,QAAQ,EAAE;oBAAW,CAAE;oBAClH+C,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACuC,SAAS,CAACpH,GAAG,EAAEoH,SAAS,CAACN,UAAU,IAAI,EAAE,EAAEM,SAAS,CAACR,KAAK,IAAI,EAAE,CAAE;oBAAAlD,QAAA,EAE3FV,cAAc,CAACoE,SAAS,CAACN,UAAU;kBAAC;oBAAA5C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7C,CAAC,eACLvF,OAAA;oBACKkI,IAAI,EAAC,MAAM;oBACVC,KAAK,EAAEG,SAAS,CAACN,UAAU,IAAI,EAAG;oBACrCvD,KAAK,EAAE;sBAAEE,OAAO,EAAE;oBAAO,CAAE;oBACzByD,GAAG,EAAEhC,WAAW,CAACkC,SAAS,CAACpH,GAAG;kBAAE;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL;cAAC,GAtBH+C,SAAS,CAACpH,GAAG;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAuBf,CAAC;YAElB,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CAAC;QAAA,GA3DJvE,IAAI,CAACE,GAAG;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4DV,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEf,CAAC;EACH,IAAI,CAACrF,SAAS,EAAE,oBAAOF,OAAA;IAAA4E,QAAA,EAAG;EAAoD;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACjF,MAAMgD,SAAS,GAAGrI,SAAS,CAACW,aAAa,CAAC0B,MAAM,CAACvB,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,QAAQ,CAAC,CAAC0F,GAAG,CAAC3F,IAAI,IAAIA,IAAI,CAACE,GAAG,CAAC;EAE1G,OAAOoF,gBAAgB,CAACiC,SAAS,CAAC;AAC3C,CAAC;AAACjI,EAAA,CAjPIL,mBAAmB;AAAAuI,EAAA,GAAnBvI,mBAAmB;AAmPzB,eAAeA,mBAAmB;AAAC,IAAAuI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}