{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport * as go from \"gojs\"; // Import GoJS for diagram visualization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [graphData, setGraphData] = useState(null);\n  const [dimensions, setDimensions] = useState({\n    width: \"100%\",\n    height: \"600px\"\n  });\n  const diagramRef = useRef();\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.message);\n      fetchGraphData();\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Error uploading file. Please check the console for more details.\");\n    }\n  };\n  const fetchGraphData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\n      setGraphData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching graph data:\", error);\n      alert(\"Error fetching graph data. Please check the console for more details.\");\n    }\n  };\n  useEffect(() => {\n    if (graphData) {\n      const $ = go.GraphObject.make;\n      const myDiagram = $(go.Diagram, diagramRef.current, {\n        \"undoManager.isEnabled\": true,\n        layout: $(go.TreeLayout, {\n          angle: 0,\n          layerSpacing: 35\n        })\n      });\n      myDiagram.nodeTemplate = $(go.Node, \"Auto\", $(go.Shape, \"RoundedRectangle\", {\n        fill: \"lightblue\"\n      }, new go.Binding(\"fill\", \"color\")), $(go.Panel, \"Vertical\", {\n        margin: 5\n      }, $(go.TextBlock, {\n        margin: 2,\n        editable: true,\n        font: \"bold 12pt sans-serif\",\n        width: NaN\n      }, new go.Binding(\"text\", \"label\").makeTwoWay(), new go.Binding(\"width\", \"label\", text => Math.min(text.length * 12 * 2, 300))), $(go.Panel, \"Vertical\", {\n        name: \"DETAILS\",\n        visible: true\n      }, $(go.TextBlock, {\n        margin: 2,\n        font: \"italic 10pt sans-serif\",\n        stroke: \"gray\",\n        wrap: go.TextBlock.WrapFit,\n        maxSize: new go.Size(300, Infinity),\n        textAlign: \"center\"\n      }, new go.Binding(\"text\", \"hoverLabel\"))), $(go.Panel, \"Horizontal\", $(\"Button\", {\n        margin: 2,\n        click: (e, obj) => {\n          const panel = obj.part.findObject(\"DETAILS\");\n          if (panel) panel.visible = !panel.visible;\n        }\n      }, $(go.TextBlock, \"Toggle Own Labels\")), $(\"Button\", {\n        margin: 2,\n        click: (e, obj) => {\n          const node = obj.part;\n          toggleRecursive(node, !node.findObject(\"DETAILS\").visible);\n        }\n      }, $(go.TextBlock, \"Toggle All Labels\")))));\n      function toggleRecursive(node, visible) {\n        const diagram = node.diagram;\n        if (!diagram) return;\n        diagram.startTransaction(\"Toggle Recursive Labels\");\n        const stack = [node];\n        while (stack.length > 0) {\n          const currentNode = stack.pop();\n          const detailsPanel = currentNode.findObject(\"DETAILS\");\n          if (detailsPanel) detailsPanel.visible = visible;\n          const connectedLinks = currentNode.findLinksOutOf();\n          connectedLinks.each(link => {\n            const childNode = link.toNode;\n            if (childNode) stack.push(childNode);\n          });\n        }\n        diagram.commitTransaction(\"Toggle Recursive Labels\");\n      }\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\n      myDiagram.addDiagramListener(\"InitialLayoutCompleted\", () => {\n        const bounds = myDiagram.documentBounds;\n        setDimensions({\n          width: `${Math.ceil(bounds.width)}px`,\n          height: `${Math.ceil(bounds.height)}px`\n        });\n      });\n    }\n  }, [graphData]);\n  const handleGoButtonClick = () => {\n    if (!graphData) {\n      alert(\"No graph data available.\");\n      return;\n    }\n    const updatedNodeDataArray = graphData.nodeDataArray.map(node => {\n      if (node.category === \"attribute\") {\n        const randomValue = Math.floor(Math.random() * 99) + 1; // Random number between 1 and 99\n        return randomValue <= 50 ? {\n          ...node,\n          color: \"red\"\n        } : node;\n      }\n      return node;\n    });\n    setGraphData({\n      ...graphData,\n      nodeDataArray: updatedNodeDataArray\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoButtonClick,\n      children: \"GO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: diagramRef,\n      style: {\n        width: dimensions.width,\n        height: dimensions.height,\n        border: \"1px solid black\",\n        overflow: \"auto\"\n      },\n      children: !graphData && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Graph will be displayed here after uploading a file.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XXnwhM5wDGDDx4M9EUCZaWWqJQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","go","jsxDEV","_jsxDEV","App","_s","file","setFile","graphData","setGraphData","dimensions","setDimensions","width","height","diagramRef","handleFileChange","event","target","files","handleFileUpload","alert","formData","FormData","append","response","post","headers","data","message","fetchGraphData","error","console","get","$","GraphObject","make","myDiagram","Diagram","current","layout","TreeLayout","angle","layerSpacing","nodeTemplate","Node","Shape","fill","Binding","Panel","margin","TextBlock","editable","font","NaN","makeTwoWay","text","Math","min","length","name","visible","stroke","wrap","WrapFit","maxSize","Size","Infinity","textAlign","click","e","obj","panel","part","findObject","node","toggleRecursive","diagram","startTransaction","stack","currentNode","pop","detailsPanel","connectedLinks","findLinksOutOf","each","link","childNode","toNode","push","commitTransaction","model","GraphLinksModel","nodeDataArray","linkDataArray","addDiagramListener","bounds","documentBounds","ceil","handleGoButtonClick","updatedNodeDataArray","map","category","randomValue","floor","random","color","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","ref","style","border","overflow","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as go from \"gojs\"; // Import GoJS for diagram visualization\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [graphData, setGraphData] = useState(null);\r\n  const [dimensions, setDimensions] = useState({ width: \"100%\", height: \"600px\" });\r\n  const diagramRef = useRef();\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file before uploading.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(response.data.message);\r\n      fetchGraphData();\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Error uploading file. Please check the console for more details.\");\r\n    }\r\n  };\r\n\r\n  const fetchGraphData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\r\n      setGraphData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching graph data:\", error);\r\n      alert(\"Error fetching graph data. Please check the console for more details.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graphData) {\r\n      const $ = go.GraphObject.make;\r\n\r\n      const myDiagram = $(go.Diagram, diagramRef.current, {\r\n        \"undoManager.isEnabled\": true,\r\n        layout: $(go.TreeLayout, { angle: 0, layerSpacing: 35 }),\r\n      });\r\n\r\n      myDiagram.nodeTemplate = $(\r\n        go.Node,\r\n        \"Auto\",\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"lightblue\",\r\n        },\r\n          new go.Binding(\"fill\", \"color\")\r\n        ),\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          { margin: 5 },\r\n          $(\r\n            go.TextBlock,\r\n            {\r\n              margin: 2,\r\n              editable: true,\r\n              font: \"bold 12pt sans-serif\",\r\n              width: NaN,\r\n            },\r\n            new go.Binding(\"text\", \"label\").makeTwoWay(),\r\n            new go.Binding(\"width\", \"label\", (text) => Math.min(text.length * 12 * 2, 300))\r\n          ),\r\n          $(\r\n            go.Panel,\r\n            \"Vertical\",\r\n            { name: \"DETAILS\", visible: true },\r\n            $(\r\n              go.TextBlock,\r\n              {\r\n                margin: 2,\r\n                font: \"italic 10pt sans-serif\",\r\n                stroke: \"gray\",\r\n                wrap: go.TextBlock.WrapFit,\r\n                maxSize: new go.Size(300, Infinity),\r\n                textAlign: \"center\",\r\n              },\r\n              new go.Binding(\"text\", \"hoverLabel\")\r\n            )\r\n          ),\r\n          $(\r\n            go.Panel,\r\n            \"Horizontal\",\r\n            $(\r\n              \"Button\",\r\n              {\r\n                margin: 2,\r\n                click: (e, obj) => {\r\n                  const panel = obj.part.findObject(\"DETAILS\");\r\n                  if (panel) panel.visible = !panel.visible;\r\n                },\r\n              },\r\n              $(go.TextBlock, \"Toggle Own Labels\")\r\n            ),\r\n            $(\r\n              \"Button\",\r\n              {\r\n                margin: 2,\r\n                click: (e, obj) => {\r\n                  const node = obj.part;\r\n                  toggleRecursive(node, !node.findObject(\"DETAILS\").visible);\r\n                },\r\n              },\r\n              $(go.TextBlock, \"Toggle All Labels\")\r\n            )\r\n          )\r\n        )\r\n      );\r\n\r\n      function toggleRecursive(node, visible) {\r\n        const diagram = node.diagram;\r\n        if (!diagram) return;\r\n\r\n        diagram.startTransaction(\"Toggle Recursive Labels\");\r\n\r\n        const stack = [node];\r\n        while (stack.length > 0) {\r\n          const currentNode = stack.pop();\r\n          const detailsPanel = currentNode.findObject(\"DETAILS\");\r\n          if (detailsPanel) detailsPanel.visible = visible;\r\n\r\n          const connectedLinks = currentNode.findLinksOutOf();\r\n          connectedLinks.each((link) => {\r\n            const childNode = link.toNode;\r\n            if (childNode) stack.push(childNode);\r\n          });\r\n        }\r\n\r\n        diagram.commitTransaction(\"Toggle Recursive Labels\");\r\n      }\r\n\r\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\r\n\r\n      myDiagram.addDiagramListener(\"InitialLayoutCompleted\", () => {\r\n        const bounds = myDiagram.documentBounds;\r\n        setDimensions({\r\n          width: `${Math.ceil(bounds.width)}px`,\r\n          height: `${Math.ceil(bounds.height)}px`,\r\n        });\r\n      });\r\n    }\r\n  }, [graphData]);\r\n\r\n  const handleGoButtonClick = () => {\r\n    if (!graphData) {\r\n      alert(\"No graph data available.\");\r\n      return;\r\n    }\r\n\r\n    const updatedNodeDataArray = graphData.nodeDataArray.map((node) => {\r\n      if (node.category === \"attribute\") {\r\n        const randomValue = Math.floor(Math.random() * 99) + 1; // Random number between 1 and 99\r\n        return randomValue <= 50 ? { ...node, color: \"red\" } : node;\r\n      }\r\n      return node;\r\n    });\r\n\r\n    setGraphData({\r\n      ...graphData,\r\n      nodeDataArray: updatedNodeDataArray,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Graph Visualization</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleFileUpload}>Upload File</button>\r\n      <button onClick={handleGoButtonClick}>GO</button>\r\n      <div\r\n        ref={diagramRef}\r\n        style={{\r\n          width: dimensions.width,\r\n          height: dimensions.height,\r\n          border: \"1px solid black\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        {!graphData && <p>Graph will be displayed here after uploading a file.</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}