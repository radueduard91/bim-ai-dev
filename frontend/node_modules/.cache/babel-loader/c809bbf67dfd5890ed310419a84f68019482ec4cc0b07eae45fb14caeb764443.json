{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableVisualization = ({\n  graphData,\n  handleLabelChange,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [sortedRows, setSortedRows] = useState([]);\n  const [mergedRows, setMergedRows] = useState([]);\n  const handleDragStart = (event, key) => {\n    event.dataTransfer.setData(\"text/plain\", key);\n    setDraggedItem(key);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    if (sourceKey && sourceKey !== targetKey) {\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n        const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\n        if (sourceNode && targetNode) {\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          if (sourceNode.category === \"attribute\") {\n            if (targetNode.category === \"object\") {\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            } else if (targetNode.category === \"system\") {\n              const linkedObject = updatedNodeDataArray.find(node => prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey));\n              if (linkedObject) {\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\n              }\n              const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\n              const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\n              if (objectLinks.length > 0) {\n                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\n                if (parentObject) {\n                  updatedLinkDataArray.push({\n                    from: targetKey,\n                    to: parentObject.key\n                  });\n                  updatedLinkDataArray.push({\n                    from: parentObject.key,\n                    to: sourceKey\n                  });\n                }\n              }\n            }\n          } else if (sourceNode.category === \"object\") {\n            if (targetNode.category === \"system\") {\n              updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n          }\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n      const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n      const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n      try {\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        if (response.data.message === \"Drag-and-drop operation completed successfully\") {\n          await fetchGraphData();\n        }\n      } catch (error) {\n        if (error.response) {\n          console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\n          alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\n        } else if (error.request) {\n          console.error(\"Error applying drag and drop:\", error.request);\n          alert(\"Error applying drag and drop. No response from server\");\n        } else {\n          console.error(\"Error applying drag and drop:\", error.message);\n          alert(`Error applying drag and drop: ${error.message}`);\n        }\n      }\n    }\n    setDraggedItem(null);\n  };\n  const sortRows = rows => {\n    return [...rows].sort((a, b) => {\n      var _a$parentCluster, _b$parentCluster, _a$parentObject, _b$parentObject;\n      const clusterA = ((_a$parentCluster = a.parentCluster) === null || _a$parentCluster === void 0 ? void 0 : _a$parentCluster.label) || \"Unlinked\";\n      const clusterB = ((_b$parentCluster = b.parentCluster) === null || _b$parentCluster === void 0 ? void 0 : _b$parentCluster.label) || \"Unlinked\";\n      const objectA = ((_a$parentObject = a.parentObject) === null || _a$parentObject === void 0 ? void 0 : _a$parentObject.label) || \"Unlinked\";\n      const objectB = ((_b$parentObject = b.parentObject) === null || _b$parentObject === void 0 ? void 0 : _b$parentObject.label) || \"Unlinked\";\n      const attributeA = a.attr.label;\n      const attributeB = b.attr.label;\n      const compareClusters = clusterA.localeCompare(clusterB);\n      if (compareClusters !== 0) return compareClusters;\n      const compareObjects = objectA.localeCompare(objectB);\n      if (compareObjects !== 0) return compareObjects;\n      return attributeA.localeCompare(attributeB);\n    });\n  };\n  const groupRows = rows => {\n    const grouped = [];\n    let currentGroup = null;\n    rows.forEach(row => {\n      var _row$parentCluster, _row$parentObject;\n      const clusterLabel = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) || \"Unlinked\";\n      const objectLabel = ((_row$parentObject = row.parentObject) === null || _row$parentObject === void 0 ? void 0 : _row$parentObject.label) || \"Unlinked\";\n      const attributeLabel = row.attr.label;\n      if (!currentGroup || currentGroup.clusterLabel !== clusterLabel || currentGroup.objectLabel !== objectLabel || currentGroup.attributeLabel !== attributeLabel) {\n        currentGroup = {\n          clusterLabel,\n          objectLabel,\n          attributeLabel,\n          rows: [],\n          rowSpan: 0\n        };\n        grouped.push(currentGroup);\n      }\n      currentGroup.rows.push(row);\n      currentGroup.rowSpan++;\n    });\n    return grouped;\n  };\n  useEffect(() => {\n    if (graphData) {\n      const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n      const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n      const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n      const rows = attributes.map(attr => {\n        const parentObject = objects.find(obj => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n        const parentCluster = parentObject ? clusters.find(sys => graphData.linkDataArray.some(link => link.from === sys.key && link.to === parentObject.key)) : null;\n        return {\n          attr,\n          parentObject,\n          parentCluster\n        };\n      });\n      const sorted = sortRows(rows);\n      setSortedRows(sorted);\n      setMergedRows(groupRows(sorted));\n    }\n  }, [graphData]);\n  if (!graphData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Table will be displayed here after uploading a file.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\"\n          },\n          children: \"Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\"\n          },\n          children: \"Object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\"\n          },\n          children: \"Attribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: mergedRows.map((group, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: group.rows.map((row, rowIndex) => {\n          var _row$parentCluster4, _row$parentObject4;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [rowIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: \"1px solid black\",\n                padding: \"5px\"\n              },\n              rowSpan: group.rowSpan,\n              onDragOver: e => handleDragOver(e),\n              onDrop: e => {\n                var _row$parentCluster2;\n                return handleDrop(e, (_row$parentCluster2 = row.parentCluster) === null || _row$parentCluster2 === void 0 ? void 0 : _row$parentCluster2.key, \"system\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragStart: e => {\n                  var _row$parentCluster3;\n                  return handleDragStart(e, (_row$parentCluster3 = row.parentCluster) === null || _row$parentCluster3 === void 0 ? void 0 : _row$parentCluster3.key);\n                },\n                children: group.clusterLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ((_row$parentCluster4 = row.parentCluster) === null || _row$parentCluster4 === void 0 ? void 0 : _row$parentCluster4.hoverLabel) || \"\",\n                onChange: e => {\n                  var _row$parentCluster5;\n                  return handleLabelChange(e, (_row$parentCluster5 = row.parentCluster) === null || _row$parentCluster5 === void 0 ? void 0 : _row$parentCluster5.key);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _row$parentCluster6, _row$parentCluster7;\n                  return openPopup((_row$parentCluster6 = row.parentCluster) === null || _row$parentCluster6 === void 0 ? void 0 : _row$parentCluster6.key, ((_row$parentCluster7 = row.parentCluster) === null || _row$parentCluster7 === void 0 ? void 0 : _row$parentCluster7.hoverLabel) || \"\");\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), rowIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: \"1px solid black\",\n                padding: \"5px\"\n              },\n              rowSpan: group.rowSpan,\n              onDragOver: e => handleDragOver(e),\n              onDrop: e => {\n                var _row$parentObject2;\n                return handleDrop(e, (_row$parentObject2 = row.parentObject) === null || _row$parentObject2 === void 0 ? void 0 : _row$parentObject2.key, \"object\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragStart: e => {\n                  var _row$parentObject3;\n                  return handleDragStart(e, (_row$parentObject3 = row.parentObject) === null || _row$parentObject3 === void 0 ? void 0 : _row$parentObject3.key);\n                },\n                children: group.objectLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ((_row$parentObject4 = row.parentObject) === null || _row$parentObject4 === void 0 ? void 0 : _row$parentObject4.hoverLabel) || \"\",\n                onChange: e => {\n                  var _row$parentObject5;\n                  return handleLabelChange(e, (_row$parentObject5 = row.parentObject) === null || _row$parentObject5 === void 0 ? void 0 : _row$parentObject5.key);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _row$parentObject6, _row$parentObject7;\n                  return openPopup((_row$parentObject6 = row.parentObject) === null || _row$parentObject6 === void 0 ? void 0 : _row$parentObject6.key, ((_row$parentObject7 = row.parentObject) === null || _row$parentObject7 === void 0 ? void 0 : _row$parentObject7.hoverLabel) || \"\");\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: \"1px solid black\",\n                padding: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragStart: e => handleDragStart(e, row.attr.key),\n                children: group.attributeLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.attr.hoverLabel || \"\",\n                onChange: e => handleLabelChange(e, row.attr.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openPopup(row.attr.key, row.attr.hoverLabel || \"\"),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, row.attr.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s(TableVisualization, \"vSUm+UuK5M7gd80sW2+kmExT19U=\");\n_c = TableVisualization;\nexport default TableVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableVisualization\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TableVisualization","graphData","handleLabelChange","openPopup","setGraphData","fetchGraphData","_s","draggedItem","setDraggedItem","sortedRows","setSortedRows","mergedRows","setMergedRows","handleDragStart","event","key","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","targetKey","targetCategory","sourceKey","getData","prev","updatedNodeDataArray","nodeDataArray","updatedLinkDataArray","linkDataArray","sourceNode","find","node","targetNode","filter","link","to","category","push","from","linkedObject","some","objects","objectLinks","obj","length","parentObject","l","response","post","source","target","sourceType","targetType","data","message","error","console","status","alert","detail","request","sortRows","rows","sort","a","b","_a$parentCluster","_b$parentCluster","_a$parentObject","_b$parentObject","clusterA","parentCluster","label","clusterB","objectA","objectB","attributeA","attr","attributeB","compareClusters","localeCompare","compareObjects","groupRows","grouped","currentGroup","forEach","row","_row$parentCluster","_row$parentObject","clusterLabel","objectLabel","attributeLabel","rowSpan","clusters","attributes","map","sys","sorted","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","borderCollapse","border","padding","group","index","Fragment","rowIndex","_row$parentCluster4","_row$parentObject4","onDragOver","e","onDrop","_row$parentCluster2","draggable","onDragStart","_row$parentCluster3","type","value","hoverLabel","onChange","_row$parentCluster5","onClick","_row$parentCluster6","_row$parentCluster7","_row$parentObject2","_row$parentObject3","_row$parentObject5","_row$parentObject6","_row$parentObject7","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TableVisualization = ({ graphData, handleLabelChange, openPopup, setGraphData, fetchGraphData }) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const [sortedRows, setSortedRows] = useState([]);\r\n    const [mergedRows, setMergedRows] = useState([]);\r\n\r\n    const handleDragStart = (event, key) => {\r\n        event.dataTransfer.setData(\"text/plain\", key);\r\n        setDraggedItem(key);\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleDrop = async (event, targetKey, targetCategory) => {\r\n        event.preventDefault();\r\n        const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n\r\n        if (sourceKey && sourceKey !== targetKey) {\r\n            setGraphData((prev) => {\r\n                let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                let updatedLinkDataArray = [...prev.linkDataArray];\r\n\r\n                const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\r\n                if (sourceNode && targetNode) {\r\n                    updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                    if (sourceNode.category === \"attribute\") {\r\n                        if (targetNode.category === \"object\") {\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        } else if (targetNode.category === \"system\") {\r\n                            const linkedObject = updatedNodeDataArray.find(node =>\r\n                                prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey)\r\n                            );\r\n                            if (linkedObject) {\r\n                                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\r\n                            }\r\n\r\n                            const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\r\n                            const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\r\n                            if (objectLinks.length > 0) {\r\n                                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\r\n                                if (parentObject) {\r\n                                    updatedLinkDataArray.push({ from: targetKey, to: parentObject.key });\r\n                                    updatedLinkDataArray.push({ from: parentObject.key, to: sourceKey });\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (sourceNode.category === \"object\") {\r\n                        if (targetNode.category === \"system\") {\r\n                            updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    nodeDataArray: updatedNodeDataArray,\r\n                    linkDataArray: updatedLinkDataArray,\r\n                };\r\n            });\r\n\r\n            const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n            const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n            try {\r\n                const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n                    source: sourceKey,\r\n                    target: targetKey,\r\n                    sourceType: sourceNode.category,\r\n                    targetType: targetNode.category\r\n                });\r\n                if (response.data.message === \"Drag-and-drop operation completed successfully\") {\r\n                    await fetchGraphData();\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\r\n                    alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\r\n                } else if (error.request) {\r\n                    console.error(\"Error applying drag and drop:\", error.request);\r\n                    alert(\"Error applying drag and drop. No response from server\");\r\n                } else {\r\n                    console.error(\"Error applying drag and drop:\", error.message);\r\n                    alert(`Error applying drag and drop: ${error.message}`);\r\n                }\r\n            }\r\n        }\r\n        setDraggedItem(null);\r\n    };\r\n\r\n    const sortRows = (rows) => {\r\n        return [...rows].sort((a, b) => {\r\n            const clusterA = a.parentCluster?.label || \"Unlinked\";\r\n            const clusterB = b.parentCluster?.label || \"Unlinked\";\r\n            const objectA = a.parentObject?.label || \"Unlinked\";\r\n            const objectB = b.parentObject?.label || \"Unlinked\";\r\n            const attributeA = a.attr.label;\r\n            const attributeB = b.attr.label;\r\n\r\n            const compareClusters = clusterA.localeCompare(clusterB);\r\n            if (compareClusters !== 0) return compareClusters;\r\n\r\n            const compareObjects = objectA.localeCompare(objectB);\r\n            if (compareObjects !== 0) return compareObjects;\r\n\r\n            return attributeA.localeCompare(attributeB);\r\n        });\r\n    };\r\n\r\n    const groupRows = (rows) => {\r\n        const grouped = [];\r\n        let currentGroup = null;\r\n\r\n        rows.forEach(row => {\r\n            const clusterLabel = row.parentCluster?.label || \"Unlinked\";\r\n            const objectLabel = row.parentObject?.label || \"Unlinked\";\r\n            const attributeLabel = row.attr.label;\r\n\r\n            if (!currentGroup || currentGroup.clusterLabel !== clusterLabel || currentGroup.objectLabel !== objectLabel || currentGroup.attributeLabel !== attributeLabel) {\r\n                currentGroup = {\r\n                    clusterLabel,\r\n                    objectLabel,\r\n                    attributeLabel,\r\n                    rows: [],\r\n                    rowSpan: 0\r\n                };\r\n                grouped.push(currentGroup);\r\n            }\r\n\r\n            currentGroup.rows.push(row);\r\n            currentGroup.rowSpan++;\r\n        });\r\n\r\n        return grouped;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (graphData) {\r\n            const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n            const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n            const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n            const rows = attributes.map((attr) => {\r\n                const parentObject = objects.find((obj) =>\r\n                    graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n                );\r\n\r\n                const parentCluster = parentObject\r\n                    ? clusters.find((sys) =>\r\n                        graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n                    )\r\n                    : null;\r\n\r\n                return { attr, parentObject, parentCluster };\r\n            });\r\n\r\n            const sorted = sortRows(rows);\r\n            setSortedRows(sorted);\r\n            setMergedRows(groupRows(sorted));\r\n        }\r\n    }, [graphData]);\r\n\r\n    if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\r\n\r\n    return (\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n                <tr>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Cluster</th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Object</th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Attribute</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {mergedRows.map((group, index) => (\r\n                    <React.Fragment key={index}>\r\n                        {group.rows.map((row, rowIndex) => (\r\n                            <tr key={row.attr.key}>\r\n                                {rowIndex === 0 && (\r\n                                    <td\r\n                                        style={{ border: \"1px solid black\", padding: \"5px\" }}\r\n                                        rowSpan={group.rowSpan}\r\n                                        onDragOver={(e) => handleDragOver(e)}\r\n                                        onDrop={(e) => handleDrop(e, row.parentCluster?.key, \"system\")}\r\n                                    >\r\n                                        <div\r\n                                            draggable\r\n                                            onDragStart={(e) => handleDragStart(e, row.parentCluster?.key)}\r\n                                        >\r\n                                            {group.clusterLabel}\r\n                                        </div>\r\n                                        <br />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={row.parentCluster?.hoverLabel || \"\"}\r\n                                            onChange={(e) => handleLabelChange(e, row.parentCluster?.key)}\r\n                                        />\r\n                                        <button onClick={() => openPopup(row.parentCluster?.key, row.parentCluster?.hoverLabel || \"\")}>+</button>\r\n                                    </td>\r\n                                )}\r\n                                {rowIndex === 0 && (\r\n                                    <td\r\n                                        style={{ border: \"1px solid black\", padding: \"5px\" }}\r\n                                        rowSpan={group.rowSpan}\r\n                                        onDragOver={(e) => handleDragOver(e)}\r\n                                        onDrop={(e) => handleDrop(e, row.parentObject?.key, \"object\")}\r\n                                    >\r\n                                        <div\r\n                                            draggable\r\n                                            onDragStart={(e) => handleDragStart(e, row.parentObject?.key)}\r\n                                        >\r\n                                            {group.objectLabel}\r\n                                        </div>\r\n                                        <br />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={row.parentObject?.hoverLabel || \"\"}\r\n                                            onChange={(e) => handleLabelChange(e, row.parentObject?.key)}\r\n                                        />\r\n                                        <button onClick={() => openPopup(row.parentObject?.key, row.parentObject?.hoverLabel || \"\")}>+</button>\r\n                                    </td>\r\n                                )}\r\n                                <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n                                    <div\r\n                                        draggable\r\n                                        onDragStart={(e) => handleDragStart(e, row.attr.key)}\r\n                                    >\r\n                                        {group.attributeLabel}\r\n                                    </div>\r\n                                    <br />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={row.attr.hoverLabel || \"\"}\r\n                                        onChange={(e) => handleLabelChange(e, row.attr.key)}\r\n                                    />\r\n                                    <button onClick={() => openPopup(row.attr.key, row.attr.hoverLabel || \"\")}>+</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </React.Fragment>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TableVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}