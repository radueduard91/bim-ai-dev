{"ast":null,"code":"export const sortRows = rows => {\n  const unlinkedAttributes = rows.filter(row => !row.parentCluster && !row.parentObject);\n  const linkedRows = rows.filter(row => row.parentCluster || row.parentObject);\n  const sortedLinkedRows = [...linkedRows].sort((a, b) => {\n    var _a$parentCluster, _b$parentCluster, _a$parentObject, _b$parentObject;\n    const clusterA = ((_a$parentCluster = a.parentCluster) === null || _a$parentCluster === void 0 ? void 0 : _a$parentCluster.label) || \"Unlinked\";\n    const clusterB = ((_b$parentCluster = b.parentCluster) === null || _b$parentCluster === void 0 ? void 0 : _b$parentCluster.label) || \"Unlinked\";\n    const objectA = ((_a$parentObject = a.parentObject) === null || _a$parentObject === void 0 ? void 0 : _a$parentObject.label) || \"Unlinked\";\n    const objectB = ((_b$parentObject = b.parentObject) === null || _b$parentObject === void 0 ? void 0 : _b$parentObject.label) || \"Unlinked\";\n    const attributeA = a.attr.label;\n    const attributeB = b.attr.label;\n    const compareClusters = clusterA.localeCompare(clusterB);\n    if (compareClusters !== 0) return compareClusters;\n    const compareObjects = objectA.localeCompare(objectB);\n    if (compareObjects !== 0) return compareObjects;\n    return attributeA.localeCompare(attributeB);\n  });\n  return [...unlinkedAttributes, ...sortedLinkedRows];\n};\nexport const processRowSpans = sorted => {\n  const spans = {};\n  let prevCluster = null;\n  let prevObject = null;\n  let clusterSpan = 1;\n  let objectSpan = 1;\n  sorted.forEach((row, index) => {\n    var _row$parentCluster, _row$parentObject;\n    const currentCluster = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) || \"Unlinked\";\n    const currentObject = ((_row$parentObject = row.parentObject) === null || _row$parentObject === void 0 ? void 0 : _row$parentObject.label) || \"Unlinked\";\n    if (currentCluster === prevCluster) {\n      clusterSpan++;\n      spans[index] = {\n        ...spans[index],\n        clusterSpan: 0\n      };\n    } else {\n      spans[index - clusterSpan] = {\n        ...spans[index - clusterSpan],\n        clusterSpan\n      };\n      clusterSpan = 1;\n    }\n    if (currentObject === prevObject) {\n      objectSpan++;\n      spans[index] = {\n        ...spans[index],\n        objectSpan: 0\n      };\n    } else {\n      spans[index - objectSpan] = {\n        ...spans[index - objectSpan],\n        objectSpan\n      };\n      objectSpan = 1;\n    }\n    prevCluster = currentCluster;\n    prevObject = currentObject;\n  });\n\n  // Handle the last group\n  spans[sorted.length - clusterSpan] = {\n    ...spans[sorted.length - clusterSpan],\n    clusterSpan\n  };\n  spans[sorted.length - objectSpan] = {\n    ...spans[sorted.length - objectSpan],\n    objectSpan\n  };\n  return spans;\n};","map":{"version":3,"names":["sortRows","rows","unlinkedAttributes","filter","row","parentCluster","parentObject","linkedRows","sortedLinkedRows","sort","a","b","_a$parentCluster","_b$parentCluster","_a$parentObject","_b$parentObject","clusterA","label","clusterB","objectA","objectB","attributeA","attr","attributeB","compareClusters","localeCompare","compareObjects","processRowSpans","sorted","spans","prevCluster","prevObject","clusterSpan","objectSpan","forEach","index","_row$parentCluster","_row$parentObject","currentCluster","currentObject","length"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization/RowProcessing.js"],"sourcesContent":["export const sortRows = (rows) => {\r\n    const unlinkedAttributes = rows.filter(row => !row.parentCluster && !row.parentObject);\r\n    const linkedRows = rows.filter(row => row.parentCluster || row.parentObject);\r\n\r\n    const sortedLinkedRows = [...linkedRows].sort((a, b) => {\r\n        const clusterA = a.parentCluster?.label || \"Unlinked\";\r\n        const clusterB = b.parentCluster?.label || \"Unlinked\";\r\n        const objectA = a.parentObject?.label || \"Unlinked\";\r\n        const objectB = b.parentObject?.label || \"Unlinked\";\r\n        const attributeA = a.attr.label;\r\n        const attributeB = b.attr.label;\r\n\r\n        const compareClusters = clusterA.localeCompare(clusterB);\r\n        if (compareClusters !== 0) return compareClusters;\r\n\r\n        const compareObjects = objectA.localeCompare(objectB);\r\n        if (compareObjects !== 0) return compareObjects;\r\n\r\n        return attributeA.localeCompare(attributeB);\r\n    });\r\n    \r\n    return [...unlinkedAttributes, ...sortedLinkedRows];\r\n};\r\n\r\nexport const processRowSpans = (sorted) => {\r\n    const spans = {};\r\n    let prevCluster = null;\r\n    let prevObject = null;\r\n    let clusterSpan = 1;\r\n    let objectSpan = 1;\r\n\r\n    sorted.forEach((row, index) => {\r\n        const currentCluster = row.parentCluster?.label || \"Unlinked\";\r\n        const currentObject = row.parentObject?.label || \"Unlinked\";\r\n\r\n        if (currentCluster === prevCluster) {\r\n            clusterSpan++;\r\n            spans[index] = { ...spans[index], clusterSpan: 0 };\r\n        } else {\r\n            spans[index - clusterSpan] = { ...spans[index - clusterSpan], clusterSpan };\r\n            clusterSpan = 1;\r\n        }\r\n\r\n        if (currentObject === prevObject) {\r\n            objectSpan++;\r\n            spans[index] = { ...spans[index], objectSpan: 0 };\r\n        } else {\r\n            spans[index - objectSpan] = { ...spans[index - objectSpan], objectSpan };\r\n            objectSpan = 1;\r\n        }\r\n\r\n        prevCluster = currentCluster;\r\n        prevObject = currentObject;\r\n    });\r\n\r\n    // Handle the last group\r\n    spans[sorted.length - clusterSpan] = { \r\n        ...spans[sorted.length - clusterSpan], \r\n        clusterSpan \r\n    };\r\n    spans[sorted.length - objectSpan] = { \r\n        ...spans[sorted.length - objectSpan], \r\n        objectSpan \r\n    };\r\n\r\n    return spans;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}