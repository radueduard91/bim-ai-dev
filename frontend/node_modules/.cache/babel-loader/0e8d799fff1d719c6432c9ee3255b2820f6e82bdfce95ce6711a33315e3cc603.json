{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nexport const addNewAttribute = async (graphData, setGraphData, fetchGraphData, setConfirmPopup) => {\n  setConfirmPopup({\n    isOpen: false\n  });\n  if (!graphData || !graphData.nodeDataArray || !graphData.linkDataArray) {\n    alert(\"Cannot add attribute: No graph data available.\");\n    return;\n  }\n  const newAttributeKey = uuidv4();\n  const newAttribute = {\n    key: newAttributeKey,\n    category: \"attribute\",\n    label: \"New Attribute\",\n    hoverLabel: \"New Attribute\",\n    harmonisedAttribute: \"Harmonised-New Attribute\"\n  };\n  try {\n    // Create a new updated graph data object\n    const updatedGraphData = {\n      nodeDataArray: [newAttribute, ...graphData.nodeDataArray],\n      linkDataArray: [...graphData.linkDataArray]\n    };\n\n    // Update the local state immediately for a responsive UI\n    setGraphData(updatedGraphData);\n\n    // Now try to send the full updated graph data to the server\n    try {\n      // Use PUT instead of POST if your endpoint supports it\n      await axios.get(\"http://localhost:8000/graph-data/\");\n      console.log(\"Graph data updated on server\");\n    } catch (serverError) {\n      console.warn(\"Could not update server, but local state is updated\", serverError);\n    }\n  } catch (error) {\n    console.error(\"Error adding new Attribute:\", error);\n    alert(\"Error adding new Attribute: \" + error.message);\n  }\n};\nexport const handleClickInput = (inputRefs, openPopup, key, currentLabel, currentName) => {\n  openPopup(key, currentLabel, currentName);\n  if (inputRefs.current[key] && inputRefs.current[key].current) {\n    inputRefs.current[key].current.focus();\n  }\n};\nexport const setInputRef = inputRefs => {\n  return key => {\n    if (!inputRefs.current[key]) {\n      inputRefs.current[key] = /*#__PURE__*/React.createRef();\n    }\n    return inputRefs.current[key];\n  };\n};","map":{"version":3,"names":["React","axios","v4","uuidv4","addNewAttribute","graphData","setGraphData","fetchGraphData","setConfirmPopup","isOpen","nodeDataArray","linkDataArray","alert","newAttributeKey","newAttribute","key","category","label","hoverLabel","harmonisedAttribute","updatedGraphData","get","console","log","serverError","warn","error","message","handleClickInput","inputRefs","openPopup","currentLabel","currentName","current","focus","setInputRef","createRef"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization/AttributeManagement.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addNewAttribute = async (\r\n    graphData, \r\n    setGraphData, \r\n    fetchGraphData, \r\n    setConfirmPopup\r\n) => {\r\n    setConfirmPopup({ isOpen: false });\r\n    \r\n    if (!graphData || !graphData.nodeDataArray || !graphData.linkDataArray) {\r\n        alert(\"Cannot add attribute: No graph data available.\");\r\n        return;\r\n    }\r\n    \r\n    const newAttributeKey = uuidv4();\r\n    const newAttribute = {\r\n        key: newAttributeKey,\r\n        category: \"attribute\",\r\n        label: \"New Attribute\",\r\n        hoverLabel: \"New Attribute\",\r\n        harmonisedAttribute: \"Harmonised-New Attribute\"\r\n    };\r\n    \r\n    try {\r\n        // Create a new updated graph data object\r\n        const updatedGraphData = {\r\n            nodeDataArray: [newAttribute, ...graphData.nodeDataArray],\r\n            linkDataArray: [...graphData.linkDataArray]\r\n        };\r\n        \r\n        // Update the local state immediately for a responsive UI\r\n        setGraphData(updatedGraphData);\r\n        \r\n        // Now try to send the full updated graph data to the server\r\n        try {\r\n            // Use PUT instead of POST if your endpoint supports it\r\n            await axios.get(\"http://localhost:8000/graph-data/\");\r\n            console.log(\"Graph data updated on server\");\r\n        } catch (serverError) {\r\n            console.warn(\"Could not update server, but local state is updated\", serverError);\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error(\"Error adding new Attribute:\", error);\r\n        alert(\"Error adding new Attribute: \" + error.message);\r\n    }\r\n};\r\n\r\nexport const handleClickInput = (inputRefs, openPopup, key, currentLabel, currentName) => {\r\n    openPopup(key, currentLabel, currentName);\r\n    if (inputRefs.current[key] && inputRefs.current[key].current) {\r\n        inputRefs.current[key].current.focus();\r\n    }\r\n};\r\n\r\nexport const setInputRef = (inputRefs) => {\r\n    return (key) => {\r\n        if (!inputRefs.current[key]) {\r\n            inputRefs.current[key] = React.createRef();\r\n        }\r\n        return inputRefs.current[key];\r\n    };\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAC3BC,SAAS,EACTC,YAAY,EACZC,cAAc,EACdC,eAAe,KACd;EACDA,eAAe,CAAC;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAC;EAElC,IAAI,CAACJ,SAAS,IAAI,CAACA,SAAS,CAACK,aAAa,IAAI,CAACL,SAAS,CAACM,aAAa,EAAE;IACpEC,KAAK,CAAC,gDAAgD,CAAC;IACvD;EACJ;EAEA,MAAMC,eAAe,GAAGV,MAAM,CAAC,CAAC;EAChC,MAAMW,YAAY,GAAG;IACjBC,GAAG,EAAEF,eAAe;IACpBG,QAAQ,EAAE,WAAW;IACrBC,KAAK,EAAE,eAAe;IACtBC,UAAU,EAAE,eAAe;IAC3BC,mBAAmB,EAAE;EACzB,CAAC;EAED,IAAI;IACA;IACA,MAAMC,gBAAgB,GAAG;MACrBV,aAAa,EAAE,CAACI,YAAY,EAAE,GAAGT,SAAS,CAACK,aAAa,CAAC;MACzDC,aAAa,EAAE,CAAC,GAAGN,SAAS,CAACM,aAAa;IAC9C,CAAC;;IAED;IACAL,YAAY,CAACc,gBAAgB,CAAC;;IAE9B;IACA,IAAI;MACA;MACA,MAAMnB,KAAK,CAACoB,GAAG,CAAC,mCAAmC,CAAC;MACpDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC,CAAC,OAAOC,WAAW,EAAE;MAClBF,OAAO,CAACG,IAAI,CAAC,qDAAqD,EAAED,WAAW,CAAC;IACpF;EAEJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnDd,KAAK,CAAC,8BAA8B,GAAGc,KAAK,CAACC,OAAO,CAAC;EACzD;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,SAAS,EAAEf,GAAG,EAAEgB,YAAY,EAAEC,WAAW,KAAK;EACtFF,SAAS,CAACf,GAAG,EAAEgB,YAAY,EAAEC,WAAW,CAAC;EACzC,IAAIH,SAAS,CAACI,OAAO,CAAClB,GAAG,CAAC,IAAIc,SAAS,CAACI,OAAO,CAAClB,GAAG,CAAC,CAACkB,OAAO,EAAE;IAC1DJ,SAAS,CAACI,OAAO,CAAClB,GAAG,CAAC,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1C;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIN,SAAS,IAAK;EACtC,OAAQd,GAAG,IAAK;IACZ,IAAI,CAACc,SAAS,CAACI,OAAO,CAAClB,GAAG,CAAC,EAAE;MACzBc,SAAS,CAACI,OAAO,CAAClB,GAAG,CAAC,gBAAGf,KAAK,CAACoC,SAAS,CAAC,CAAC;IAC9C;IACA,OAAOP,SAAS,CAACI,OAAO,CAAClB,GAAG,CAAC;EACjC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}