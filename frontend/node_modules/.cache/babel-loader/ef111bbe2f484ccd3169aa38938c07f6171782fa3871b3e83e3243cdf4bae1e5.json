{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableVisualization = ({\n  graphData,\n  handleLabelChange,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [sortedRows, setSortedRows] = useState([]);\n  const [rowSpans, setRowSpans] = useState({});\n  const [clusterCounts, setClusterCounts] = useState({});\n  const [objectCounts, setObjectCounts] = useState({});\n  const inputRefs = useRef({});\n  const [confirmPopup, setConfirmPopup] = useState({\n    isOpen: false,\n    type: null\n  });\n  const handleDragStart = (event, key) => {\n    event.dataTransfer.setData(\"text/plain\", key);\n    setDraggedItem(key);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    if (sourceKey && sourceKey !== targetKey) {\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n\n        // Find the source node and target node.\n        const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\n        if (sourceNode && targetNode) {\n          // Remove all existing links where the source node is the to\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          if (sourceNode.category === \"attribute\") {\n            // If target is object, create new link\n            if (targetNode.category === \"object\") {\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n            // if target is system, check if object exists then create new links\n            else if (targetNode.category === \"system\") {\n              const linkedObject = updatedNodeDataArray.find(node => prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey));\n              if (linkedObject) {\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\n              }\n              const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\n              const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\n              if (objectLinks.length > 0) {\n                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\n                if (parentObject) {\n                  updatedLinkDataArray.push({\n                    from: targetKey,\n                    to: parentObject.key\n                  });\n                  updatedLinkDataArray.push({\n                    from: parentObject.key,\n                    to: sourceKey\n                  });\n                }\n              }\n            }\n          }\n\n          //If source is object\n          else if (sourceNode.category === \"object\") {\n            if (targetNode.category === \"system\") {\n              updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n          }\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n      const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n      const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n      try {\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        if (response.data.message === \"Drag-and-drop operation completed successfully\") {\n          await fetchGraphData();\n        }\n      } catch (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\n          alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.error(\"Error applying drag and drop:\", error.request);\n          alert(\"Error applying drag and drop. No response from server\");\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.error(\"Error applying drag and drop:\", error.message);\n          alert(`Error applying drag and drop: ${error.message}`);\n        }\n      }\n    }\n    setDraggedItem(null);\n  };\n\n  // Sort function\n  const sortRows = rows => {\n    const unlinkedAttributes = rows.filter(row => {\n      var _row$attr;\n      return !row.parentCluster && !row.parentObject && ((_row$attr = row.attr) === null || _row$attr === void 0 ? void 0 : _row$attr.category) === \"attribute\";\n    });\n    const unlinkedObjects = rows.filter(row => {\n      var _row$attr2;\n      return !row.parentCluster && !row.parentObject && ((_row$attr2 = row.attr) === null || _row$attr2 === void 0 ? void 0 : _row$attr2.category) === \"object\";\n    });\n    const linkedRows = rows.filter(row => row.parentCluster || row.parentObject);\n    const sortedLinkedRows = [...linkedRows].sort((a, b) => {\n      var _a$parentCluster, _b$parentCluster, _a$parentObject, _b$parentObject;\n      const clusterA = ((_a$parentCluster = a.parentCluster) === null || _a$parentCluster === void 0 ? void 0 : _a$parentCluster.label) || \"Unlinked\";\n      const clusterB = ((_b$parentCluster = b.parentCluster) === null || _b$parentCluster === void 0 ? void 0 : _b$parentCluster.label) || \"Unlinked\";\n      const objectA = ((_a$parentObject = a.parentObject) === null || _a$parentObject === void 0 ? void 0 : _a$parentObject.label) || \"Unlinked\";\n      const objectB = ((_b$parentObject = b.parentObject) === null || _b$parentObject === void 0 ? void 0 : _b$parentObject.label) || \"Unlinked\";\n      const attributeA = a.attr.label;\n      const attributeB = b.attr.label;\n      const compareClusters = clusterA.localeCompare(clusterB);\n      if (compareClusters !== 0) return compareClusters;\n      const compareObjects = objectA.localeCompare(objectB);\n      if (compareObjects !== 0) return compareObjects;\n      return attributeA.localeCompare(attributeB);\n    });\n    return [...unlinkedObjects, ...unlinkedAttributes, ...sortedLinkedRows];\n  };\n\n  // Calculate counts for clusters and objects\n  const calculateCounts = graphData => {\n    const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n    const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n    const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n    const clusterCounts = {};\n    const objectCounts = {};\n    clusters.forEach(cluster => {\n      const linkedObjects = objects.filter(obj => graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key));\n      clusterCounts[cluster.key] = linkedObjects.length;\n    });\n    objects.forEach(obj => {\n      const linkedAttributes = attributes.filter(attr => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n      objectCounts[obj.key] = linkedAttributes.length;\n    });\n    return {\n      clusterCounts,\n      objectCounts\n    };\n  };\n  useEffect(() => {\n    if (graphData) {\n      const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n      const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n      const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n      const rows = attributes.map(attr => {\n        const parentObject = objects.find(obj => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n        const parentCluster = parentObject ? clusters.find(sys => graphData.linkDataArray.some(link => link.from === sys.key && link.to === parentObject.key)) : null;\n        return {\n          attr,\n          parentObject,\n          parentCluster\n        };\n      });\n      const objectRows = objects.map(obj => {\n        return {\n          attr: obj,\n          parentObject: null,\n          parentCluster: null\n        };\n      });\n      const allRows = [...rows, ...objectRows];\n      const sorted = sortRows(allRows);\n      setSortedRows(sorted);\n\n      // Calculate row spans for Cluster and Object columns\n      const spans = {};\n      let prevCluster = null;\n      let prevObject = null;\n      let clusterSpan = 1;\n      let objectSpan = 1;\n      sorted.forEach((row, index) => {\n        var _row$parentCluster, _row$parentObject;\n        const currentCluster = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) || \"Unlinked\";\n        const currentObject = ((_row$parentObject = row.parentObject) === null || _row$parentObject === void 0 ? void 0 : _row$parentObject.label) || \"Unlinked\";\n        if (currentCluster === prevCluster) {\n          clusterSpan++;\n          spans[index] = {\n            ...spans[index],\n            clusterSpan: 0\n          };\n        } else {\n          spans[index - clusterSpan] = {\n            ...spans[index - clusterSpan],\n            clusterSpan\n          };\n          clusterSpan = 1;\n        }\n        if (currentObject === prevObject) {\n          objectSpan++;\n          spans[index] = {\n            ...spans[index],\n            objectSpan: 0\n          };\n        } else {\n          spans[index - objectSpan] = {\n            ...spans[index - objectSpan],\n            objectSpan\n          };\n          objectSpan = 1;\n        }\n        prevCluster = currentCluster;\n        prevObject = currentObject;\n      });\n\n      // Handle the last group\n      spans[sorted.length - clusterSpan] = {\n        ...spans[sorted.length - clusterSpan],\n        clusterSpan\n      };\n      spans[sorted.length - objectSpan] = {\n        ...spans[sorted.length - objectSpan],\n        objectSpan\n      };\n      setRowSpans(spans);\n\n      // Calculate counts for clusters and objects\n      const {\n        clusterCounts,\n        objectCounts\n      } = calculateCounts(graphData);\n      setClusterCounts(clusterCounts);\n      setObjectCounts(objectCounts);\n    }\n  }, [graphData]);\n  const getDisplayText = text => {\n    if (!text) return \"\";\n    const lines = text.split('\\n');\n    const firstTwoLines = lines.slice(0, 2).join('\\n');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden',\n          whiteSpace: 'pre-line',\n          maxWidth: \"calc(100% - 20px)\",\n          marginRight: \"2px\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: firstTwoLines.substring(0, 100)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/zoom-in.png\",\n        alt: \"Click to expand\",\n        style: {\n          position: 'absolute',\n          bottom: '2px',\n          right: '2px',\n          width: \"16px\",\n          height: \"16px\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this);\n  };\n  const handleClickInput = (key, currentLabel, currentName) => {\n    openPopup(key, currentLabel, currentName);\n    if (inputRefs.current[key] && inputRefs.current[key].current) {\n      inputRefs.current[key].current.focus();\n    }\n  };\n  const setInputRef = key => {\n    return inputRefs.current[key] ? inputRefs.current[key] : inputRefs.current[key] = /*#__PURE__*/React.createRef();\n  };\n  const handleAddAttribute = () => {\n    setConfirmPopup({\n      isOpen: true,\n      type: \"attribute\"\n    });\n  };\n  const handleAddObject = () => {\n    setConfirmPopup({\n      isOpen: true,\n      type: \"object\"\n    });\n  };\n  const confirmAddNode = async () => {\n    setConfirmPopup({\n      isOpen: false,\n      type: null\n    });\n    const newNodeKey = uuidv4();\n    let newNode = {};\n    if (confirmPopup.type === \"attribute\") {\n      newNode = {\n        key: newNodeKey,\n        category: \"attribute\",\n        label: \"New Attribute\",\n        hoverLabel: \"New Attribute\"\n      };\n    } else if (confirmPopup.type === \"object\") {\n      newNode = {\n        key: newNodeKey,\n        category: \"object\",\n        label: \"New Object\",\n        hoverLabel: \"New Object\"\n      };\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8000/graph-data/\", {\n        nodeDataArray: [newNode, ...graphData.nodeDataArray],\n        linkDataArray: [...graphData.linkDataArray]\n      });\n      if (response.data.message === \"Graph data updated successfully\") {\n        setGraphData(prev => ({\n          ...prev,\n          nodeDataArray: [newNode, ...prev.nodeDataArray]\n        }));\n        await fetchGraphData();\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error adding new Node:\", error.response.status, error.response.data);\n        alert(`Error adding new Node. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\n      } else if (error.request) {\n        console.error(\"Error applying drag and drop:\", error.request);\n        alert(\"Error adding new Node. No response from server\");\n      } else {\n        console.error(\"Error applying drag and drop:\", error.message);\n        alert(`Error adding new Node: ${error.message}`);\n      }\n    }\n  };\n  const cancelAddNode = () => {\n    setConfirmPopup({\n      isOpen: false,\n      type: null\n    });\n  };\n  if (!graphData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Table will be displayed here after uploading a file.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    children: [confirmPopup.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        background: \"white\",\n        border: \"1px solid black\",\n        padding: \"20px\",\n        zIndex: 1001\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"An unlinked \", confirmPopup.type, \" will be created at the top of the screen. Would you like to proceed?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmAddNode,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelAddNode,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\",\n            fontSize: \"0.9em\"\n          },\n          children: \"Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\",\n            fontSize: \"0.9em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            },\n            children: [\"Object\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddObject,\n              style: {\n                padding: \"0\",\n                border: \"none\",\n                backgroundColor: \"transparent\",\n                fontSize: \"1.2em\",\n                cursor: \"pointer\"\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\",\n            fontSize: \"0.9em\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [\"Attribute\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddAttribute,\n            style: {\n              padding: \"0\",\n              border: \"none\",\n              backgroundColor: \"transparent\",\n              fontSize: \"1.2em\",\n              cursor: \"pointer\"\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: sortedRows.map((row, index) => {\n        var _rowSpans$index, _row$parentCluster4, _row$parentCluster5, _row$parentCluster9, _row$parentCluster13, _row$parentCluster14, _row$parentCluster16, _rowSpans$index2, _row$parentObject4, _row$parentObject5, _row$parentObject9, _row$parentObject13, _row$parentObject14, _row$parentObject16;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [((_rowSpans$index = rowSpans[index]) === null || _rowSpans$index === void 0 ? void 0 : _rowSpans$index.clusterSpan) > 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: rowSpans[index].clusterSpan,\n            style: {\n              border: \"1px solid black\",\n              padding: \"2px\",\n              position: \"relative\",\n              fontSize: \"0.9em\"\n            },\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => {\n              var _row$parentCluster2;\n              return handleDrop(e, (_row$parentCluster2 = row.parentCluster) === null || _row$parentCluster2 === void 0 ? void 0 : _row$parentCluster2.key, \"system\");\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => {\n                var _row$parentCluster3;\n                return handleDragStart(e, (_row$parentCluster3 = row.parentCluster) === null || _row$parentCluster3 === void 0 ? void 0 : _row$parentCluster3.key);\n              },\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                lineHeight: \"1.2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  flex: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: [((_row$parentCluster4 = row.parentCluster) === null || _row$parentCluster4 === void 0 ? void 0 : _row$parentCluster4.label) || \"Unlinked\", \" [\", clusterCounts[(_row$parentCluster5 = row.parentCluster) === null || _row$parentCluster5 === void 0 ? void 0 : _row$parentCluster5.key] || 0, \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/edit-icon.png\",\n                alt: \"Edit\",\n                style: {\n                  width: \"16px\",\n                  height: \"16px\",\n                  cursor: \"pointer\",\n                  marginLeft: \"5px\"\n                },\n                onClick: () => {\n                  var _row$parentCluster6, _row$parentCluster7, _row$parentCluster8;\n                  return openPopup((_row$parentCluster6 = row.parentCluster) === null || _row$parentCluster6 === void 0 ? void 0 : _row$parentCluster6.key, ((_row$parentCluster7 = row.parentCluster) === null || _row$parentCluster7 === void 0 ? void 0 : _row$parentCluster7.hoverLabel) || \"\", ((_row$parentCluster8 = row.parentCluster) === null || _row$parentCluster8 === void 0 ? void 0 : _row$parentCluster8.label) || \"\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                border: (_row$parentCluster9 = row.parentCluster) !== null && _row$parentCluster9 !== void 0 && _row$parentCluster9.hoverLabel ? \"1px solid #ccc\" : \"none\",\n                padding: \"2px\",\n                position: 'relative'\n              },\n              onClick: () => {\n                var _row$parentCluster10, _row$parentCluster11, _row$parentCluster12;\n                return handleClickInput((_row$parentCluster10 = row.parentCluster) === null || _row$parentCluster10 === void 0 ? void 0 : _row$parentCluster10.key, ((_row$parentCluster11 = row.parentCluster) === null || _row$parentCluster11 === void 0 ? void 0 : _row$parentCluster11.hoverLabel) || \"\", ((_row$parentCluster12 = row.parentCluster) === null || _row$parentCluster12 === void 0 ? void 0 : _row$parentCluster12.label) || \"\");\n              },\n              children: getDisplayText((_row$parentCluster13 = row.parentCluster) === null || _row$parentCluster13 === void 0 ? void 0 : _row$parentCluster13.hoverLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_row$parentCluster14 = row.parentCluster) === null || _row$parentCluster14 === void 0 ? void 0 : _row$parentCluster14.hoverLabel) || \"\",\n              onChange: e => {\n                var _row$parentCluster15;\n                return handleLabelChange(e, (_row$parentCluster15 = row.parentCluster) === null || _row$parentCluster15 === void 0 ? void 0 : _row$parentCluster15.key);\n              },\n              style: {\n                display: \"none\"\n              },\n              ref: setInputRef((_row$parentCluster16 = row.parentCluster) === null || _row$parentCluster16 === void 0 ? void 0 : _row$parentCluster16.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this) : null, ((_rowSpans$index2 = rowSpans[index]) === null || _rowSpans$index2 === void 0 ? void 0 : _rowSpans$index2.objectSpan) > 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: rowSpans[index].objectSpan,\n            style: {\n              border: \"1px solid black\",\n              padding: \"2px\",\n              position: \"relative\",\n              fontSize: \"0.9em\"\n            },\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => {\n              var _row$parentObject2;\n              return handleDrop(e, (_row$parentObject2 = row.parentObject) === null || _row$parentObject2 === void 0 ? void 0 : _row$parentObject2.key, \"object\");\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => {\n                var _row$parentObject3;\n                return handleDragStart(e, (_row$parentObject3 = row.parentObject) === null || _row$parentObject3 === void 0 ? void 0 : _row$parentObject3.key);\n              },\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                lineHeight: \"1.2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  flex: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: [\" \", ((_row$parentObject4 = row.parentObject) === null || _row$parentObject4 === void 0 ? void 0 : _row$parentObject4.label) || \"Unlinked\", \" (\", objectCounts[(_row$parentObject5 = row.parentObject) === null || _row$parentObject5 === void 0 ? void 0 : _row$parentObject5.key] || 0, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/edit-icon.png\",\n                alt: \"Edit\",\n                style: {\n                  width: \"16px\",\n                  height: \"16px\",\n                  cursor: \"pointer\",\n                  marginLeft: \"5px\"\n                },\n                onClick: () => {\n                  var _row$parentObject6, _row$parentObject7, _row$parentObject8;\n                  return openPopup((_row$parentObject6 = row.parentObject) === null || _row$parentObject6 === void 0 ? void 0 : _row$parentObject6.key, ((_row$parentObject7 = row.parentObject) === null || _row$parentObject7 === void 0 ? void 0 : _row$parentObject7.hoverLabel) || \"\", ((_row$parentObject8 = row.parentObject) === null || _row$parentObject8 === void 0 ? void 0 : _row$parentObject8.label) || \"\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                border: (_row$parentObject9 = row.parentObject) !== null && _row$parentObject9 !== void 0 && _row$parentObject9.hoverLabel ? \"1px solid #ccc\" : \"none\",\n                padding: \"2px\",\n                position: 'relative'\n              },\n              onClick: () => {\n                var _row$parentObject10, _row$parentObject11, _row$parentObject12;\n                return handleClickInput((_row$parentObject10 = row.parentObject) === null || _row$parentObject10 === void 0 ? void 0 : _row$parentObject10.key, ((_row$parentObject11 = row.parentObject) === null || _row$parentObject11 === void 0 ? void 0 : _row$parentObject11.hoverLabel) || \"\", ((_row$parentObject12 = row.parentObject) === null || _row$parentObject12 === void 0 ? void 0 : _row$parentObject12.label) || \"\");\n              },\n              children: getDisplayText((_row$parentObject13 = row.parentObject) === null || _row$parentObject13 === void 0 ? void 0 : _row$parentObject13.hoverLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_row$parentObject14 = row.parentObject) === null || _row$parentObject14 === void 0 ? void 0 : _row$parentObject14.hoverLabel) || \"\",\n              onChange: e => {\n                var _row$parentObject15;\n                return handleLabelChange(e, (_row$parentObject15 = row.parentObject) === null || _row$parentObject15 === void 0 ? void 0 : _row$parentObject15.key);\n              },\n              style: {\n                display: \"none\"\n              },\n              ref: setInputRef((_row$parentObject16 = row.parentObject) === null || _row$parentObject16 === void 0 ? void 0 : _row$parentObject16.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"2px\",\n              position: \"relative\",\n              fontSize: \"0.9em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => handleDragStart(e, row.attr.key),\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                lineHeight: \"1.2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  flex: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: [\" \", row.attr.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/edit-icon.png\",\n                alt: \"Edit\",\n                style: {\n                  width: \"16px\",\n                  height: \"16px\",\n                  cursor: \"pointer\",\n                  marginLeft: \"5px\"\n                },\n                onClick: () => openPopup(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                border: row.attr.hoverLabel ? \"1px solid #ccc\" : \"none\",\n                padding: \"2px\",\n                position: 'relative'\n              },\n              onClick: () => handleClickInput(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\"),\n              children: getDisplayText(row.attr.hoverLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row.attr.hoverLabel || \"\",\n              onChange: e => handleLabelChange(e, row.attr.key),\n              style: {\n                display: \"none\"\n              },\n              ref: setInputRef(row.attr.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 25\n          }, this)]\n        }, row.attr.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 9\n  }, this);\n};\n_s(TableVisualization, \"E7CZ7ripNrAfiMyRoKFIjcjhoUg=\");\n_c = TableVisualization;\nexport default TableVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","v4","uuidv4","jsxDEV","_jsxDEV","TableVisualization","graphData","handleLabelChange","openPopup","setGraphData","fetchGraphData","_s","draggedItem","setDraggedItem","sortedRows","setSortedRows","rowSpans","setRowSpans","clusterCounts","setClusterCounts","objectCounts","setObjectCounts","inputRefs","confirmPopup","setConfirmPopup","isOpen","type","handleDragStart","event","key","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","targetKey","targetCategory","sourceKey","getData","prev","updatedNodeDataArray","nodeDataArray","updatedLinkDataArray","linkDataArray","sourceNode","find","node","targetNode","filter","link","to","category","push","from","linkedObject","some","objects","objectLinks","obj","length","parentObject","l","response","post","source","target","sourceType","targetType","data","message","error","console","status","alert","detail","request","sortRows","rows","unlinkedAttributes","row","_row$attr","parentCluster","attr","unlinkedObjects","_row$attr2","linkedRows","sortedLinkedRows","sort","a","b","_a$parentCluster","_b$parentCluster","_a$parentObject","_b$parentObject","clusterA","label","clusterB","objectA","objectB","attributeA","attributeB","compareClusters","localeCompare","compareObjects","calculateCounts","clusters","attributes","forEach","cluster","linkedObjects","linkedAttributes","map","sys","objectRows","allRows","sorted","spans","prevCluster","prevObject","clusterSpan","objectSpan","index","_row$parentCluster","_row$parentObject","currentCluster","currentObject","getDisplayText","text","lines","split","firstTwoLines","slice","join","style","position","display","children","overflow","whiteSpace","maxWidth","marginRight","dangerouslySetInnerHTML","__html","substring","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","bottom","right","width","height","cursor","handleClickInput","currentLabel","currentName","current","focus","setInputRef","createRef","handleAddAttribute","handleAddObject","confirmAddNode","newNodeKey","newNode","hoverLabel","cancelAddNode","borderCollapse","top","left","transform","background","border","padding","zIndex","onClick","marginLeft","fontSize","justifyContent","alignItems","backgroundColor","_rowSpans$index","_row$parentCluster4","_row$parentCluster5","_row$parentCluster9","_row$parentCluster13","_row$parentCluster14","_row$parentCluster16","_rowSpans$index2","_row$parentObject4","_row$parentObject5","_row$parentObject9","_row$parentObject13","_row$parentObject14","_row$parentObject16","rowSpan","onDragOver","e","onDrop","_row$parentCluster2","draggable","onDragStart","_row$parentCluster3","lineHeight","flex","textOverflow","_row$parentCluster6","_row$parentCluster7","_row$parentCluster8","_row$parentCluster10","_row$parentCluster11","_row$parentCluster12","value","onChange","_row$parentCluster15","ref","_row$parentObject2","_row$parentObject3","_row$parentObject6","_row$parentObject7","_row$parentObject8","_row$parentObject10","_row$parentObject11","_row$parentObject12","_row$parentObject15","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst TableVisualization = ({ graphData, handleLabelChange, openPopup, setGraphData, fetchGraphData }) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const [sortedRows, setSortedRows] = useState([]);\r\n    const [rowSpans, setRowSpans] = useState({});\r\n    const [clusterCounts, setClusterCounts] = useState({});\r\n    const [objectCounts, setObjectCounts] = useState({});\r\n    const inputRefs = useRef({});\r\n    const [confirmPopup, setConfirmPopup] = useState({ isOpen: false, type: null });\r\n\r\n\r\n    const handleDragStart = (event, key) => {\r\n        event.dataTransfer.setData(\"text/plain\", key);\r\n        setDraggedItem(key);\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n       const handleDrop = async (event, targetKey, targetCategory) => {\r\n        event.preventDefault();\r\n        const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n\r\n        if (sourceKey && sourceKey !== targetKey) {\r\n            setGraphData((prev) => {\r\n                let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                let updatedLinkDataArray = [...prev.linkDataArray];\r\n\r\n                // Find the source node and target node.\r\n                const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\r\n                if (sourceNode && targetNode) {\r\n                    // Remove all existing links where the source node is the to\r\n                    updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                    if (sourceNode.category === \"attribute\") {\r\n                        // If target is object, create new link\r\n                        if (targetNode.category === \"object\") {\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                        // if target is system, check if object exists then create new links\r\n                        else if (targetNode.category === \"system\") {\r\n                            const linkedObject = updatedNodeDataArray.find(node =>\r\n                                prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey)\r\n                            )\r\n                            if (linkedObject) {\r\n                                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\r\n                            }\r\n\r\n                            const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\r\n                            const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\r\n                            if (objectLinks.length > 0) {\r\n                                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\r\n                                if (parentObject) {\r\n                                    updatedLinkDataArray.push({ from: targetKey, to: parentObject.key })\r\n                                    updatedLinkDataArray.push({ from: parentObject.key, to: sourceKey });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //If source is object\r\n                    else if (sourceNode.category === \"object\") {\r\n                        if (targetNode.category === \"system\") {\r\n                            updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    nodeDataArray: updatedNodeDataArray,\r\n                    linkDataArray: updatedLinkDataArray,\r\n                };\r\n            });\r\n\r\n            const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n            const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n            try {\r\n                const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n                    source: sourceKey,\r\n                    target: targetKey,\r\n                    sourceType: sourceNode.category,\r\n                    targetType: targetNode.category\r\n                });\r\n                if (response.data.message === \"Drag-and-drop operation completed successfully\") {\r\n                    await fetchGraphData()\r\n                }\r\n\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\r\n                    alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.error(\"Error applying drag and drop:\", error.request);\r\n                    alert(\"Error applying drag and drop. No response from server\");\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.error(\"Error applying drag and drop:\", error.message);\r\n                    alert(`Error applying drag and drop: ${error.message}`);\r\n                }\r\n            }\r\n        }\r\n        setDraggedItem(null)\r\n    };\r\n\r\n   // Sort function\r\n  const sortRows = (rows) => {\r\n    const unlinkedAttributes = rows.filter(row => !row.parentCluster && !row.parentObject && row.attr?.category === \"attribute\");\r\n    const unlinkedObjects = rows.filter(row => !row.parentCluster && !row.parentObject && row.attr?.category === \"object\");\r\n        const linkedRows = rows.filter(row => row.parentCluster || row.parentObject);\r\n\r\n        const sortedLinkedRows = [...linkedRows].sort((a, b) => {\r\n            const clusterA = a.parentCluster?.label || \"Unlinked\";\r\n            const clusterB = b.parentCluster?.label || \"Unlinked\";\r\n            const objectA = a.parentObject?.label || \"Unlinked\";\r\n            const objectB = b.parentObject?.label || \"Unlinked\";\r\n            const attributeA = a.attr.label;\r\n            const attributeB = b.attr.label;\r\n\r\n            const compareClusters = clusterA.localeCompare(clusterB);\r\n            if (compareClusters !== 0) return compareClusters;\r\n\r\n            const compareObjects = objectA.localeCompare(objectB);\r\n            if (compareObjects !== 0) return compareObjects;\r\n\r\n            return attributeA.localeCompare(attributeB);\r\n        });\r\n        return [...unlinkedObjects, ...unlinkedAttributes, ...sortedLinkedRows]\r\n    };\r\n\r\n    // Calculate counts for clusters and objects\r\n    const calculateCounts = (graphData) => {\r\n        const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n        const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n        const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n        const clusterCounts = {};\r\n        const objectCounts = {};\r\n\r\n        clusters.forEach(cluster => {\r\n            const linkedObjects = objects.filter(obj =>\r\n                graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key)\r\n            );\r\n            clusterCounts[cluster.key] = linkedObjects.length;\r\n        });\r\n\r\n        objects.forEach(obj => {\r\n            const linkedAttributes = attributes.filter(attr =>\r\n                graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key)\r\n            );\r\n            objectCounts[obj.key] = linkedAttributes.length;\r\n        });\r\n\r\n        return { clusterCounts, objectCounts };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (graphData) {\r\n            const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n            const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n            const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n           const rows = attributes.map((attr) => {\r\n                const parentObject = objects.find((obj) =>\r\n                    graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n                );\r\n\r\n                const parentCluster = parentObject\r\n                    ? clusters.find((sys) =>\r\n                        graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n                    )\r\n                    : null;\r\n\r\n                return { attr, parentObject, parentCluster }\r\n            });\r\n\r\n           const objectRows = objects.map(obj => {\r\n               return { attr: obj, parentObject: null, parentCluster: null }\r\n            })\r\n\r\n           const allRows = [...rows, ...objectRows];\r\n\r\n\r\n            const sorted = sortRows(allRows);\r\n            setSortedRows(sorted);\r\n\r\n            // Calculate row spans for Cluster and Object columns\r\n            const spans = {};\r\n            let prevCluster = null;\r\n            let prevObject = null;\r\n            let clusterSpan = 1;\r\n            let objectSpan = 1;\r\n\r\n            sorted.forEach((row, index) => {\r\n                const currentCluster = row.parentCluster?.label || \"Unlinked\";\r\n                const currentObject = row.parentObject?.label || \"Unlinked\";\r\n\r\n                if (currentCluster === prevCluster) {\r\n                    clusterSpan++;\r\n                    spans[index] = { ...spans[index], clusterSpan: 0 };\r\n                } else {\r\n                    spans[index - clusterSpan] = { ...spans[index - clusterSpan], clusterSpan };\r\n                    clusterSpan = 1;\r\n                }\r\n\r\n                if (currentObject === prevObject) {\r\n                    objectSpan++;\r\n                    spans[index] = { ...spans[index], objectSpan: 0 };\r\n                } else {\r\n                    spans[index - objectSpan] = { ...spans[index - objectSpan], objectSpan };\r\n                    objectSpan = 1;\r\n                }\r\n\r\n                prevCluster = currentCluster;\r\n                prevObject = currentObject;\r\n            });\r\n\r\n            // Handle the last group\r\n            spans[sorted.length - clusterSpan] = { ...spans[sorted.length - clusterSpan], clusterSpan };\r\n            spans[sorted.length - objectSpan] = { ...spans[sorted.length - objectSpan], objectSpan };\r\n\r\n            setRowSpans(spans);\r\n\r\n            // Calculate counts for clusters and objects\r\n            const { clusterCounts, objectCounts } = calculateCounts(graphData);\r\n            setClusterCounts(clusterCounts);\r\n            setObjectCounts(objectCounts);\r\n        }\r\n    }, [graphData]);\r\n\r\n\r\n   const getDisplayText = (text) => {\r\n        if (!text) return \"\";\r\n        const lines = text.split('\\n');\r\n        const firstTwoLines = lines.slice(0, 2).join('\\n');\r\n          return (\r\n            <div style={{ position: 'relative', display: 'inline-block' }}>\r\n                 <div style={{  overflow: 'hidden', whiteSpace: 'pre-line',  maxWidth:\"calc(100% - 20px)\", marginRight: \"2px\" }}\r\n                   dangerouslySetInnerHTML={{__html: firstTwoLines.substring(0, 100) }}\r\n                />\r\n               <img\r\n                 src=\"/zoom-in.png\"\r\n                 alt=\"Click to expand\"\r\n                 style={{ position: 'absolute', bottom: '2px', right: '2px', width: \"16px\", height: \"16px\", cursor: \"pointer\" }}\r\n               />\r\n            </div>\r\n          );\r\n    };\r\n\r\n    const handleClickInput = (key, currentLabel, currentName) => {\r\n        openPopup(key, currentLabel, currentName);\r\n         if (inputRefs.current[key] && inputRefs.current[key].current) {\r\n            inputRefs.current[key].current.focus();\r\n          }\r\n    }\r\n\r\n     const setInputRef = (key) => {\r\n        return inputRefs.current[key] ? inputRefs.current[key] :  (inputRefs.current[key] = React.createRef())\r\n     }\r\n\r\n      const handleAddAttribute = () => {\r\n      setConfirmPopup({ isOpen: true, type: \"attribute\" });\r\n    };\r\n\r\n    const handleAddObject = () => {\r\n         setConfirmPopup({ isOpen: true, type: \"object\" });\r\n    };\r\n\r\n    const confirmAddNode = async () => {\r\n         setConfirmPopup({ isOpen: false, type: null });\r\n         const newNodeKey = uuidv4();\r\n         let newNode = {}\r\n\r\n        if (confirmPopup.type === \"attribute\") {\r\n            newNode = {\r\n              key: newNodeKey,\r\n              category: \"attribute\",\r\n              label: \"New Attribute\",\r\n              hoverLabel: \"New Attribute\",\r\n           }\r\n        } else if (confirmPopup.type === \"object\") {\r\n             newNode = {\r\n              key: newNodeKey,\r\n              category: \"object\",\r\n              label: \"New Object\",\r\n              hoverLabel: \"New Object\",\r\n            }\r\n         }\r\n        try {\r\n            const response = await axios.post(\"http://localhost:8000/graph-data/\", {\r\n                 nodeDataArray: [newNode, ...graphData.nodeDataArray],\r\n                  linkDataArray: [...graphData.linkDataArray]\r\n                });\r\n            if (response.data.message === \"Graph data updated successfully\") {\r\n                 setGraphData((prev) => ({\r\n                    ...prev,\r\n                     nodeDataArray: [newNode, ...prev.nodeDataArray],\r\n                    }));\r\n                  await fetchGraphData()\r\n            }\r\n        } catch (error) {\r\n             if (error.response) {\r\n                    console.error(\"Error adding new Node:\", error.response.status, error.response.data);\r\n                    alert(`Error adding new Node. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\r\n                } else if (error.request) {\r\n                    console.error(\"Error applying drag and drop:\", error.request);\r\n                    alert(\"Error adding new Node. No response from server\");\r\n                } else {\r\n                    console.error(\"Error applying drag and drop:\", error.message);\r\n                    alert(`Error adding new Node: ${error.message}`);\r\n                }\r\n        }\r\n    }\r\n    const cancelAddNode = () => {\r\n          setConfirmPopup({ isOpen: false, type: null });\r\n    }\r\n\r\n\r\n    if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\r\n\r\n    return (\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n               {confirmPopup.isOpen && (\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    background: \"white\",\r\n                    border: \"1px solid black\",\r\n                    padding: \"20px\",\r\n                    zIndex: 1001,\r\n                }}>\r\n                    <p>An unlinked {confirmPopup.type} will be created at the top of the screen. Would you like to proceed?</p>\r\n                    <button onClick={confirmAddNode}>OK</button>\r\n                    <button onClick={cancelAddNode} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                 </div>\r\n            )}\r\n            <thead>\r\n                <tr>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\", fontSize: \"0.9em\" }}>Cluster</th>\r\n                     <th style={{ border: \"1px solid black\", padding: \"5px\", fontSize: \"0.9em\" ,  }}>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                         Object\r\n                           <button onClick={handleAddObject} style={{ padding: \"0\", border: \"none\", backgroundColor: \"transparent\", fontSize: \"1.2em\", cursor: \"pointer\" }}>\r\n                               +\r\n                            </button>\r\n                        </div>\r\n                     </th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\", fontSize: \"0.9em\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                      Attribute\r\n                        <button onClick={handleAddAttribute} style={{ padding: \"0\", border: \"none\", backgroundColor: \"transparent\", fontSize: \"1.2em\", cursor: \"pointer\" }}>\r\n                           +\r\n                         </button>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {sortedRows.map((row, index) => (\r\n                    <tr key={row.attr.key}>\r\n                        {rowSpans[index]?.clusterSpan > 0 ? (\r\n                            <td\r\n                                rowSpan={rowSpans[index].clusterSpan}\r\n                                style={{ border: \"1px solid black\", padding: \"2px\", position: \"relative\", fontSize: \"0.9em\",  }}\r\n                                onDragOver={(e) => handleDragOver(e)}\r\n                                onDrop={(e) => handleDrop(e, row.parentCluster?.key, \"system\")}\r\n                            >\r\n                                <div\r\n                                    draggable\r\n                                    onDragStart={(e) => handleDragStart(e, row.parentCluster?.key)}\r\n                                    style={{ display: \"flex\", alignItems: \"center\" , lineHeight: \"1.2\"}}\r\n                                >\r\n                                    <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{row.parentCluster?.label || \"Unlinked\"} [{clusterCounts[row.parentCluster?.key] || 0}]</span>\r\n                                      <img\r\n                                          src=\"/edit-icon.png\"\r\n                                          alt=\"Edit\"\r\n                                          style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\",marginLeft: \"5px\" }}\r\n                                           onClick={() => openPopup(row.parentCluster?.key, row.parentCluster?.hoverLabel || \"\", row.parentCluster?.label || \"\")}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                  <div\r\n                                        style={{ width: \"50%\", border: row.parentCluster?.hoverLabel ? \"1px solid #ccc\" : \"none\", padding:\"2px\", position: 'relative'  }}\r\n                                          onClick={() => handleClickInput(row.parentCluster?.key, row.parentCluster?.hoverLabel || \"\", row.parentCluster?.label || \"\")}\r\n                                    >\r\n                                          {getDisplayText(row.parentCluster?.hoverLabel)}\r\n                                   </div>\r\n\r\n                                     <input\r\n                                    type=\"text\"\r\n                                    value={row.parentCluster?.hoverLabel || \"\"}\r\n                                    onChange={(e) => handleLabelChange(e, row.parentCluster?.key)}\r\n                                    style={{ display: \"none\" }}\r\n                                   ref={setInputRef(row.parentCluster?.key)}\r\n                                />\r\n\r\n                            </td>\r\n                        ) : null}\r\n                        {rowSpans[index]?.objectSpan > 0 ? (\r\n                            <td\r\n                                rowSpan={rowSpans[index].objectSpan}\r\n                                style={{ border: \"1px solid black\", padding: \"2px\", position: \"relative\" , fontSize: \"0.9em\",  }}\r\n                                onDragOver={(e) => handleDragOver(e)}\r\n                                onDrop={(e) => handleDrop(e, row.parentObject?.key, \"object\")}\r\n                            >\r\n                                <div\r\n                                     draggable\r\n                                     onDragStart={(e) => handleDragStart(e, row.parentObject?.key)}\r\n                                     style={{ display: \"flex\", alignItems: \"center\", lineHeight: \"1.2\" }}\r\n                                >\r\n                                   <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}> {row.parentObject?.label || \"Unlinked\"} ({objectCounts[row.parentObject?.key] || 0})</span>\r\n\r\n                                     <img\r\n                                          src=\"/edit-icon.png\"\r\n                                          alt=\"Edit\"\r\n                                          style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\", marginLeft:\"5px\" }}\r\n                                           onClick={() => openPopup(row.parentObject?.key, row.parentObject?.hoverLabel || \"\", row.parentObject?.label || \"\")}\r\n                                    />\r\n                                </div>\r\n\r\n                                    <div\r\n                                        style={{ width: \"50%\", border: row.parentObject?.hoverLabel ? \"1px solid #ccc\" : \"none\", padding:\"2px\", position: 'relative'  }}\r\n                                         onClick={() => handleClickInput(row.parentObject?.key, row.parentObject?.hoverLabel || \"\", row.parentObject?.label || \"\")}\r\n                                      >\r\n                                             {getDisplayText(row.parentObject?.hoverLabel)}\r\n                                   </div>\r\n\r\n                                   <input\r\n                                    type=\"text\"\r\n                                    value={row.parentObject?.hoverLabel || \"\"}\r\n                                    onChange={(e) => handleLabelChange(e, row.parentObject?.key)}\r\n                                     style={{ display: \"none\"  }}\r\n                                        ref={setInputRef(row.parentObject?.key)}\r\n                                />\r\n\r\n                            </td>\r\n                        ) : null}\r\n                        <td style={{ border: \"1px solid black\", padding: \"2px\", position: \"relative\",  fontSize: \"0.9em\", }}>\r\n                            <div\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, row.attr.key)}\r\n                                 style={{ display: \"flex\", alignItems: \"center\", lineHeight: \"1.2\" }}\r\n                            >\r\n                                   <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}> {row.attr.label}</span>\r\n                                     <img\r\n                                         src=\"/edit-icon.png\"\r\n                                        alt=\"Edit\"\r\n                                        style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\", marginLeft:\"5px\" }}\r\n                                          onClick={() => openPopup(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\")}\r\n                                    />\r\n                            </div>\r\n                                 <div\r\n                                       style={{ width: \"50%\", border: row.attr.hoverLabel ? \"1px solid #ccc\" : \"none\" , padding:\"2px\", position: 'relative' }}\r\n                                          onClick={() => handleClickInput(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\")}\r\n                                        >\r\n                                            {getDisplayText(row.attr.hoverLabel)}\r\n                                   </div>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={row.attr.hoverLabel || \"\"}\r\n                                         onChange={(e) => handleLabelChange(e, row.attr.key)}\r\n                                           style={{ display: \"none\" }}\r\n                                            ref={setInputRef(row.attr.key)}\r\n                                />\r\n\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TableVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}