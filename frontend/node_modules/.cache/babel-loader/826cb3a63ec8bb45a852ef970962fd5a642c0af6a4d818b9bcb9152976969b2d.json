{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport useAppState from './useAppState';\nconst useDragDrop = (graphData, setGraphData, showNotification) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const {\n    showConfirmDialog\n  } = useAppState();\n\n  // Define the drag handlers\n  const handleDragStart = (event, key, category) => {\n    console.log(\"Drag started:\", {\n      key,\n      category\n    });\n    event.dataTransfer.setData(\"text/plain\", key);\n    event.dataTransfer.setData(\"category\", category);\n    setDraggedItem(key);\n    if (event.target.classList) {\n      event.target.classList.add(\"dragging\");\n    }\n  };\n  const handleDragEnd = event => {\n    console.log(\"Drag ended\");\n    if (event.target.classList) {\n      event.target.classList.remove(\"dragging\");\n    }\n    setDraggedItem(null);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    if (event.currentTarget.classList) {\n      event.currentTarget.classList.add(\"drop-target\");\n    }\n  };\n  const handleDragLeave = event => {\n    if (event.currentTarget.classList) {\n      event.currentTarget.classList.remove(\"drop-target\");\n    }\n  };\n\n  // Process drag drop without confirmation dialog to simplify things\n  const processDragDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n    console.log(\"Processing drag and drop:\", {\n      targetKey,\n      targetCategory\n    });\n    if (event.currentTarget.classList) {\n      event.currentTarget.classList.remove(\"drop-target\");\n    }\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    const sourceCategory = event.dataTransfer.getData(\"category\");\n    console.log(\"Drag source:\", {\n      sourceKey,\n      sourceCategory\n    });\n    console.log(\"Drag target:\", {\n      targetKey,\n      targetCategory\n    });\n    if (!sourceKey || sourceKey === targetKey) {\n      console.log(\"Invalid drag operation - same source and target or missing source key\");\n      return;\n    }\n    if (!graphData || !graphData.nodeDataArray || !graphData.linkDataArray) {\n      console.error(\"Invalid graph data structure\");\n      return;\n    }\n    try {\n      const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n      const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n      if (!sourceNode || !targetNode) {\n        console.error(\"Source or target node not found:\", {\n          sourceKey,\n          targetKey\n        });\n        return;\n      }\n      console.log(\"Source node:\", sourceNode);\n      console.log(\"Target node:\", targetNode);\n\n      // Update local state immediately\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n\n        // Existing link removal and creation logic\n        updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n        if (sourceNode.category === \"attribute\" && targetNode.category === \"object\") {\n          updatedLinkDataArray.push({\n            from: targetKey,\n            to: sourceKey\n          });\n        } else if (sourceNode.category === \"object\" && targetNode.category === \"system\") {\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          updatedLinkDataArray.push({\n            from: targetKey,\n            to: sourceKey\n          });\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n\n      // Send drag-drop changes to backend\n      console.log(\"Sending drag-drop changes to backend\");\n      try {\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        console.log(\"Backend response:\", response.data);\n        if (response.data && response.data.message === \"Drag-and-drop operation completed successfully\") {\n          if (showNotification) {\n            showNotification(\"Item moved successfully\", \"success\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error applying drag and drop:\", error);\n        let errorMessage = \"Error moving item.\";\n        if (error.response && error.response.data) {\n          errorMessage += ` ${error.response.data.detail || ''}`;\n        }\n        if (showNotification) {\n          showNotification(errorMessage, \"error\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error processing drag and drop:\", error);\n      if (showNotification) {\n        showNotification(\"Error processing drag and drop operation\", \"error\");\n      }\n    }\n  };\n  return {\n    draggedItem,\n    handleDragStart,\n    handleDragEnd,\n    handleDragOver,\n    handleDragLeave,\n    processDragDrop\n  };\n};\n_s(useDragDrop, \"dwb+QrkKIYB9ZtOmF1WppS3Z8oU=\", false, function () {\n  return [useAppState];\n});\nexport default useDragDrop;","map":{"version":3,"names":["useState","axios","useAppState","useDragDrop","graphData","setGraphData","showNotification","_s","draggedItem","setDraggedItem","showConfirmDialog","handleDragStart","event","key","category","console","log","dataTransfer","setData","target","classList","add","handleDragEnd","remove","handleDragOver","preventDefault","currentTarget","handleDragLeave","processDragDrop","targetKey","targetCategory","sourceKey","getData","sourceCategory","nodeDataArray","linkDataArray","error","sourceNode","find","node","targetNode","prev","updatedNodeDataArray","updatedLinkDataArray","filter","link","to","push","from","response","post","source","sourceType","targetType","data","message","errorMessage","detail"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-dev/frontend/src/hooks/useDragDrop.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport useAppState from './useAppState';\r\n\r\nconst useDragDrop = (graphData, setGraphData, showNotification) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const { showConfirmDialog } = useAppState();\r\n\r\n    // Define the drag handlers\r\n    const handleDragStart = (event, key, category) => {\r\n        console.log(\"Drag started:\", { key, category });\r\n        event.dataTransfer.setData(\"text/plain\", key);\r\n        event.dataTransfer.setData(\"category\", category);\r\n        setDraggedItem(key);\r\n        \r\n        if (event.target.classList) {\r\n            event.target.classList.add(\"dragging\");\r\n        }\r\n    };\r\n\r\n    const handleDragEnd = (event) => {\r\n        console.log(\"Drag ended\");\r\n        if (event.target.classList) {\r\n            event.target.classList.remove(\"dragging\");\r\n        }\r\n        setDraggedItem(null);\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n        if (event.currentTarget.classList) {\r\n            event.currentTarget.classList.add(\"drop-target\");\r\n        }\r\n    };\r\n\r\n    const handleDragLeave = (event) => {\r\n        if (event.currentTarget.classList) {\r\n            event.currentTarget.classList.remove(\"drop-target\");\r\n        }\r\n    };\r\n    \r\n    // Process drag drop without confirmation dialog to simplify things\r\n    const processDragDrop = async (event, targetKey, targetCategory) => {\r\n        event.preventDefault();\r\n        console.log(\"Processing drag and drop:\", { targetKey, targetCategory });\r\n        \r\n        if (event.currentTarget.classList) {\r\n            event.currentTarget.classList.remove(\"drop-target\");\r\n        }\r\n        \r\n        const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n        const sourceCategory = event.dataTransfer.getData(\"category\");\r\n\r\n        console.log(\"Drag source:\", { sourceKey, sourceCategory });\r\n        console.log(\"Drag target:\", { targetKey, targetCategory });\r\n\r\n        if (!sourceKey || sourceKey === targetKey) {\r\n            console.log(\"Invalid drag operation - same source and target or missing source key\");\r\n            return;\r\n        }\r\n\r\n        if (!graphData || !graphData.nodeDataArray || !graphData.linkDataArray) {\r\n            console.error(\"Invalid graph data structure\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n            const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n            \r\n            if (!sourceNode || !targetNode) {\r\n                console.error(\"Source or target node not found:\", { sourceKey, targetKey });\r\n                return;\r\n            }\r\n\r\n            console.log(\"Source node:\", sourceNode);\r\n            console.log(\"Target node:\", targetNode);\r\n\r\n            // Update local state immediately\r\n            setGraphData((prev) => {\r\n                let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                let updatedLinkDataArray = [...prev.linkDataArray];\r\n                \r\n                // Existing link removal and creation logic\r\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                if (sourceNode.category === \"attribute\" && targetNode.category === \"object\") {\r\n                    updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                }\r\n                else if (sourceNode.category === \"object\" && targetNode.category === \"system\") {\r\n                    updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                    updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    nodeDataArray: updatedNodeDataArray,\r\n                    linkDataArray: updatedLinkDataArray,\r\n                };\r\n            });\r\n\r\n            // Send drag-drop changes to backend\r\n            console.log(\"Sending drag-drop changes to backend\");\r\n            try {\r\n                const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n                    source: sourceKey,\r\n                    target: targetKey,\r\n                    sourceType: sourceNode.category,\r\n                    targetType: targetNode.category\r\n                });\r\n                \r\n                console.log(\"Backend response:\", response.data);\r\n                \r\n                if (response.data && response.data.message === \"Drag-and-drop operation completed successfully\") {\r\n                    if (showNotification) {\r\n                        showNotification(\"Item moved successfully\", \"success\");\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error applying drag and drop:\", error);\r\n                let errorMessage = \"Error moving item.\";\r\n                if (error.response && error.response.data) {\r\n                    errorMessage += ` ${error.response.data.detail || ''}`;\r\n                }\r\n                if (showNotification) {\r\n                    showNotification(errorMessage, \"error\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error processing drag and drop:\", error);\r\n            if (showNotification) {\r\n                showNotification(\"Error processing drag and drop operation\", \"error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        draggedItem,\r\n        handleDragStart,\r\n        handleDragEnd,\r\n        handleDragOver,\r\n        handleDragLeave,\r\n        processDragDrop\r\n    };\r\n};\r\n\r\nexport default useDragDrop;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,YAAY,EAAEC,gBAAgB,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAEU;EAAkB,CAAC,GAAGR,WAAW,CAAC,CAAC;;EAE3C;EACA,MAAMS,eAAe,GAAGA,CAACC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,KAAK;IAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;MAAEH,GAAG;MAAEC;IAAS,CAAC,CAAC;IAC/CF,KAAK,CAACK,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,GAAG,CAAC;IAC7CD,KAAK,CAACK,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IAChDL,cAAc,CAACI,GAAG,CAAC;IAEnB,IAAID,KAAK,CAACO,MAAM,CAACC,SAAS,EAAE;MACxBR,KAAK,CAACO,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMC,aAAa,GAAIV,KAAK,IAAK;IAC7BG,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,IAAIJ,KAAK,CAACO,MAAM,CAACC,SAAS,EAAE;MACxBR,KAAK,CAACO,MAAM,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;IAC7C;IACAd,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMe,cAAc,GAAIZ,KAAK,IAAK;IAC9BA,KAAK,CAACa,cAAc,CAAC,CAAC;IACtB,IAAIb,KAAK,CAACc,aAAa,CAACN,SAAS,EAAE;MAC/BR,KAAK,CAACc,aAAa,CAACN,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;IACpD;EACJ,CAAC;EAED,MAAMM,eAAe,GAAIf,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACc,aAAa,CAACN,SAAS,EAAE;MAC/BR,KAAK,CAACc,aAAa,CAACN,SAAS,CAACG,MAAM,CAAC,aAAa,CAAC;IACvD;EACJ,CAAC;;EAED;EACA,MAAMK,eAAe,GAAG,MAAAA,CAAOhB,KAAK,EAAEiB,SAAS,EAAEC,cAAc,KAAK;IAChElB,KAAK,CAACa,cAAc,CAAC,CAAC;IACtBV,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;MAAEa,SAAS;MAAEC;IAAe,CAAC,CAAC;IAEvE,IAAIlB,KAAK,CAACc,aAAa,CAACN,SAAS,EAAE;MAC/BR,KAAK,CAACc,aAAa,CAACN,SAAS,CAACG,MAAM,CAAC,aAAa,CAAC;IACvD;IAEA,MAAMQ,SAAS,GAAGnB,KAAK,CAACK,YAAY,CAACe,OAAO,CAAC,YAAY,CAAC;IAC1D,MAAMC,cAAc,GAAGrB,KAAK,CAACK,YAAY,CAACe,OAAO,CAAC,UAAU,CAAC;IAE7DjB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEe,SAAS;MAAEE;IAAe,CAAC,CAAC;IAC1DlB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEa,SAAS;MAAEC;IAAe,CAAC,CAAC;IAE1D,IAAI,CAACC,SAAS,IAAIA,SAAS,KAAKF,SAAS,EAAE;MACvCd,OAAO,CAACC,GAAG,CAAC,uEAAuE,CAAC;MACpF;IACJ;IAEA,IAAI,CAACZ,SAAS,IAAI,CAACA,SAAS,CAAC8B,aAAa,IAAI,CAAC9B,SAAS,CAAC+B,aAAa,EAAE;MACpEpB,OAAO,CAACqB,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACJ;IAEA,IAAI;MACA,MAAMC,UAAU,GAAGjC,SAAS,CAAC8B,aAAa,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC1B,GAAG,KAAKkB,SAAS,CAAC;MAC/E,MAAMS,UAAU,GAAGpC,SAAS,CAAC8B,aAAa,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC1B,GAAG,KAAKgB,SAAS,CAAC;MAE/E,IAAI,CAACQ,UAAU,IAAI,CAACG,UAAU,EAAE;QAC5BzB,OAAO,CAACqB,KAAK,CAAC,kCAAkC,EAAE;UAAEL,SAAS;UAAEF;QAAU,CAAC,CAAC;QAC3E;MACJ;MAEAd,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEqB,UAAU,CAAC;MACvCtB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEwB,UAAU,CAAC;;MAEvC;MACAnC,YAAY,CAAEoC,IAAI,IAAK;QACnB,IAAIC,oBAAoB,GAAG,CAAC,GAAGD,IAAI,CAACP,aAAa,CAAC;QAClD,IAAIS,oBAAoB,GAAG,CAAC,GAAGF,IAAI,CAACN,aAAa,CAAC;;QAElD;QACAQ,oBAAoB,GAAGA,oBAAoB,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKf,SAAS,CAAC;QAEjF,IAAIM,UAAU,CAACvB,QAAQ,KAAK,WAAW,IAAI0B,UAAU,CAAC1B,QAAQ,KAAK,QAAQ,EAAE;UACzE6B,oBAAoB,CAACI,IAAI,CAAC;YAAEC,IAAI,EAAEnB,SAAS;YAAEiB,EAAE,EAAEf;UAAU,CAAC,CAAC;QACjE,CAAC,MACI,IAAIM,UAAU,CAACvB,QAAQ,KAAK,QAAQ,IAAI0B,UAAU,CAAC1B,QAAQ,KAAK,QAAQ,EAAE;UAC3E6B,oBAAoB,GAAGA,oBAAoB,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKf,SAAS,CAAC;UACjFY,oBAAoB,CAACI,IAAI,CAAC;YAAEC,IAAI,EAAEnB,SAAS;YAAEiB,EAAE,EAAEf;UAAU,CAAC,CAAC;QACjE;QAEA,OAAO;UACH,GAAGU,IAAI;UACPP,aAAa,EAAEQ,oBAAoB;UACnCP,aAAa,EAAEQ;QACnB,CAAC;MACL,CAAC,CAAC;;MAEF;MACA5B,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnD,IAAI;QACA,MAAMiC,QAAQ,GAAG,MAAMhD,KAAK,CAACiD,IAAI,CAAC,wCAAwC,EAAE;UACxEC,MAAM,EAAEpB,SAAS;UACjBZ,MAAM,EAAEU,SAAS;UACjBuB,UAAU,EAAEf,UAAU,CAACvB,QAAQ;UAC/BuC,UAAU,EAAEb,UAAU,CAAC1B;QAC3B,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEiC,QAAQ,CAACK,IAAI,CAAC;QAE/C,IAAIL,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACC,OAAO,KAAK,gDAAgD,EAAE;UAC7F,IAAIjD,gBAAgB,EAAE;YAClBA,gBAAgB,CAAC,yBAAyB,EAAE,SAAS,CAAC;UAC1D;QACJ;MACJ,CAAC,CAAC,OAAO8B,KAAK,EAAE;QACZrB,OAAO,CAACqB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAIoB,YAAY,GAAG,oBAAoB;QACvC,IAAIpB,KAAK,CAACa,QAAQ,IAAIb,KAAK,CAACa,QAAQ,CAACK,IAAI,EAAE;UACvCE,YAAY,IAAI,IAAIpB,KAAK,CAACa,QAAQ,CAACK,IAAI,CAACG,MAAM,IAAI,EAAE,EAAE;QAC1D;QACA,IAAInD,gBAAgB,EAAE;UAClBA,gBAAgB,CAACkD,YAAY,EAAE,OAAO,CAAC;QAC3C;MACJ;IACJ,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACZrB,OAAO,CAACqB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,IAAI9B,gBAAgB,EAAE;QAClBA,gBAAgB,CAAC,0CAA0C,EAAE,OAAO,CAAC;MACzE;IACJ;EACJ,CAAC;EAED,OAAO;IACHE,WAAW;IACXG,eAAe;IACfW,aAAa;IACbE,cAAc;IACdG,eAAe;IACfC;EACJ,CAAC;AACL,CAAC;AAACrB,EAAA,CA5IIJ,WAAW;EAAA,QAEiBD,WAAW;AAAA;AA4I7C,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}