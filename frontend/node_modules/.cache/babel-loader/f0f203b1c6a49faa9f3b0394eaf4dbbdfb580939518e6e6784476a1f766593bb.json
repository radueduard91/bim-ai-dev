{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\DiagramPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TableGraphVisualization from \"./TableGraphVisualization\";\nimport { buttonStyle } from \"../utils/styles\";\n\n/**\r\n * DiagramPopup Component\r\n * Renders a popup window with the diagram visualization\r\n * \r\n * This component includes:\r\n * - Draggable header for moving the popup\r\n * - Resizable corners for adjusting dimensions\r\n * - Minimize/maximize functionality\r\n * - Responsive design with saved dimensions\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiagramPopup = ({\n  graphData,\n  dimensions,\n  setDimensions,\n  isDiagramMinimized,\n  toggleMinimizeDiagram,\n  toggleDiagram,\n  hideControlButtons = false\n}) => {\n  _s();\n  // References for controlling behavior\n  const dragRef = useRef(null);\n  const popupRef = useRef(null);\n  const [position, setPosition] = useState({\n    x: window.innerWidth - 620,\n    y: 100\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeDirection, setResizeDirection] = useState(null);\n  const [initialSize, setInitialSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [initialPosition, setInitialPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [initialMousePosition, setInitialMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Save dimensions to localStorage for persistence\n  useEffect(() => {\n    const savedDimensions = localStorage.getItem(\"diagramDimensions\");\n    const savedPosition = localStorage.getItem(\"diagramPosition\");\n    if (savedDimensions) {\n      setDimensions(JSON.parse(savedDimensions));\n    }\n    if (savedPosition) {\n      setPosition(JSON.parse(savedPosition));\n    }\n\n    // Check if position is valid (within window bounds)\n    if (position.x < 0 || position.x > window.innerWidth - 400 || position.y < 0 || position.y > window.innerHeight - 300) {\n      setPosition({\n        x: window.innerWidth - 620,\n        y: 100\n      });\n    }\n  }, []);\n\n  // Save dimensions when they change\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) {\n      localStorage.setItem(\"diagramDimensions\", JSON.stringify(dimensions));\n    }\n  }, [dimensions]);\n\n  // Save position when it changes\n  useEffect(() => {\n    localStorage.setItem(\"diagramPosition\", JSON.stringify(position));\n  }, [position]);\n\n  // Resize handler functions\n  const handleResize = (direction, value) => {\n    if (direction === \"width\") {\n      setDimensions(prev => ({\n        ...prev,\n        width: `${value}px`\n      }));\n    } else if (direction === \"height\") {\n      setDimensions(prev => ({\n        ...prev,\n        height: `${value}px`\n      }));\n    }\n  };\n\n  // Mouse events for dragging the popup\n  const handleMouseDown = e => {\n    if (e.button !== 0) return; // Only handle left clicks\n\n    setIsDragging(true);\n    setDragOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!isDragging && !isResizing) return;\n    if (isDragging) {\n      // When dragging the entire popup\n      const newX = Math.max(0, Math.min(window.innerWidth - parseFloat(dimensions.width), e.clientX - dragOffset.x));\n      const newY = Math.max(0, Math.min(window.innerHeight - 50, e.clientY - dragOffset.y));\n      setPosition({\n        x: newX,\n        y: newY\n      });\n    }\n    if (isResizing) {\n      // When resizing the popup\n      const dx = e.clientX - initialMousePosition.x;\n      const dy = e.clientY - initialMousePosition.y;\n      let newWidth, newHeight, newX, newY;\n      switch (resizeDirection) {\n        case \"se\":\n          newWidth = Math.max(400, initialSize.width + dx);\n          newHeight = Math.max(300, initialSize.height + dy);\n          handleResize(\"width\", newWidth);\n          handleResize(\"height\", newHeight);\n          break;\n        case \"sw\":\n          newWidth = Math.max(400, initialSize.width - dx);\n          newHeight = Math.max(300, initialSize.height + dy);\n          newX = initialPosition.x + initialSize.width - newWidth;\n          handleResize(\"width\", newWidth);\n          handleResize(\"height\", newHeight);\n          setPosition(prev => ({\n            ...prev,\n            x: newX\n          }));\n          break;\n        case \"ne\":\n          newWidth = Math.max(400, initialSize.width + dx);\n          newHeight = Math.max(300, initialSize.height - dy);\n          newY = initialPosition.y + initialSize.height - newHeight;\n          handleResize(\"width\", newWidth);\n          handleResize(\"height\", newHeight);\n          setPosition(prev => ({\n            ...prev,\n            y: newY\n          }));\n          break;\n        case \"nw\":\n          newWidth = Math.max(400, initialSize.width - dx);\n          newHeight = Math.max(300, initialSize.height - dy);\n          newX = initialPosition.x + initialSize.width - newWidth;\n          newY = initialPosition.y + initialSize.height - newHeight;\n          handleResize(\"width\", newWidth);\n          handleResize(\"height\", newHeight);\n          setPosition({\n            x: newX,\n            y: newY\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setIsResizing(false);\n  };\n\n  // Add/remove event listeners for mouse movement\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [isDragging, isResizing, dragOffset, resizeDirection, initialSize, initialPosition, initialMousePosition]);\n\n  // Start resizing from a corner\n  const startResize = (e, direction) => {\n    e.stopPropagation();\n    setIsResizing(true);\n    setResizeDirection(direction);\n    setInitialSize({\n      width: parseFloat(dimensions.width),\n      height: parseFloat(dimensions.height)\n    });\n    setInitialPosition({\n      ...position\n    });\n    setInitialMousePosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  // Calculate width and height as numbers for internal use\n  const width = isDiagramMinimized ? 280 : parseFloat(dimensions.width);\n  const height = isDiagramMinimized ? 40 : parseFloat(dimensions.height);\n\n  // Get styles based on state\n  const getStyles = () => {\n    const baseStyles = {\n      position: \"fixed\",\n      width: `${width}px`,\n      height: `${height}px`,\n      backgroundColor: \"white\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n      overflow: \"hidden\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      transition: isDragging || isResizing ? \"none\" : \"height 0.3s ease, width 0.3s ease\",\n      zIndex: 100\n    };\n\n    // Set position based on state\n    if (isDiagramMinimized) {\n      return {\n        ...baseStyles,\n        bottom: \"20px\",\n        right: \"20px\",\n        top: \"auto\",\n        left: \"auto\"\n      };\n    } else {\n      return {\n        ...baseStyles,\n        left: `${position.x}px`,\n        top: `${position.y}px`\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: popupRef,\n    style: getStyles(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dragRef,\n      style: {\n        padding: \"8px 12px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        borderBottom: isDiagramMinimized ? \"none\" : \"1px solid #e2e8f0\",\n        backgroundColor: \"#1e40af\",\n        color: \"white\",\n        cursor: isDiagramMinimized ? \"default\" : \"move\"\n      },\n      onMouseDown: !isDiagramMinimized ? handleMouseDown : undefined,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"8px\",\n          fontWeight: \"500\",\n          fontSize: \"14px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"2\",\n            y1: \"12\",\n            x2: \"22\",\n            y2: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), \"Relationship Diagram\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"4px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMinimizeDiagram,\n          style: {\n            ...buttonStyle(false),\n            padding: \"4px\",\n            minWidth: \"24px\",\n            height: \"24px\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid rgba(255, 255, 255, 0.2)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"14\",\n            height: \"14\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: isDiagramMinimized ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"6 15 12 9 18 15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"6 9 12 15 18 9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDiagram,\n          style: {\n            ...buttonStyle(false),\n            padding: \"4px\",\n            minWidth: \"24px\",\n            height: \"24px\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid rgba(255, 255, 255, 0.2)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"14\",\n            height: \"14\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"18\",\n              y1: \"6\",\n              x2: \"6\",\n              y2: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"6\",\n              y1: \"6\",\n              x2: \"18\",\n              y2: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), !isDiagramMinimized && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: \"1\",\n        overflow: \"auto\",\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TableGraphVisualization, {\n        graphData: graphData,\n        dimensions: {\n          width: width,\n          height: height - 50 // Adjust for header\n        },\n        hideControlButtons: hideControlButtons // Pass the prop to hide control buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }, this), !isDiagramMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: \"0\",\n          right: \"0\",\n          width: \"20px\",\n          height: \"20px\",\n          cursor: \"nwse-resize\",\n          background: \"transparent\",\n          zIndex: 2\n        },\n        onMouseDown: e => startResize(e, \"se\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: \"0\",\n          left: \"0\",\n          width: \"20px\",\n          height: \"20px\",\n          cursor: \"nesw-resize\",\n          background: \"transparent\",\n          zIndex: 2\n        },\n        onMouseDown: e => startResize(e, \"sw\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          width: \"20px\",\n          height: \"20px\",\n          cursor: \"nesw-resize\",\n          background: \"transparent\",\n          zIndex: 2\n        },\n        onMouseDown: e => startResize(e, \"ne\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\",\n          width: \"20px\",\n          height: \"20px\",\n          cursor: \"nwse-resize\",\n          background: \"transparent\",\n          zIndex: 2\n        },\n        onMouseDown: e => startResize(e, \"nw\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), isResizing && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        color: \"white\",\n        padding: \"2px 6px\",\n        borderRadius: \"4px\",\n        fontSize: \"10px\",\n        pointerEvents: \"none\"\n      },\n      children: [Math.round(parseFloat(dimensions.width)), \" \\xD7 \", Math.round(parseFloat(dimensions.height))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n_s(DiagramPopup, \"7H4dnzP8l48p0cAfVQp87ZwgCO0=\");\n_c = DiagramPopup;\nexport default DiagramPopup;\nvar _c;\n$RefreshReg$(_c, \"DiagramPopup\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TableGraphVisualization","buttonStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","DiagramPopup","graphData","dimensions","setDimensions","isDiagramMinimized","toggleMinimizeDiagram","toggleDiagram","hideControlButtons","_s","dragRef","popupRef","position","setPosition","x","window","innerWidth","y","isDragging","setIsDragging","dragOffset","setDragOffset","isResizing","setIsResizing","resizeDirection","setResizeDirection","initialSize","setInitialSize","width","height","initialPosition","setInitialPosition","initialMousePosition","setInitialMousePosition","savedDimensions","localStorage","getItem","savedPosition","JSON","parse","innerHeight","setItem","stringify","handleResize","direction","value","prev","handleMouseDown","e","button","clientX","clientY","preventDefault","handleMouseMove","newX","Math","max","min","parseFloat","newY","dx","dy","newWidth","newHeight","handleMouseUp","document","addEventListener","removeEventListener","startResize","stopPropagation","getStyles","baseStyles","backgroundColor","borderRadius","boxShadow","overflow","display","flexDirection","transition","zIndex","bottom","right","top","left","ref","style","children","padding","justifyContent","alignItems","borderBottom","color","cursor","onMouseDown","undefined","gap","fontWeight","fontSize","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","d","onClick","minWidth","border","points","flex","background","pointerEvents","round","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/DiagramPopup.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport TableGraphVisualization from \"./TableGraphVisualization\";\r\nimport { buttonStyle } from \"../utils/styles\";\r\n\r\n/**\r\n * DiagramPopup Component\r\n * Renders a popup window with the diagram visualization\r\n * \r\n * This component includes:\r\n * - Draggable header for moving the popup\r\n * - Resizable corners for adjusting dimensions\r\n * - Minimize/maximize functionality\r\n * - Responsive design with saved dimensions\r\n */\r\nconst DiagramPopup = ({\r\n    graphData,\r\n    dimensions,\r\n    setDimensions,\r\n    isDiagramMinimized,\r\n    toggleMinimizeDiagram,\r\n    toggleDiagram,\r\n    hideControlButtons = false\r\n}) => {\r\n    // References for controlling behavior\r\n    const dragRef = useRef(null);\r\n    const popupRef = useRef(null);\r\n    const [position, setPosition] = useState({ x: window.innerWidth - 620, y: 100 });\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n    const [isResizing, setIsResizing] = useState(false);\r\n    const [resizeDirection, setResizeDirection] = useState(null);\r\n    const [initialSize, setInitialSize] = useState({ width: 0, height: 0 });\r\n    const [initialPosition, setInitialPosition] = useState({ x: 0, y: 0 });\r\n    const [initialMousePosition, setInitialMousePosition] = useState({ x: 0, y: 0 });\r\n\r\n    // Save dimensions to localStorage for persistence\r\n    useEffect(() => {\r\n        const savedDimensions = localStorage.getItem(\"diagramDimensions\");\r\n        const savedPosition = localStorage.getItem(\"diagramPosition\");\r\n        \r\n        if (savedDimensions) {\r\n            setDimensions(JSON.parse(savedDimensions));\r\n        }\r\n        \r\n        if (savedPosition) {\r\n            setPosition(JSON.parse(savedPosition));\r\n        }\r\n        \r\n        // Check if position is valid (within window bounds)\r\n        if (position.x < 0 || position.x > window.innerWidth - 400 || \r\n            position.y < 0 || position.y > window.innerHeight - 300) {\r\n            setPosition({ x: window.innerWidth - 620, y: 100 });\r\n        }\r\n    }, []);\r\n\r\n    // Save dimensions when they change\r\n    useEffect(() => {\r\n        if (dimensions.width && dimensions.height) {\r\n            localStorage.setItem(\"diagramDimensions\", JSON.stringify(dimensions));\r\n        }\r\n    }, [dimensions]);\r\n\r\n    // Save position when it changes\r\n    useEffect(() => {\r\n        localStorage.setItem(\"diagramPosition\", JSON.stringify(position));\r\n    }, [position]);\r\n\r\n    // Resize handler functions\r\n    const handleResize = (direction, value) => {\r\n        if (direction === \"width\") {\r\n            setDimensions(prev => ({ ...prev, width: `${value}px` }));\r\n        } else if (direction === \"height\") {\r\n            setDimensions(prev => ({ ...prev, height: `${value}px` }));\r\n        }\r\n    };\r\n\r\n    // Mouse events for dragging the popup\r\n    const handleMouseDown = (e) => {\r\n        if (e.button !== 0) return; // Only handle left clicks\r\n        \r\n        setIsDragging(true);\r\n        setDragOffset({\r\n            x: e.clientX - position.x,\r\n            y: e.clientY - position.y\r\n        });\r\n        \r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!isDragging && !isResizing) return;\r\n        \r\n        if (isDragging) {\r\n            // When dragging the entire popup\r\n            const newX = Math.max(0, Math.min(window.innerWidth - parseFloat(dimensions.width), e.clientX - dragOffset.x));\r\n            const newY = Math.max(0, Math.min(window.innerHeight - 50, e.clientY - dragOffset.y));\r\n            \r\n            setPosition({ x: newX, y: newY });\r\n        }\r\n        \r\n        if (isResizing) {\r\n            // When resizing the popup\r\n            const dx = e.clientX - initialMousePosition.x;\r\n            const dy = e.clientY - initialMousePosition.y;\r\n            \r\n            let newWidth, newHeight, newX, newY;\r\n            \r\n            switch (resizeDirection) {\r\n                case \"se\":\r\n                    newWidth = Math.max(400, initialSize.width + dx);\r\n                    newHeight = Math.max(300, initialSize.height + dy);\r\n                    handleResize(\"width\", newWidth);\r\n                    handleResize(\"height\", newHeight);\r\n                    break;\r\n                case \"sw\":\r\n                    newWidth = Math.max(400, initialSize.width - dx);\r\n                    newHeight = Math.max(300, initialSize.height + dy);\r\n                    newX = initialPosition.x + initialSize.width - newWidth;\r\n                    handleResize(\"width\", newWidth);\r\n                    handleResize(\"height\", newHeight);\r\n                    setPosition(prev => ({ ...prev, x: newX }));\r\n                    break;\r\n                case \"ne\":\r\n                    newWidth = Math.max(400, initialSize.width + dx);\r\n                    newHeight = Math.max(300, initialSize.height - dy);\r\n                    newY = initialPosition.y + initialSize.height - newHeight;\r\n                    handleResize(\"width\", newWidth);\r\n                    handleResize(\"height\", newHeight);\r\n                    setPosition(prev => ({ ...prev, y: newY }));\r\n                    break;\r\n                case \"nw\":\r\n                    newWidth = Math.max(400, initialSize.width - dx);\r\n                    newHeight = Math.max(300, initialSize.height - dy);\r\n                    newX = initialPosition.x + initialSize.width - newWidth;\r\n                    newY = initialPosition.y + initialSize.height - newHeight;\r\n                    handleResize(\"width\", newWidth);\r\n                    handleResize(\"height\", newHeight);\r\n                    setPosition({ x: newX, y: newY });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n        setIsDragging(false);\r\n        setIsResizing(false);\r\n    };\r\n\r\n    // Add/remove event listeners for mouse movement\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", handleMouseMove);\r\n        document.addEventListener(\"mouseup\", handleMouseUp);\r\n        \r\n        return () => {\r\n            document.removeEventListener(\"mousemove\", handleMouseMove);\r\n            document.removeEventListener(\"mouseup\", handleMouseUp);\r\n        };\r\n    }, [isDragging, isResizing, dragOffset, resizeDirection, initialSize, initialPosition, initialMousePosition]);\r\n\r\n    // Start resizing from a corner\r\n    const startResize = (e, direction) => {\r\n        e.stopPropagation();\r\n        setIsResizing(true);\r\n        setResizeDirection(direction);\r\n        \r\n        setInitialSize({\r\n            width: parseFloat(dimensions.width),\r\n            height: parseFloat(dimensions.height)\r\n        });\r\n        \r\n        setInitialPosition({ ...position });\r\n        setInitialMousePosition({ x: e.clientX, y: e.clientY });\r\n    };\r\n\r\n    // Calculate width and height as numbers for internal use\r\n    const width = isDiagramMinimized ? 280 : parseFloat(dimensions.width);\r\n    const height = isDiagramMinimized ? 40 : parseFloat(dimensions.height);\r\n\r\n    // Get styles based on state\r\n    const getStyles = () => {\r\n        const baseStyles = {\r\n            position: \"fixed\",\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"8px\",\r\n            boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n            overflow: \"hidden\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            transition: isDragging || isResizing ? \"none\" : \"height 0.3s ease, width 0.3s ease\",\r\n            zIndex: 100,\r\n        };\r\n\r\n        // Set position based on state\r\n        if (isDiagramMinimized) {\r\n            return {\r\n                ...baseStyles,\r\n                bottom: \"20px\",\r\n                right: \"20px\",\r\n                top: \"auto\",\r\n                left: \"auto\"\r\n            };\r\n        } else {\r\n            return {\r\n                ...baseStyles,\r\n                left: `${position.x}px`,\r\n                top: `${position.y}px`,\r\n            };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={popupRef}\r\n            style={getStyles()}\r\n        >\r\n            {/* Diagram Header - Draggable */}\r\n            <div\r\n                ref={dragRef}\r\n                style={{\r\n                    padding: \"8px 12px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    borderBottom: isDiagramMinimized ? \"none\" : \"1px solid #e2e8f0\",\r\n                    backgroundColor: \"#1e40af\",\r\n                    color: \"white\",\r\n                    cursor: isDiagramMinimized ? \"default\" : \"move\"\r\n                }}\r\n                onMouseDown={!isDiagramMinimized ? handleMouseDown : undefined}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        gap: \"8px\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"14px\",\r\n                    }}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                    >\r\n                        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                        <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n                        <path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>\r\n                    </svg>\r\n                    Relationship Diagram\r\n                </div>\r\n                <div style={{ display: \"flex\", gap: \"4px\" }}>\r\n                    {/* Minimize/Maximize Button */}\r\n                    <button\r\n                        onClick={toggleMinimizeDiagram}\r\n                        style={{\r\n                            ...buttonStyle(false),\r\n                            padding: \"4px\",\r\n                            minWidth: \"24px\",\r\n                            height: \"24px\",\r\n                            backgroundColor: \"transparent\",\r\n                            border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n                        }}\r\n                    >\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        >\r\n                            {isDiagramMinimized ? (\r\n                                <>\r\n                                    <polyline points=\"6 15 12 9 18 15\"></polyline>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <polyline points=\"6 9 12 15 18 9\"></polyline>\r\n                                </>\r\n                            )}\r\n                        </svg>\r\n                    </button>\r\n                    {/* Close Button */}\r\n                    <button\r\n                        onClick={toggleDiagram}\r\n                        style={{\r\n                            ...buttonStyle(false),\r\n                            padding: \"4px\",\r\n                            minWidth: \"24px\",\r\n                            height: \"24px\",\r\n                            backgroundColor: \"transparent\",\r\n                            border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n                        }}\r\n                    >\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        >\r\n                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Diagram Content */}\r\n            {!isDiagramMinimized && (\r\n                <div\r\n                    style={{\r\n                        flex: \"1\",\r\n                        overflow: \"auto\",\r\n                        position: \"relative\",\r\n                    }}\r\n                >\r\n                    <TableGraphVisualization\r\n                        graphData={graphData}\r\n                        dimensions={{\r\n                            width: width,\r\n                            height: height - 50, // Adjust for header\r\n                        }}\r\n                        hideControlButtons={hideControlButtons} // Pass the prop to hide control buttons\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            {/* Resize Handles - only show when not minimized */}\r\n            {!isDiagramMinimized && (\r\n                <>\r\n                    {/* SE corner */}\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            bottom: \"0\",\r\n                            right: \"0\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            cursor: \"nwse-resize\",\r\n                            background: \"transparent\",\r\n                            zIndex: 2,\r\n                        }}\r\n                        onMouseDown={(e) => startResize(e, \"se\")}\r\n                    />\r\n                    {/* SW corner */}\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            bottom: \"0\",\r\n                            left: \"0\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            cursor: \"nesw-resize\",\r\n                            background: \"transparent\",\r\n                            zIndex: 2,\r\n                        }}\r\n                        onMouseDown={(e) => startResize(e, \"sw\")}\r\n                    />\r\n                    {/* NE corner */}\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"0\",\r\n                            right: \"0\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            cursor: \"nesw-resize\",\r\n                            background: \"transparent\",\r\n                            zIndex: 2,\r\n                        }}\r\n                        onMouseDown={(e) => startResize(e, \"ne\")}\r\n                    />\r\n                    {/* NW corner */}\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"0\",\r\n                            left: \"0\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            cursor: \"nwse-resize\",\r\n                            background: \"transparent\",\r\n                            zIndex: 2,\r\n                        }}\r\n                        onMouseDown={(e) => startResize(e, \"nw\")}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n            {/* Resize indicator - only show when resizing */}\r\n            {isResizing && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        bottom: \"5px\",\r\n                        right: \"5px\",\r\n                        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n                        color: \"white\",\r\n                        padding: \"2px 6px\",\r\n                        borderRadius: \"4px\",\r\n                        fontSize: \"10px\",\r\n                        pointerEvents: \"none\",\r\n                    }}\r\n                >\r\n                    {Math.round(parseFloat(dimensions.width))} × {Math.round(parseFloat(dimensions.height))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiagramPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}