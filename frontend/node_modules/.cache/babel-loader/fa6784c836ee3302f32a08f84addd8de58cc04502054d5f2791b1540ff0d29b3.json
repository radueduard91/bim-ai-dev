{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport * as go from \"gojs\"; // Import GoJS for diagram visualization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [graphData, setGraphData] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.message);\n      fetchGraphData();\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Error uploading file. Please check the console for more details.\");\n    }\n  };\n  const fetchGraphData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\n      setGraphData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching graph data:\", error);\n      alert(\"Error fetching graph data. Please check the console for more details.\");\n    }\n  };\n  const diagramRef = React.useRef();\n  React.useEffect(() => {\n    if (graphData) {\n      const $ = go.GraphObject.make;\n\n      // Initialize the GoJS diagram\n      const myDiagram = $(go.Diagram, diagramRef.current, {\n        \"undoManager.isEnabled\": true,\n        layout: $(go.TreeLayout, {\n          angle: 0,\n          layerSpacing: 35\n        }) // Left-to-right layout\n      });\n\n      // Define node template with hover label\n      myDiagram.nodeTemplate = $(go.Node, \"Auto\", {\n        toolTip: $(go.Adornment, \"Auto\", $(go.Shape, {\n          fill: \"lightyellow\"\n        }), $(go.TextBlock, {\n          margin: 4\n        }, new go.Binding(\"text\", \"hoverLabel\")))\n      }, $(go.Shape, \"RoundedRectangle\", {\n        fill: \"lightblue\"\n      }), $(go.TextBlock, {\n        margin: 5,\n        editable: true\n      }, new go.Binding(\"text\", \"label\").makeTwoWay()));\n\n      // Set the diagram's model with nodes and links\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\n    }\n  }, [graphData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: diagramRef,\n      style: {\n        width: \"100%\",\n        height: \"600px\",\n        border: \"1px solid black\"\n      },\n      children: !graphData && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Graph will be displayed here after uploading a file.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gwRTxMTRSw5xS8O+Ysy6axKvbYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","go","jsxDEV","_jsxDEV","App","_s","file","setFile","graphData","setGraphData","handleFileChange","event","target","files","handleFileUpload","alert","formData","FormData","append","response","post","headers","data","message","fetchGraphData","error","console","get","diagramRef","useRef","useEffect","$","GraphObject","make","myDiagram","Diagram","current","layout","TreeLayout","angle","layerSpacing","nodeTemplate","Node","toolTip","Adornment","Shape","fill","TextBlock","margin","Binding","editable","makeTwoWay","model","GraphLinksModel","nodeDataArray","linkDataArray","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","ref","style","width","height","border","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as go from \"gojs\"; // Import GoJS for diagram visualization\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [graphData, setGraphData] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file before uploading.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(response.data.message);\r\n      fetchGraphData();\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Error uploading file. Please check the console for more details.\");\r\n    }\r\n  };\r\n\r\n  const fetchGraphData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\r\n      setGraphData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching graph data:\", error);\r\n      alert(\"Error fetching graph data. Please check the console for more details.\");\r\n    }\r\n  };\r\n\r\n  const diagramRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (graphData) {\r\n      const $ = go.GraphObject.make;\r\n\r\n      // Initialize the GoJS diagram\r\n      const myDiagram = $(go.Diagram, diagramRef.current, {\r\n        \"undoManager.isEnabled\": true,\r\n        layout: $(go.TreeLayout, { angle: 0, layerSpacing: 35 }), // Left-to-right layout\r\n      });\r\n\r\n      // Define node template with hover label\r\n      myDiagram.nodeTemplate = $(\r\n        go.Node,\r\n        \"Auto\",\r\n        { toolTip: $(\r\n          go.Adornment,\r\n          \"Auto\",\r\n          $(go.Shape, { fill: \"lightyellow\" }),\r\n          $(go.TextBlock, { margin: 4 }, new go.Binding(\"text\", \"hoverLabel\"))\r\n        ) },\r\n        $(go.Shape, \"RoundedRectangle\", { fill: \"lightblue\" }),\r\n        $(go.TextBlock, { margin: 5, editable: true }, new go.Binding(\"text\", \"label\").makeTwoWay())\r\n      );\r\n\r\n      // Set the diagram's model with nodes and links\r\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\r\n    }\r\n  }, [graphData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Graph Visualization</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleFileUpload}>Upload File</button>\r\n      <div\r\n        ref={diagramRef}\r\n        style={{ width: \"100%\", height: \"600px\", border: \"1px solid black\" }}\r\n      >\r\n        {!graphData && <p>Graph will be displayed here after uploading a file.</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}