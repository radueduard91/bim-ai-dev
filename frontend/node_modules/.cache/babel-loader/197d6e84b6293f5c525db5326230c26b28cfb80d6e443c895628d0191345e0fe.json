{"ast":null,"code":"/**\r\n * Utility functions for cell rendering and styling\r\n */\n\n// Function to get cell color based on category and hover state\nexport const getCellColor = (category, isHovered) => {\n  if (isHovered) {\n    switch (category) {\n      case \"system\":\n        return \"#dbeafe\";\n      // Light blue\n      case \"object\":\n        return \"#dcfce7\";\n      // Light green\n      case \"attribute\":\n        return \"#fce7f3\";\n      // Light pink\n      case \"harmonised\":\n        return \"#f3e8ff\";\n      // Light purple\n      default:\n        return \"#f8fafc\";\n      // Light gray\n    }\n  }\n  return \"transparent\";\n};\n\n// Function to get cell border style\nexport const getCellBorderStyle = (rowIndex, isFirst = false, isLast = false) => {\n  return {\n    borderBottom: \"1px solid #e2e8f0\",\n    borderRight: \"1px solid #e2e8f0\",\n    borderLeft: isFirst ? \"1px solid #e2e8f0\" : \"none\",\n    borderTop: rowIndex === 0 ? \"1px solid #e2e8f0\" : \"none\"\n  };\n};","map":{"version":3,"names":["getCellColor","category","isHovered","getCellBorderStyle","rowIndex","isFirst","isLast","borderBottom","borderRight","borderLeft","borderTop"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization/utils/CellUtils.js"],"sourcesContent":["/**\r\n * Utility functions for cell rendering and styling\r\n */\r\n\r\n// Function to get cell color based on category and hover state\r\nexport const getCellColor = (category, isHovered) => {\r\n    if (isHovered) {\r\n        switch (category) {\r\n            case \"system\": return \"#dbeafe\"; // Light blue\r\n            case \"object\": return \"#dcfce7\"; // Light green\r\n            case \"attribute\": return \"#fce7f3\"; // Light pink\r\n            case \"harmonised\": return \"#f3e8ff\"; // Light purple\r\n            default: return \"#f8fafc\"; // Light gray\r\n        }\r\n    }\r\n    \r\n    return \"transparent\";\r\n};\r\n\r\n// Function to get cell border style\r\nexport const getCellBorderStyle = (rowIndex, isFirst = false, isLast = false) => {\r\n    return {\r\n        borderBottom: \"1px solid #e2e8f0\",\r\n        borderRight: \"1px solid #e2e8f0\", \r\n        borderLeft: isFirst ? \"1px solid #e2e8f0\" : \"none\",\r\n        borderTop: rowIndex === 0 ? \"1px solid #e2e8f0\" : \"none\"\r\n    };\r\n};"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,YAAY,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;EACjD,IAAIA,SAAS,EAAE;IACX,QAAQD,QAAQ;MACZ,KAAK,QAAQ;QAAE,OAAO,SAAS;MAAE;MACjC,KAAK,QAAQ;QAAE,OAAO,SAAS;MAAE;MACjC,KAAK,WAAW;QAAE,OAAO,SAAS;MAAE;MACpC,KAAK,YAAY;QAAE,OAAO,SAAS;MAAE;MACrC;QAAS,OAAO,SAAS;MAAE;IAC/B;EACJ;EAEA,OAAO,aAAa;AACxB,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,OAAO,GAAG,KAAK,EAAEC,MAAM,GAAG,KAAK,KAAK;EAC7E,OAAO;IACHC,YAAY,EAAE,mBAAmB;IACjCC,WAAW,EAAE,mBAAmB;IAChCC,UAAU,EAAEJ,OAAO,GAAG,mBAAmB,GAAG,MAAM;IAClDK,SAAS,EAAEN,QAAQ,KAAK,CAAC,GAAG,mBAAmB,GAAG;EACtD,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}