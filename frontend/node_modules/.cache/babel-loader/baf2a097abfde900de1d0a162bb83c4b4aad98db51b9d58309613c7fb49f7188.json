{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization\\\\components\\\\TableBody.js\";\nimport React, { useState } from 'react';\nimport TableRow from '../../TableRow';\nimport { handleClickInput, setInputRef } from '../AttributeManagement';\nimport { getCellColor, getCellBorderStyle } from '../utils/CellUtils';\n\n/**\r\n * Component for rendering the table body with rows\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableBody = ({\n  paginatedRows,\n  rowSpans,\n  clusterCounts,\n  objectCounts,\n  hoveredRow,\n  hoveredCell,\n  setHoveredRow,\n  setHoveredCell,\n  graphData,\n  setGraphData,\n  fetchGraphData,\n  openPopup,\n  handleLabelChange,\n  inputRefs,\n  showHarmonisedColumn,\n  draggedItem,\n  handleDragStart,\n  handleDragEnd,\n  handleDragOver,\n  handleDragLeave,\n  processDragDrop\n}) => {\n  // Function to format display text with ellipsis\n  const getDisplayText = text => {\n    if (!text) return \"\";\n    const lines = text.split('\\n');\n    const firstTwoLines = lines.slice(0, 2).join('\\n');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block',\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden',\n          whiteSpace: 'pre-line',\n          maxWidth: \"calc(100% - 20px)\",\n          marginRight: \"2px\",\n          textOverflow: \"ellipsis\",\n          display: \"-webkit-box\",\n          WebkitLineClamp: 2,\n          WebkitBoxOrient: \"vertical\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: firstTwoLines.substring(0, 100)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), text && text.length > 100 && /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        style: {\n          position: 'absolute',\n          bottom: '2px',\n          right: '2px',\n          cursor: \"pointer\",\n          color: \"#64748b\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"11\",\n          cy: \"11\",\n          r: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"21\",\n          y1: \"21\",\n          x2: \"16.65\",\n          y2: \"16.65\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"11\",\n          y1: \"8\",\n          x2: \"11\",\n          y2: \"14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"11\",\n          x2: \"14\",\n          y2: \"11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: paginatedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n      row: row,\n      index: index,\n      rowSpans: rowSpans,\n      clusterCounts: clusterCounts,\n      objectCounts: objectCounts,\n      hoveredRow: hoveredRow,\n      hoveredCell: hoveredCell,\n      setHoveredRow: setHoveredRow,\n      setHoveredCell: setHoveredCell,\n      handleDragStart: (event, key, category) => handleDragStart(event, key, category),\n      handleDragEnd: handleDragEnd,\n      handleDragOver: handleDragOver,\n      handleDragLeave: handleDragLeave,\n      handleDrop: (event, targetKey, targetCategory) => processDragDrop(event, targetKey, targetCategory),\n      openPopup: openPopup,\n      handleClickInput: (key, currentLabel, currentName) => handleClickInput(inputRefs, openPopup, key, currentLabel, currentName),\n      handleLabelChange: handleLabelChange,\n      setInputRef: setInputRef(inputRefs),\n      getDisplayText: getDisplayText,\n      getCellColor: getCellColor,\n      getCellBorderStyle: getCellBorderStyle,\n      showHarmonisedColumn: showHarmonisedColumn\n    }, row.attr.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_c = TableBody;\nexport default TableBody;\nvar _c;\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"names":["React","useState","TableRow","handleClickInput","setInputRef","getCellColor","getCellBorderStyle","jsxDEV","_jsxDEV","TableBody","paginatedRows","rowSpans","clusterCounts","objectCounts","hoveredRow","hoveredCell","setHoveredRow","setHoveredCell","graphData","setGraphData","fetchGraphData","openPopup","handleLabelChange","inputRefs","showHarmonisedColumn","draggedItem","handleDragStart","handleDragEnd","handleDragOver","handleDragLeave","processDragDrop","getDisplayText","text","lines","split","firstTwoLines","slice","join","style","position","display","width","children","overflow","whiteSpace","maxWidth","marginRight","textOverflow","WebkitLineClamp","WebkitBoxOrient","dangerouslySetInnerHTML","__html","substring","fileName","_jsxFileName","lineNumber","columnNumber","length","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","bottom","right","cursor","color","cx","cy","r","x1","y1","x2","y2","map","row","index","event","key","category","handleDrop","targetKey","targetCategory","currentLabel","currentName","attr","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization/components/TableBody.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TableRow from '../../TableRow';\r\nimport { handleClickInput, setInputRef } from '../AttributeManagement';\r\nimport { getCellColor, getCellBorderStyle } from '../utils/CellUtils';\r\n\r\n/**\r\n * Component for rendering the table body with rows\r\n */\r\nconst TableBody = ({ \r\n    paginatedRows,\r\n    rowSpans,\r\n    clusterCounts,\r\n    objectCounts,\r\n    hoveredRow,\r\n    hoveredCell,\r\n    setHoveredRow,\r\n    setHoveredCell,\r\n    graphData,\r\n    setGraphData,\r\n    fetchGraphData,\r\n    openPopup,\r\n    handleLabelChange,\r\n    inputRefs,\r\n    showHarmonisedColumn,\r\n    draggedItem,\r\n    handleDragStart,\r\n    handleDragEnd,\r\n    handleDragOver,\r\n    handleDragLeave,\r\n    processDragDrop\r\n}) => {\r\n    // Function to format display text with ellipsis\r\n    const getDisplayText = (text) => {\r\n        if (!text) return \"\";\r\n        const lines = text.split('\\n');\r\n        const firstTwoLines = lines.slice(0, 2).join('\\n');\r\n        \r\n        return (\r\n            <div style={{ position: 'relative', display: 'inline-block', width: \"100%\" }}>\r\n                <div \r\n                    style={{ \r\n                        overflow: 'hidden', \r\n                        whiteSpace: 'pre-line', \r\n                        maxWidth: \"calc(100% - 20px)\", \r\n                        marginRight: \"2px\",\r\n                        textOverflow: \"ellipsis\",\r\n                        display: \"-webkit-box\",\r\n                        WebkitLineClamp: 2,\r\n                        WebkitBoxOrient: \"vertical\"\r\n                    }}\r\n                    dangerouslySetInnerHTML={{ __html: firstTwoLines.substring(0, 100) }}\r\n                />\r\n                {text && text.length > 100 && (\r\n                    <svg \r\n                        xmlns=\"http://www.w3.org/2000/svg\" \r\n                        width=\"16\" \r\n                        height=\"16\" \r\n                        viewBox=\"0 0 24 24\" \r\n                        fill=\"none\" \r\n                        stroke=\"currentColor\" \r\n                        strokeWidth=\"2\" \r\n                        strokeLinecap=\"round\" \r\n                        strokeLinejoin=\"round\"\r\n                        style={{ \r\n                            position: 'absolute', \r\n                            bottom: '2px', \r\n                            right: '2px', \r\n                            cursor: \"pointer\",\r\n                            color: \"#64748b\"\r\n                        }}\r\n                    >\r\n                        <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n                        <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n                        <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\r\n                        <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\r\n                    </svg>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <tbody>\r\n            {paginatedRows.map((row, index) => (\r\n                <TableRow \r\n                    key={row.attr.key}\r\n                    row={row}\r\n                    index={index}\r\n                    rowSpans={rowSpans}\r\n                    clusterCounts={clusterCounts}\r\n                    objectCounts={objectCounts}\r\n                    hoveredRow={hoveredRow}\r\n                    hoveredCell={hoveredCell}\r\n                    setHoveredRow={setHoveredRow}\r\n                    setHoveredCell={setHoveredCell}\r\n                    handleDragStart={(event, key, category) => \r\n                        handleDragStart(event, key, category)\r\n                    }\r\n                    handleDragEnd={handleDragEnd}\r\n                    handleDragOver={handleDragOver}\r\n                    handleDragLeave={handleDragLeave}\r\n                    handleDrop={(event, targetKey, targetCategory) => \r\n                        processDragDrop(event, targetKey, targetCategory)\r\n                    }\r\n                    openPopup={openPopup}\r\n                    handleClickInput={(key, currentLabel, currentName) => \r\n                        handleClickInput(\r\n                            inputRefs, \r\n                            openPopup, \r\n                            key, \r\n                            currentLabel, \r\n                            currentName\r\n                        )\r\n                    }\r\n                    handleLabelChange={handleLabelChange}\r\n                    setInputRef={setInputRef(inputRefs)}\r\n                    getDisplayText={getDisplayText}\r\n                    getCellColor={getCellColor}\r\n                    getCellBorderStyle={getCellBorderStyle}\r\n                    showHarmonisedColumn={showHarmonisedColumn}\r\n                />\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default TableBody;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,wBAAwB;AACtE,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,oBAAoB;;AAErE;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,SAAS,GAAGA,CAAC;EACfC,aAAa;EACbC,QAAQ;EACRC,aAAa;EACbC,YAAY;EACZC,UAAU;EACVC,WAAW;EACXC,aAAa;EACbC,cAAc;EACdC,SAAS;EACTC,YAAY;EACZC,cAAc;EACdC,SAAS;EACTC,iBAAiB;EACjBC,SAAS;EACTC,oBAAoB;EACpBC,WAAW;EACXC,eAAe;EACfC,aAAa;EACbC,cAAc;EACdC,eAAe;EACfC;AACJ,CAAC,KAAK;EACF;EACA,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAC9B,MAAMC,aAAa,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAElD,oBACI7B,OAAA;MAAK8B,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,OAAO,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,gBACzElC,OAAA;QACI8B,KAAK,EAAE;UACHK,QAAQ,EAAE,QAAQ;UAClBC,UAAU,EAAE,UAAU;UACtBC,QAAQ,EAAE,mBAAmB;UAC7BC,WAAW,EAAE,KAAK;UAClBC,YAAY,EAAE,UAAU;UACxBP,OAAO,EAAE,aAAa;UACtBQ,eAAe,EAAE,CAAC;UAClBC,eAAe,EAAE;QACrB,CAAE;QACFC,uBAAuB,EAAE;UAAEC,MAAM,EAAEhB,aAAa,CAACiB,SAAS,CAAC,CAAC,EAAE,GAAG;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,EACDxB,IAAI,IAAIA,IAAI,CAACyB,MAAM,GAAG,GAAG,iBACtBjD,OAAA;QACIkD,KAAK,EAAC,4BAA4B;QAClCjB,KAAK,EAAC,IAAI;QACVkB,MAAM,EAAC,IAAI;QACXC,OAAO,EAAC,WAAW;QACnBC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,cAAc;QACrBC,WAAW,EAAC,GAAG;QACfC,aAAa,EAAC,OAAO;QACrBC,cAAc,EAAC,OAAO;QACtB3B,KAAK,EAAE;UACHC,QAAQ,EAAE,UAAU;UACpB2B,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,KAAK;UACZC,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAE;QACX,CAAE;QAAA3B,QAAA,gBAEFlC,OAAA;UAAQ8D,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,CAAC,EAAC;QAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChChD,OAAA;UAAMiE,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,OAAO;UAACC,EAAE,EAAC;QAAO;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9ChD,OAAA;UAAMiE,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC;QAAI;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvChD,OAAA;UAAMiE,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC;QAAI;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd,CAAC;EAED,oBACIhD,OAAA;IAAAkC,QAAA,EACKhC,aAAa,CAACmE,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1BvE,OAAA,CAACN,QAAQ;MAEL4E,GAAG,EAAEA,GAAI;MACTC,KAAK,EAAEA,KAAM;MACbpE,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEA,aAAc;MAC7BC,YAAY,EAAEA,YAAa;MAC3BC,UAAU,EAAEA,UAAW;MACvBC,WAAW,EAAEA,WAAY;MACzBC,aAAa,EAAEA,aAAc;MAC7BC,cAAc,EAAEA,cAAe;MAC/BS,eAAe,EAAEA,CAACsD,KAAK,EAAEC,GAAG,EAAEC,QAAQ,KAClCxD,eAAe,CAACsD,KAAK,EAAEC,GAAG,EAAEC,QAAQ,CACvC;MACDvD,aAAa,EAAEA,aAAc;MAC7BC,cAAc,EAAEA,cAAe;MAC/BC,eAAe,EAAEA,eAAgB;MACjCsD,UAAU,EAAEA,CAACH,KAAK,EAAEI,SAAS,EAAEC,cAAc,KACzCvD,eAAe,CAACkD,KAAK,EAAEI,SAAS,EAAEC,cAAc,CACnD;MACDhE,SAAS,EAAEA,SAAU;MACrBlB,gBAAgB,EAAEA,CAAC8E,GAAG,EAAEK,YAAY,EAAEC,WAAW,KAC7CpF,gBAAgB,CACZoB,SAAS,EACTF,SAAS,EACT4D,GAAG,EACHK,YAAY,EACZC,WACJ,CACH;MACDjE,iBAAiB,EAAEA,iBAAkB;MACrClB,WAAW,EAAEA,WAAW,CAACmB,SAAS,CAAE;MACpCQ,cAAc,EAAEA,cAAe;MAC/B1B,YAAY,EAAEA,YAAa;MAC3BC,kBAAkB,EAAEA,kBAAmB;MACvCkB,oBAAoB,EAAEA;IAAqB,GAlCtCsD,GAAG,CAACU,IAAI,CAACP,GAAG;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmCpB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACiC,EAAA,GApHIhF,SAAS;AAsHf,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}