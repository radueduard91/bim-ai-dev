{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nexport const addNewAttribute = async (graphData, setGraphData, fetchGraphData, setConfirmPopup) => {\n  setConfirmPopup({\n    isOpen: false\n  });\n  const newAttributeKey = uuidv4();\n  const newAttribute = {\n    key: newAttributeKey,\n    category: \"attribute\",\n    label: \"New Attribute\",\n    hoverLabel: \"New Attribute\"\n  };\n  try {\n    const response = await axios.post(\"http://localhost:8000/graph-data/\", {\n      nodeDataArray: [newAttribute, ...graphData.nodeDataArray],\n      linkDataArray: [...graphData.linkDataArray]\n    });\n    if (response.data.message === \"Graph data updated successfully\") {\n      setGraphData(prev => ({\n        ...prev,\n        nodeDataArray: [newAttribute, ...prev.nodeDataArray]\n      }));\n      await fetchGraphData();\n    }\n  } catch (error) {\n    console.error(\"Error adding new Attribute:\", error);\n    let errorMessage = \"Error adding new Attribute.\";\n    if (error.response && error.response.data) {\n      errorMessage += ` ${error.response.data.detail || ''}`;\n    }\n    alert(errorMessage);\n  }\n};\nexport const handleClickInput = (inputRefs, openPopup, key, currentLabel, currentName) => {\n  openPopup(key, currentLabel, currentName);\n  if (inputRefs.current[key] && inputRefs.current[key].current) {\n    inputRefs.current[key].current.focus();\n  }\n};\nexport const setInputRef = inputRefs => {\n  return key => {\n    if (!inputRefs.current[key]) {\n      inputRefs.current[key] = /*#__PURE__*/React.createRef();\n    }\n    return inputRefs.current[key];\n  };\n};","map":{"version":3,"names":["React","axios","v4","uuidv4","addNewAttribute","graphData","setGraphData","fetchGraphData","setConfirmPopup","isOpen","newAttributeKey","newAttribute","key","category","label","hoverLabel","response","post","nodeDataArray","linkDataArray","data","message","prev","error","console","errorMessage","detail","alert","handleClickInput","inputRefs","openPopup","currentLabel","currentName","current","focus","setInputRef","createRef"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization/AttributeManagement.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addNewAttribute = async (\r\n    graphData, \r\n    setGraphData, \r\n    fetchGraphData, \r\n    setConfirmPopup\r\n) => {\r\n    setConfirmPopup({ isOpen: false });\r\n    const newAttributeKey = uuidv4();\r\n    const newAttribute = {\r\n        key: newAttributeKey,\r\n        category: \"attribute\",\r\n        label: \"New Attribute\",\r\n        hoverLabel: \"New Attribute\",\r\n    };\r\n    \r\n    try {\r\n        const response = await axios.post(\"http://localhost:8000/graph-data/\", {\r\n            nodeDataArray: [newAttribute, ...graphData.nodeDataArray],\r\n            linkDataArray: [...graphData.linkDataArray]\r\n        });\r\n        \r\n        if (response.data.message === \"Graph data updated successfully\") {\r\n            setGraphData((prev) => ({\r\n                ...prev,\r\n                nodeDataArray: [newAttribute, ...prev.nodeDataArray],\r\n            }));\r\n            await fetchGraphData();\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error adding new Attribute:\", error);\r\n        let errorMessage = \"Error adding new Attribute.\";\r\n        if (error.response && error.response.data) {\r\n            errorMessage += ` ${error.response.data.detail || ''}`;\r\n        }\r\n        alert(errorMessage);\r\n    }\r\n};\r\n\r\nexport const handleClickInput = (inputRefs, openPopup, key, currentLabel, currentName) => {\r\n    openPopup(key, currentLabel, currentName);\r\n    if (inputRefs.current[key] && inputRefs.current[key].current) {\r\n        inputRefs.current[key].current.focus();\r\n    }\r\n};\r\n\r\nexport const setInputRef = (inputRefs) => {\r\n    return (key) => {\r\n        if (!inputRefs.current[key]) {\r\n            inputRefs.current[key] = React.createRef();\r\n        }\r\n        return inputRefs.current[key];\r\n    };\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAC3BC,SAAS,EACTC,YAAY,EACZC,cAAc,EACdC,eAAe,KACd;EACDA,eAAe,CAAC;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAC;EAClC,MAAMC,eAAe,GAAGP,MAAM,CAAC,CAAC;EAChC,MAAMQ,YAAY,GAAG;IACjBC,GAAG,EAAEF,eAAe;IACpBG,QAAQ,EAAE,WAAW;IACrBC,KAAK,EAAE,eAAe;IACtBC,UAAU,EAAE;EAChB,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,mCAAmC,EAAE;MACnEC,aAAa,EAAE,CAACP,YAAY,EAAE,GAAGN,SAAS,CAACa,aAAa,CAAC;MACzDC,aAAa,EAAE,CAAC,GAAGd,SAAS,CAACc,aAAa;IAC9C,CAAC,CAAC;IAEF,IAAIH,QAAQ,CAACI,IAAI,CAACC,OAAO,KAAK,iCAAiC,EAAE;MAC7Df,YAAY,CAAEgB,IAAI,KAAM;QACpB,GAAGA,IAAI;QACPJ,aAAa,EAAE,CAACP,YAAY,EAAE,GAAGW,IAAI,CAACJ,aAAa;MACvD,CAAC,CAAC,CAAC;MACH,MAAMX,cAAc,CAAC,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,IAAIE,YAAY,GAAG,6BAA6B;IAChD,IAAIF,KAAK,CAACP,QAAQ,IAAIO,KAAK,CAACP,QAAQ,CAACI,IAAI,EAAE;MACvCK,YAAY,IAAI,IAAIF,KAAK,CAACP,QAAQ,CAACI,IAAI,CAACM,MAAM,IAAI,EAAE,EAAE;IAC1D;IACAC,KAAK,CAACF,YAAY,CAAC;EACvB;AACJ,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,SAAS,EAAElB,GAAG,EAAEmB,YAAY,EAAEC,WAAW,KAAK;EACtFF,SAAS,CAAClB,GAAG,EAAEmB,YAAY,EAAEC,WAAW,CAAC;EACzC,IAAIH,SAAS,CAACI,OAAO,CAACrB,GAAG,CAAC,IAAIiB,SAAS,CAACI,OAAO,CAACrB,GAAG,CAAC,CAACqB,OAAO,EAAE;IAC1DJ,SAAS,CAACI,OAAO,CAACrB,GAAG,CAAC,CAACqB,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1C;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIN,SAAS,IAAK;EACtC,OAAQjB,GAAG,IAAK;IACZ,IAAI,CAACiB,SAAS,CAACI,OAAO,CAACrB,GAAG,CAAC,EAAE;MACzBiB,SAAS,CAACI,OAAO,CAACrB,GAAG,CAAC,gBAAGZ,KAAK,CAACoC,SAAS,CAAC,CAAC;IAC9C;IACA,OAAOP,SAAS,CAACI,OAAO,CAACrB,GAAG,CAAC;EACjC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}