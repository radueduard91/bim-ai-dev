{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport * as go from \"gojs\"; // Import GoJS for diagram visualization\nimport FileUpload from \"./components/FileUpload\"; // Importing the new component\nimport TableVisualization from \"./components/TableVisualization\"; // NEW LINE\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [graphData, setGraphData] = useState(null);\n  const [popup, setPopup] = useState({\n    isOpen: false,\n    key: null,\n    value: \"\"\n  });\n  const [dimensions, setDimensions] = useState({\n    width: \"100%\",\n    height: \"600px\"\n  });\n  const diagramRef = useRef();\n\n  // Handle file change\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Handle file upload\n  const handleFileUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.message);\n      fetchGraphData();\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Error uploading file. Please check the console for more details.\");\n    }\n  };\n  const fetchGraphData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\n      setGraphData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching graph data:\", error);\n      alert(\"Error fetching graph data. Please check the console for more details.\");\n    }\n  };\n  useEffect(() => {\n    if (graphData) {\n      const $ = go.GraphObject.make;\n\n      // Dispose of the old diagram if it exists\n      if (diagramRef.current) {\n        const existingDiagram = go.Diagram.fromDiv(diagramRef.current);\n        if (existingDiagram) {\n          existingDiagram.div = null; // Clears the previous diagram instance\n        }\n      }\n      const myDiagram = $(go.Diagram, diagramRef.current, {\n        \"undoManager.isEnabled\": true,\n        layout: $(go.TreeLayout, {\n          angle: 0,\n          layerSpacing: 35\n        })\n      });\n\n      // Node template with hover functionality\n      myDiagram.nodeTemplate = $(go.Node, \"Auto\", $(go.Shape, \"RoundedRectangle\", {\n        fill: \"lightblue\"\n      }, new go.Binding(\"fill\", \"color\")), $(go.TextBlock, {\n        margin: 5\n      }, new go.Binding(\"text\", \"label\")),\n      // Always show the node label\n      $(go.TextBlock, {\n        margin: 5,\n        visible: false,\n        // HoverLabel hidden by default\n        font: \"italic 10pt sans-serif\",\n        stroke: \"gray\",\n        name: \"HOVER_LABEL\",\n        background: \"lightyellow\"\n      }, new go.Binding(\"text\", \"hoverLabel\")), {\n        // Mouse enter: show hover label\n        mouseEnter: (e, obj) => {\n          const hoverLabel = obj.findObject(\"HOVER_LABEL\");\n          if (hoverLabel) hoverLabel.visible = true;\n        },\n        // Mouse leave: hide hover label\n        mouseLeave: (e, obj) => {\n          const hoverLabel = obj.findObject(\"HOVER_LABEL\");\n          if (hoverLabel) hoverLabel.visible = false;\n        }\n      });\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\n      myDiagram.addDiagramListener(\"InitialLayoutCompleted\", () => {\n        const bounds = myDiagram.documentBounds;\n        setDimensions({\n          width: `${Math.ceil(bounds.width)}px`,\n          height: `${Math.ceil(bounds.height)}px`\n        });\n      });\n    }\n  }, [graphData]);\n  const openPopup = (key, currentValue) => {\n    setPopup({\n      isOpen: true,\n      key,\n      value: currentValue\n    });\n  };\n  const closePopup = () => {\n    setPopup({\n      isOpen: false,\n      key: null,\n      value: \"\"\n    });\n  };\n  const savePopupChanges = () => {\n    const updatedValue = popup.value;\n    setGraphData(prev => ({\n      ...prev,\n      nodeDataArray: prev.nodeDataArray.map(node => node.key === popup.key ? {\n        ...node,\n        hoverLabel: updatedValue\n      } : node)\n    }));\n    closePopup();\n  };\n  const handleLabelChange = (event, key) => {\n    const updatedValue = event.target.value;\n    setGraphData(prev => ({\n      ...prev,\n      nodeDataArray: prev.nodeDataArray.map(node => node.key === key ? {\n        ...node,\n        hoverLabel: updatedValue\n      } : node)\n    }));\n  };\n\n  // const renderTable = () => { // COMMENTED OUT\n  //   if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\n\n  //   const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\n  //   const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\n  //   const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\n\n  //   const rows = attributes.map((attr) => {\n  //     const parentObject = objects.find((obj) =>\n  //       graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\n  //     );\n\n  //     const parentCluster = parentObject\n  //       ? clusters.find((sys) =>\n  //           graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\n  //         )\n  //       : null;\n\n  //     return (\n  //       <tr key={attr.key}>\n  //         <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\n  //           {parentCluster?.label || \"Unlinked\"}\n  //           <br />\n  //           <input\n  //             type=\"text\"\n  //             value={parentCluster?.hoverLabel || \"\"}\n  //             onChange={(e) => handleLabelChange(e, parentCluster?.key)}\n  //           />\n  //           <button onClick={() => openPopup(parentCluster?.key, parentCluster?.hoverLabel || \"\")}>+</button>\n  //         </td>\n  //         <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\n  //           {parentObject?.label || \"Unlinked\"}\n  //           <br />\n  //           <input\n  //             type=\"text\"\n  //             value={parentObject?.hoverLabel || \"\"}\n  //             onChange={(e) => handleLabelChange(e, parentObject?.key)}\n  //           />\n  //           <button onClick={() => openPopup(parentObject?.key, parentObject?.hoverLabel || \"\")}>+</button>\n  //         </td>\n  //         <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\n  //           {attr.label}\n  //           <br />\n  //           <input\n  //             type=\"text\"\n  //             value={attr.hoverLabel || \"\"}\n  //             onChange={(e) => handleLabelChange(e, attr.key)}\n  //           />\n  //           <button onClick={() => openPopup(attr.key, attr.hoverLabel || \"\")}>+</button>\n  //         </td>\n  //       </tr>\n  //     );\n  //   });\n\n  //   return (\n  //     <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n  //       <thead>\n  //         <tr>\n  //           <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Cluster</th>\n  //           <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Object</th>\n  //           <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Attribute</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>{rows}</tbody>\n  //     </table>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        borderRight: \"1px solid black\",\n        padding: \"10px\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Node Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableVisualization // NEW LINE\n      , {\n        graphData: graphData // NEW LINE\n        ,\n        handleLabelChange: handleLabelChange // NEW LINE\n        ,\n        openPopup: openPopup // NEW LINE\n        ,\n        setGraphData: setGraphData // NEW LINE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Graph Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: diagramRef,\n        style: {\n          width: dimensions.width,\n          height: dimensions.height,\n          border: \"1px solid black\"\n        },\n        children: !graphData && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Graph will be displayed here after uploading a file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), popup.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        background: \"white\",\n        border: \"1px solid black\",\n        padding: \"20px\",\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"40\",\n        value: popup.value,\n        onChange: e => setPopup({\n          ...popup,\n          value: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: savePopupChanges,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7lbbCIh3uEa80sY1sD/coyEgeRI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","go","FileUpload","TableVisualization","jsxDEV","_jsxDEV","App","_s","file","setFile","graphData","setGraphData","popup","setPopup","isOpen","key","value","dimensions","setDimensions","width","height","diagramRef","handleFileChange","event","target","files","handleFileUpload","alert","formData","FormData","append","response","post","headers","data","message","fetchGraphData","error","console","get","$","GraphObject","make","current","existingDiagram","Diagram","fromDiv","div","myDiagram","layout","TreeLayout","angle","layerSpacing","nodeTemplate","Node","Shape","fill","Binding","TextBlock","margin","visible","font","stroke","name","background","mouseEnter","e","obj","hoverLabel","findObject","mouseLeave","model","GraphLinksModel","nodeDataArray","linkDataArray","addDiagramListener","bounds","documentBounds","Math","ceil","openPopup","currentValue","closePopup","savePopupChanges","updatedValue","prev","map","node","handleLabelChange","style","display","children","borderRight","padding","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","overflow","type","onChange","ref","border","position","top","left","transform","zIndex","rows","cols","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as go from \"gojs\"; // Import GoJS for diagram visualization\r\nimport FileUpload from \"./components/FileUpload\"; // Importing the new component\r\nimport TableVisualization from \"./components/TableVisualization\"; // NEW LINE\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [graphData, setGraphData] = useState(null);\r\n  const [popup, setPopup] = useState({ isOpen: false, key: null, value: \"\" });\r\n  const [dimensions, setDimensions] = useState({ width: \"100%\", height: \"600px\" });\r\n  const diagramRef = useRef();\r\n\r\n  // Handle file change\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  // Handle file upload\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file before uploading.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(response.data.message);\r\n      fetchGraphData();\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Error uploading file. Please check the console for more details.\");\r\n    }\r\n  };\r\n\r\n  const fetchGraphData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\r\n      setGraphData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching graph data:\", error);\r\n      alert(\"Error fetching graph data. Please check the console for more details.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graphData) {\r\n      const $ = go.GraphObject.make;\r\n\r\n      // Dispose of the old diagram if it exists\r\n      if (diagramRef.current) {\r\n        const existingDiagram = go.Diagram.fromDiv(diagramRef.current);\r\n        if (existingDiagram) {\r\n          existingDiagram.div = null; // Clears the previous diagram instance\r\n        }\r\n      }\r\n\r\n      const myDiagram = $(go.Diagram, diagramRef.current, {\r\n        \"undoManager.isEnabled\": true,\r\n        layout: $(go.TreeLayout, { angle: 0, layerSpacing: 35 }),\r\n      });\r\n\r\n      // Node template with hover functionality\r\n      myDiagram.nodeTemplate = $(\r\n        go.Node,\r\n        \"Auto\",\r\n        $(go.Shape, \"RoundedRectangle\", { fill: \"lightblue\" }, new go.Binding(\"fill\", \"color\")),\r\n        $(go.TextBlock, { margin: 5 }, new go.Binding(\"text\", \"label\")), // Always show the node label\r\n        $(\r\n          go.TextBlock,\r\n          {\r\n            margin: 5,\r\n            visible: false, // HoverLabel hidden by default\r\n            font: \"italic 10pt sans-serif\",\r\n            stroke: \"gray\",\r\n            name: \"HOVER_LABEL\",\r\n            background: \"lightyellow\",\r\n          },\r\n          new go.Binding(\"text\", \"hoverLabel\")\r\n        ),\r\n        {\r\n          // Mouse enter: show hover label\r\n          mouseEnter: (e, obj) => {\r\n            const hoverLabel = obj.findObject(\"HOVER_LABEL\");\r\n            if (hoverLabel) hoverLabel.visible = true;\r\n          },\r\n          // Mouse leave: hide hover label\r\n          mouseLeave: (e, obj) => {\r\n            const hoverLabel = obj.findObject(\"HOVER_LABEL\");\r\n            if (hoverLabel) hoverLabel.visible = false;\r\n          },\r\n        }\r\n      );\r\n\r\n      myDiagram.model = new go.GraphLinksModel(graphData.nodeDataArray, graphData.linkDataArray);\r\n\r\n      myDiagram.addDiagramListener(\"InitialLayoutCompleted\", () => {\r\n        const bounds = myDiagram.documentBounds;\r\n        setDimensions({\r\n          width: `${Math.ceil(bounds.width)}px`,\r\n          height: `${Math.ceil(bounds.height)}px`,\r\n        });\r\n      });\r\n    }\r\n  }, [graphData]);\r\n\r\n  const openPopup = (key, currentValue) => {\r\n    setPopup({ isOpen: true, key, value: currentValue });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setPopup({ isOpen: false, key: null, value: \"\" });\r\n  };\r\n\r\n  const savePopupChanges = () => {\r\n    const updatedValue = popup.value;\r\n    setGraphData((prev) => ({\r\n      ...prev,\r\n      nodeDataArray: prev.nodeDataArray.map((node) =>\r\n        node.key === popup.key ? { ...node, hoverLabel: updatedValue } : node\r\n      ),\r\n    }));\r\n    closePopup();\r\n  };\r\n\r\n  const handleLabelChange = (event, key) => {\r\n    const updatedValue = event.target.value;\r\n    setGraphData((prev) => ({\r\n      ...prev,\r\n      nodeDataArray: prev.nodeDataArray.map((node) =>\r\n        node.key === key ? { ...node, hoverLabel: updatedValue } : node\r\n      ),\r\n    }));\r\n  };\r\n\r\n  // const renderTable = () => { // COMMENTED OUT\r\n  //   if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\r\n\r\n  //   const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n  //   const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n  //   const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n  //   const rows = attributes.map((attr) => {\r\n  //     const parentObject = objects.find((obj) =>\r\n  //       graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n  //     );\r\n\r\n  //     const parentCluster = parentObject\r\n  //       ? clusters.find((sys) =>\r\n  //           graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n  //         )\r\n  //       : null;\r\n\r\n  //     return (\r\n  //       <tr key={attr.key}>\r\n  //         <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n  //           {parentCluster?.label || \"Unlinked\"}\r\n  //           <br />\r\n  //           <input\r\n  //             type=\"text\"\r\n  //             value={parentCluster?.hoverLabel || \"\"}\r\n  //             onChange={(e) => handleLabelChange(e, parentCluster?.key)}\r\n  //           />\r\n  //           <button onClick={() => openPopup(parentCluster?.key, parentCluster?.hoverLabel || \"\")}>+</button>\r\n  //         </td>\r\n  //         <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n  //           {parentObject?.label || \"Unlinked\"}\r\n  //           <br />\r\n  //           <input\r\n  //             type=\"text\"\r\n  //             value={parentObject?.hoverLabel || \"\"}\r\n  //             onChange={(e) => handleLabelChange(e, parentObject?.key)}\r\n  //           />\r\n  //           <button onClick={() => openPopup(parentObject?.key, parentObject?.hoverLabel || \"\")}>+</button>\r\n  //         </td>\r\n  //         <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n  //           {attr.label}\r\n  //           <br />\r\n  //           <input\r\n  //             type=\"text\"\r\n  //             value={attr.hoverLabel || \"\"}\r\n  //             onChange={(e) => handleLabelChange(e, attr.key)}\r\n  //           />\r\n  //           <button onClick={() => openPopup(attr.key, attr.hoverLabel || \"\")}>+</button>\r\n  //         </td>\r\n  //       </tr>\r\n  //     );\r\n  //   });\r\n\r\n  //   return (\r\n  //     <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n  //       <thead>\r\n  //         <tr>\r\n  //           <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Cluster</th>\r\n  //           <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Object</th>\r\n  //           <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Attribute</th>\r\n  //         </tr>\r\n  //       </thead>\r\n  //       <tbody>{rows}</tbody>\r\n  //     </table>\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\", height: \"100%\" }}>\r\n      <div style={{ width: \"50%\", borderRight: \"1px solid black\", padding: \"10px\", overflowY: \"auto\" }}>\r\n        <h2>Node Table</h2>\r\n        <TableVisualization // NEW LINE\r\n           graphData={graphData} // NEW LINE\r\n          handleLabelChange={handleLabelChange} // NEW LINE\r\n          openPopup={openPopup} // NEW LINE\r\n          setGraphData={setGraphData} // NEW LINE\r\n        /> {/* NEW LINE */}\r\n        <button onClick={handleFileUpload} style={{ marginTop: \"10px\" }}>\r\n          Save Changes\r\n        </button>\r\n      </div>\r\n      <div style={{ width: \"50%\", padding: \"10px\", overflow: \"auto\" }}>\r\n        <h2>Graph Visualization</h2>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleFileUpload}>Upload File</button>\r\n        <div\r\n          ref={diagramRef}\r\n          style={{\r\n            width: dimensions.width,\r\n            height: dimensions.height,\r\n            border: \"1px solid black\",\r\n          }}\r\n        >\r\n          {!graphData && <p>Graph will be displayed here after uploading a file.</p>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Popup Modal */}\r\n      {popup.isOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            background: \"white\",\r\n            border: \"1px solid black\",\r\n            padding: \"20px\",\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <h3>Edit Label</h3>\r\n          <textarea\r\n            rows=\"5\"\r\n            cols=\"40\"\r\n            value={popup.value}\r\n            onChange={(e) => setPopup({ ...popup, value: e.target.value })}\r\n          />\r\n          <br />\r\n          <button onClick={savePopupChanges}>Save</button>\r\n          <button onClick={closePopup} style={{ marginLeft: \"10px\" }}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}