{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FileUpload from \"./components/FileUpload\";\nimport TableVisualization from \"./components/TableVisualization\";\nimport GraphVisualization from \"./components/GraphVisualization\";\nimport Popup from \"./components/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [graphData, setGraphData] = useState(null);\n  const [popup, setPopup] = useState({\n    isOpen: false,\n    key: null,\n    value: \"\"\n  });\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    // Implement file upload logic\n  };\n  const handleLabelChange = (event, key) => {\n    // Implement label change logic\n  };\n  const openPopup = (key, value) => setPopup({\n    isOpen: true,\n    key,\n    value\n  });\n  const closePopup = () => setPopup({\n    isOpen: false,\n    key: null,\n    value: \"\"\n  });\n  const savePopupChanges = () => {\n    // Save popup changes\n    closePopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        borderRight: \"1px solid black\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n        onFileChange: handleFileChange,\n        onFileUpload: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableVisualization, {\n        graphData: graphData,\n        handleLabelChange: handleLabelChange,\n        openPopup: openPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(GraphVisualization, {\n        graphData: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: popup.isOpen,\n      value: popup.value,\n      onChange: e => setPopup({\n        ...popup,\n        value: e.target.value\n      }),\n      onSave: savePopupChanges,\n      onCancel: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UESAIMGcq5D+xAnga9o+pCWakak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","TableVisualization","GraphVisualization","Popup","jsxDEV","_jsxDEV","App","_s","file","setFile","graphData","setGraphData","popup","setPopup","isOpen","key","value","handleFileChange","event","target","files","handleFileUpload","handleLabelChange","openPopup","closePopup","savePopupChanges","style","display","width","children","borderRight","padding","onFileChange","onFileUpload","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","onSave","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport TableVisualization from \"./components/TableVisualization\";\r\nimport GraphVisualization from \"./components/GraphVisualization\";\r\nimport Popup from \"./components/Popup\";\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [graphData, setGraphData] = useState(null);\r\n  const [popup, setPopup] = useState({ isOpen: false, key: null, value: \"\" });\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    // Implement file upload logic\r\n  };\r\n\r\n  const handleLabelChange = (event, key) => {\r\n    // Implement label change logic\r\n  };\r\n\r\n  const openPopup = (key, value) => setPopup({ isOpen: true, key, value });\r\n  const closePopup = () => setPopup({ isOpen: false, key: null, value: \"\" });\r\n  const savePopupChanges = () => {\r\n    // Save popup changes\r\n    closePopup();\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\" }}>\r\n      <div style={{ width: \"50%\", borderRight: \"1px solid black\", padding: \"10px\" }}>\r\n        <FileUpload onFileChange={handleFileChange} onFileUpload={handleFileUpload} />\r\n        <TableVisualization\r\n          graphData={graphData}\r\n          handleLabelChange={handleLabelChange}\r\n          openPopup={openPopup}\r\n        />\r\n      </div>\r\n      <div style={{ width: \"50%\", padding: \"10px\" }}>\r\n        <GraphVisualization graphData={graphData} />\r\n      </div>\r\n      <Popup\r\n        isOpen={popup.isOpen}\r\n        value={popup.value}\r\n        onChange={(e) => setPopup({ ...popup, value: e.target.value })}\r\n        onSave={savePopupChanges}\r\n        onCancel={closePopup}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}