{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from 'uuid';\nimport TableRow from './TableRow';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableVisualization = ({\n  graphData,\n  handleLabelChange,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [sortedRows, setSortedRows] = useState([]);\n  const [rowSpans, setRowSpans] = useState({});\n  const [clusterCounts, setClusterCounts] = useState({});\n  const [objectCounts, setObjectCounts] = useState({});\n  const [confirmPopup, setConfirmPopup] = useState({\n    isOpen: false\n  });\n  const [hoveredRow, setHoveredRow] = useState(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const inputRefs = useRef({});\n\n  // Handle drag and drop operations\n  const handleDragStart = (event, key, category) => {\n    event.dataTransfer.setData(\"text/plain\", key);\n    event.dataTransfer.setData(\"category\", category);\n    setDraggedItem(key);\n\n    // Add drag styling\n    if (event.target.classList) {\n      event.target.classList.add(\"dragging\");\n    }\n  };\n  const handleDragEnd = event => {\n    // Remove drag styling\n    if (event.target.classList) {\n      event.target.classList.remove(\"dragging\");\n    }\n    setDraggedItem(null);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    // Add drop target styling\n    if (event.currentTarget.classList) {\n      event.currentTarget.classList.add(\"drop-target\");\n    }\n  };\n  const handleDragLeave = event => {\n    // Remove drop target styling\n    if (event.currentTarget.classList) {\n      event.currentTarget.classList.remove(\"drop-target\");\n    }\n  };\n  const handleDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n\n    // Remove drop target styling\n    if (event.currentTarget.classList) {\n      event.currentTarget.classList.remove(\"drop-target\");\n    }\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    const sourceCategory = event.dataTransfer.getData(\"category\");\n    if (sourceKey && sourceKey !== targetKey) {\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n\n        // Find the source node and target node\n        const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\n        if (sourceNode && targetNode) {\n          // Remove all existing links where the source node is the to\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          if (sourceNode.category === \"attribute\") {\n            // If target is object, create new link\n            if (targetNode.category === \"object\") {\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n            // if target is system, check if object exists then create new links\n            else if (targetNode.category === \"system\") {\n              const linkedObject = updatedNodeDataArray.find(node => prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey));\n              if (linkedObject) {\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\n              }\n              const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\n              const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\n              if (objectLinks.length > 0) {\n                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\n                if (parentObject) {\n                  updatedLinkDataArray.push({\n                    from: targetKey,\n                    to: parentObject.key\n                  });\n                  updatedLinkDataArray.push({\n                    from: parentObject.key,\n                    to: sourceKey\n                  });\n                }\n              }\n            }\n          }\n          // If source is object\n          else if (sourceNode.category === \"object\") {\n            if (targetNode.category === \"system\") {\n              updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n          }\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n\n      // Send drag-drop changes to backend\n      try {\n        const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        if (response.data.message === \"Drag-and-drop operation completed successfully\") {\n          await fetchGraphData();\n        }\n      } catch (error) {\n        console.error(\"Error applying drag and drop:\", error);\n        let errorMessage = \"Error applying drag and drop.\";\n        if (error.response && error.response.data) {\n          errorMessage += ` ${error.response.data.detail || ''}`;\n        }\n        alert(errorMessage);\n      }\n    }\n    setDraggedItem(null);\n  };\n\n  // Sort and organize table data\n  const sortRows = rows => {\n    const unlinkedAttributes = rows.filter(row => !row.parentCluster && !row.parentObject);\n    const linkedRows = rows.filter(row => row.parentCluster || row.parentObject);\n    const sortedLinkedRows = [...linkedRows].sort((a, b) => {\n      var _a$parentCluster, _b$parentCluster, _a$parentObject, _b$parentObject;\n      const clusterA = ((_a$parentCluster = a.parentCluster) === null || _a$parentCluster === void 0 ? void 0 : _a$parentCluster.label) || \"Unlinked\";\n      const clusterB = ((_b$parentCluster = b.parentCluster) === null || _b$parentCluster === void 0 ? void 0 : _b$parentCluster.label) || \"Unlinked\";\n      const objectA = ((_a$parentObject = a.parentObject) === null || _a$parentObject === void 0 ? void 0 : _a$parentObject.label) || \"Unlinked\";\n      const objectB = ((_b$parentObject = b.parentObject) === null || _b$parentObject === void 0 ? void 0 : _b$parentObject.label) || \"Unlinked\";\n      const attributeA = a.attr.label;\n      const attributeB = b.attr.label;\n      const compareClusters = clusterA.localeCompare(clusterB);\n      if (compareClusters !== 0) return compareClusters;\n      const compareObjects = objectA.localeCompare(objectB);\n      if (compareObjects !== 0) return compareObjects;\n      return attributeA.localeCompare(attributeB);\n    });\n    return [...unlinkedAttributes, ...sortedLinkedRows];\n  };\n\n  // Calculate counts for clusters and objects\n  const calculateCounts = graphData => {\n    const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n    const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n    const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n    const clusterCounts = {};\n    const objectCounts = {};\n    clusters.forEach(cluster => {\n      const linkedObjects = objects.filter(obj => graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key));\n      clusterCounts[cluster.key] = linkedObjects.length;\n    });\n    objects.forEach(obj => {\n      const linkedAttributes = attributes.filter(attr => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n      objectCounts[obj.key] = linkedAttributes.length;\n    });\n    return {\n      clusterCounts,\n      objectCounts\n    };\n  };\n\n  // Process graph data into table format\n  useEffect(() => {\n    if (graphData) {\n      const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n      const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n      const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n      const rows = attributes.map(attr => {\n        const parentObject = objects.find(obj => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n        const parentCluster = parentObject ? clusters.find(sys => graphData.linkDataArray.some(link => link.from === sys.key && link.to === parentObject.key)) : null;\n        return {\n          attr,\n          parentObject,\n          parentCluster\n        };\n      });\n      const sorted = sortRows(rows);\n      setSortedRows(sorted);\n\n      // Calculate row spans for Cluster and Object columns\n      const spans = {};\n      let prevCluster = null;\n      let prevObject = null;\n      let clusterSpan = 1;\n      let objectSpan = 1;\n      sorted.forEach((row, index) => {\n        var _row$parentCluster, _row$parentObject;\n        const currentCluster = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) || \"Unlinked\";\n        const currentObject = ((_row$parentObject = row.parentObject) === null || _row$parentObject === void 0 ? void 0 : _row$parentObject.label) || \"Unlinked\";\n        if (currentCluster === prevCluster) {\n          clusterSpan++;\n          spans[index] = {\n            ...spans[index],\n            clusterSpan: 0\n          };\n        } else {\n          spans[index - clusterSpan] = {\n            ...spans[index - clusterSpan],\n            clusterSpan\n          };\n          clusterSpan = 1;\n        }\n        if (currentObject === prevObject) {\n          objectSpan++;\n          spans[index] = {\n            ...spans[index],\n            objectSpan: 0\n          };\n        } else {\n          spans[index - objectSpan] = {\n            ...spans[index - objectSpan],\n            objectSpan\n          };\n          objectSpan = 1;\n        }\n        prevCluster = currentCluster;\n        prevObject = currentObject;\n      });\n\n      // Handle the last group\n      spans[sorted.length - clusterSpan] = {\n        ...spans[sorted.length - clusterSpan],\n        clusterSpan\n      };\n      spans[sorted.length - objectSpan] = {\n        ...spans[sorted.length - objectSpan],\n        objectSpan\n      };\n      setRowSpans(spans);\n\n      // Calculate counts for clusters and objects\n      const {\n        clusterCounts,\n        objectCounts\n      } = calculateCounts(graphData);\n      setClusterCounts(clusterCounts);\n      setObjectCounts(objectCounts);\n    }\n  }, [graphData]);\n\n  // Input and popup handling\n  const handleClickInput = (key, currentLabel, currentName) => {\n    openPopup(key, currentLabel, currentName);\n    if (inputRefs.current[key] && inputRefs.current[key].current) {\n      inputRefs.current[key].current.focus();\n    }\n  };\n  const setInputRef = key => {\n    return inputRefs.current[key] ? inputRefs.current[key] : inputRefs.current[key] = /*#__PURE__*/React.createRef();\n  };\n\n  // Add new attribute\n  const handleAddAttribute = () => {\n    setConfirmPopup({\n      isOpen: true\n    });\n  };\n  const confirmAddAttribute = async () => {\n    setConfirmPopup({\n      isOpen: false\n    });\n    const newAttributeKey = uuidv4();\n    const newAttribute = {\n      key: newAttributeKey,\n      category: \"attribute\",\n      label: \"New Attribute\",\n      hoverLabel: \"New Attribute\"\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8000/graph-data/\", {\n        nodeDataArray: [newAttribute, ...graphData.nodeDataArray],\n        linkDataArray: [...graphData.linkDataArray]\n      });\n      if (response.data.message === \"Graph data updated successfully\") {\n        setGraphData(prev => ({\n          ...prev,\n          nodeDataArray: [newAttribute, ...prev.nodeDataArray]\n        }));\n        await fetchGraphData();\n      }\n    } catch (error) {\n      console.error(\"Error adding new Attribute:\", error);\n      let errorMessage = \"Error adding new Attribute.\";\n      if (error.response && error.response.data) {\n        errorMessage += ` ${error.response.data.detail || ''}`;\n      }\n      alert(errorMessage);\n    }\n  };\n  const cancelAddAttribute = () => {\n    setConfirmPopup({\n      isOpen: false\n    });\n  };\n\n  // Get cell background color based on category\n  const getCellColor = (category, isHovered) => {\n    if (isHovered) {\n      switch (category) {\n        case \"system\":\n          return \"#dbeafe\";\n        // Light blue\n        case \"object\":\n          return \"#dcfce7\";\n        // Light green\n        case \"attribute\":\n          return \"#fce7f3\";\n        // Light pink\n        default:\n          return \"#f8fafc\";\n        // Light gray\n      }\n    }\n    return \"transparent\";\n  };\n\n  // Get cell border style\n  const getCellBorderStyle = (rowIndex, isFirst = false, isLast = false) => {\n    return {\n      borderBottom: \"1px solid #e2e8f0\",\n      borderRight: \"1px solid #e2e8f0\",\n      borderLeft: isFirst ? \"1px solid #e2e8f0\" : \"none\",\n      borderTop: rowIndex === 0 ? \"1px solid #e2e8f0\" : \"none\"\n    };\n  };\n  if (!graphData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"200px\",\n      color: \"#64748b\",\n      fontSize: \"16px\",\n      fontStyle: \"italic\",\n      border: \"1px dashed #cbd5e1\",\n      borderRadius: \"8px\",\n      backgroundColor: \"#f8fafc\"\n    },\n    children: \"Table will be displayed here after uploading a file.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }, this);\n\n  // Utility function to display text with truncation\n  const getDisplayText = text => {\n    if (!text) return \"\";\n    const lines = text.split('\\n');\n    const firstTwoLines = lines.slice(0, 2).join('\\n');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block',\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden',\n          whiteSpace: 'pre-line',\n          maxWidth: \"calc(100% - 20px)\",\n          marginRight: \"2px\",\n          textOverflow: \"ellipsis\",\n          display: \"-webkit-box\",\n          WebkitLineClamp: 2,\n          WebkitBoxOrient: \"vertical\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: firstTwoLines.substring(0, 100)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), text && text.length > 100 && /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        style: {\n          position: 'absolute',\n          bottom: '2px',\n          right: '2px',\n          cursor: \"pointer\",\n          color: \"#64748b\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"11\",\n          cy: \"11\",\n          r: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"21\",\n          y1: \"21\",\n          x2: \"16.65\",\n          y2: \"16.65\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"11\",\n          y1: \"8\",\n          x2: \"11\",\n          y2: \"14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"11\",\n          x2: \"14\",\n          y2: \"11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [confirmPopup.isOpen && /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n      onConfirm: confirmAddAttribute,\n      onCancel: cancelAddAttribute,\n      title: \"Add New Attribute\",\n      message: \"An unlinked attribute will be created at the top of the table. Would you like to proceed?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\n        borderRadius: \"8px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          fontSize: \"0.875rem\",\n          backgroundColor: \"white\",\n          borderRadius: \"8px\",\n          overflow: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: \"#f1f5f9\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px 8px\",\n                textAlign: \"left\",\n                borderBottom: \"2px solid #e2e8f0\",\n                color: \"#1e293b\",\n                fontWeight: \"600\",\n                width: \"30%\"\n              },\n              children: \"Cluster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px 8px\",\n                textAlign: \"left\",\n                borderBottom: \"2px solid #e2e8f0\",\n                color: \"#1e293b\",\n                fontWeight: \"600\",\n                width: \"30%\"\n              },\n              children: \"Object\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px 8px\",\n                textAlign: \"left\",\n                borderBottom: \"2px solid #e2e8f0\",\n                color: \"#1e293b\",\n                fontWeight: \"600\",\n                width: \"40%\",\n                position: \"relative\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Attribute\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddAttribute,\n                  title: \"Add new attribute\",\n                  style: {\n                    width: \"24px\",\n                    height: \"24px\",\n                    borderRadius: \"50%\",\n                    backgroundColor: \"#1e40af\",\n                    color: \"white\",\n                    border: \"none\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    fontSize: \"1.1rem\",\n                    lineHeight: 1,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\"\n                  },\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            row: row,\n            index: index,\n            rowSpans: rowSpans,\n            clusterCounts: clusterCounts,\n            objectCounts: objectCounts,\n            hoveredRow: hoveredRow,\n            hoveredCell: hoveredCell,\n            setHoveredRow: setHoveredRow,\n            setHoveredCell: setHoveredCell,\n            handleDragStart: handleDragStart,\n            handleDragEnd: handleDragEnd,\n            handleDragOver: handleDragOver,\n            handleDragLeave: handleDragLeave,\n            handleDrop: handleDrop,\n            openPopup: openPopup,\n            handleClickInput: handleClickInput,\n            handleLabelChange: handleLabelChange,\n            setInputRef: setInputRef,\n            getDisplayText: getDisplayText,\n            getCellColor: getCellColor,\n            getCellBorderStyle: getCellBorderStyle\n          }, row.attr.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                    .draggable-item {\n                        transition: transform 0.2s ease, box-shadow 0.2s ease;\n                    }\n                    \n                    .draggable-item:hover {\n                        opacity: 0.95;\n                    }\n                    \n                    .draggable-item.dragging {\n                        cursor: grabbing;\n                        transform: scale(0.98);\n                        opacity: 0.8;\n                    }\n                    \n                    .drop-target {\n                        background-color: rgba(59, 130, 246, 0.1) !important;\n                        box-shadow: inset 0 0 0 2px #3b82f6;\n                        transition: all 0.2s ease;\n                    }\n                    \n                    @keyframes pulse {\n                        0% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); }\n                        70% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }\n                        100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0); }\n                    }\n                `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 9\n  }, this);\n};\n_s(TableVisualization, \"8zapvHcu0WaSZktRymSs4aBq6Tw=\");\n_c = TableVisualization;\nexport default TableVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","v4","uuidv4","TableRow","ConfirmationPopup","jsxDEV","_jsxDEV","TableVisualization","graphData","handleLabelChange","openPopup","setGraphData","fetchGraphData","_s","draggedItem","setDraggedItem","sortedRows","setSortedRows","rowSpans","setRowSpans","clusterCounts","setClusterCounts","objectCounts","setObjectCounts","confirmPopup","setConfirmPopup","isOpen","hoveredRow","setHoveredRow","hoveredCell","setHoveredCell","inputRefs","handleDragStart","event","key","category","dataTransfer","setData","target","classList","add","handleDragEnd","remove","handleDragOver","preventDefault","currentTarget","handleDragLeave","handleDrop","targetKey","targetCategory","sourceKey","getData","sourceCategory","prev","updatedNodeDataArray","nodeDataArray","updatedLinkDataArray","linkDataArray","sourceNode","find","node","targetNode","filter","link","to","push","from","linkedObject","some","objects","objectLinks","obj","length","parentObject","l","response","post","source","sourceType","targetType","data","message","error","console","errorMessage","detail","alert","sortRows","rows","unlinkedAttributes","row","parentCluster","linkedRows","sortedLinkedRows","sort","a","b","_a$parentCluster","_b$parentCluster","_a$parentObject","_b$parentObject","clusterA","label","clusterB","objectA","objectB","attributeA","attr","attributeB","compareClusters","localeCompare","compareObjects","calculateCounts","clusters","attributes","forEach","cluster","linkedObjects","linkedAttributes","map","sys","sorted","spans","prevCluster","prevObject","clusterSpan","objectSpan","index","_row$parentCluster","_row$parentObject","currentCluster","currentObject","handleClickInput","currentLabel","currentName","current","focus","setInputRef","createRef","handleAddAttribute","confirmAddAttribute","newAttributeKey","newAttribute","hoverLabel","cancelAddAttribute","getCellColor","isHovered","getCellBorderStyle","rowIndex","isFirst","isLast","borderBottom","borderRight","borderLeft","borderTop","style","display","alignItems","justifyContent","height","color","fontSize","fontStyle","border","borderRadius","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","getDisplayText","text","lines","split","firstTwoLines","slice","join","position","width","overflow","whiteSpace","maxWidth","marginRight","textOverflow","WebkitLineClamp","WebkitBoxOrient","dangerouslySetInnerHTML","__html","substring","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","bottom","right","cursor","cx","cy","r","x1","y1","x2","y2","className","onConfirm","onCancel","title","overflowX","boxShadow","borderCollapse","padding","textAlign","fontWeight","onClick","lineHeight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TableRow from './TableRow';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\n\r\nconst TableVisualization = ({ graphData, handleLabelChange, openPopup, setGraphData, fetchGraphData }) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const [sortedRows, setSortedRows] = useState([]);\r\n    const [rowSpans, setRowSpans] = useState({});\r\n    const [clusterCounts, setClusterCounts] = useState({});\r\n    const [objectCounts, setObjectCounts] = useState({});\r\n    const [confirmPopup, setConfirmPopup] = useState({ isOpen: false });\r\n    const [hoveredRow, setHoveredRow] = useState(null);\r\n    const [hoveredCell, setHoveredCell] = useState(null);\r\n    const inputRefs = useRef({});\r\n\r\n    // Handle drag and drop operations\r\n    const handleDragStart = (event, key, category) => {\r\n        event.dataTransfer.setData(\"text/plain\", key);\r\n        event.dataTransfer.setData(\"category\", category);\r\n        setDraggedItem(key);\r\n        \r\n        // Add drag styling\r\n        if (event.target.classList) {\r\n            event.target.classList.add(\"dragging\");\r\n        }\r\n    };\r\n\r\n    const handleDragEnd = (event) => {\r\n        // Remove drag styling\r\n        if (event.target.classList) {\r\n            event.target.classList.remove(\"dragging\");\r\n        }\r\n        setDraggedItem(null);\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n        // Add drop target styling\r\n        if (event.currentTarget.classList) {\r\n            event.currentTarget.classList.add(\"drop-target\");\r\n        }\r\n    };\r\n\r\n    const handleDragLeave = (event) => {\r\n        // Remove drop target styling\r\n        if (event.currentTarget.classList) {\r\n            event.currentTarget.classList.remove(\"drop-target\");\r\n        }\r\n    };\r\n\r\n    const handleDrop = async (event, targetKey, targetCategory) => {\r\n        event.preventDefault();\r\n        \r\n        // Remove drop target styling\r\n        if (event.currentTarget.classList) {\r\n            event.currentTarget.classList.remove(\"drop-target\");\r\n        }\r\n        \r\n        const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n        const sourceCategory = event.dataTransfer.getData(\"category\");\r\n\r\n        if (sourceKey && sourceKey !== targetKey) {\r\n            setGraphData((prev) => {\r\n                let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                let updatedLinkDataArray = [...prev.linkDataArray];\r\n\r\n                // Find the source node and target node\r\n                const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\r\n                \r\n                if (sourceNode && targetNode) {\r\n                    // Remove all existing links where the source node is the to\r\n                    updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                    if (sourceNode.category === \"attribute\") {\r\n                        // If target is object, create new link\r\n                        if (targetNode.category === \"object\") {\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                        // if target is system, check if object exists then create new links\r\n                        else if (targetNode.category === \"system\") {\r\n                            const linkedObject = updatedNodeDataArray.find(node =>\r\n                                prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey)\r\n                            );\r\n                            if (linkedObject) {\r\n                                updatedLinkDataArray = updatedLinkDataArray.filter(link => \r\n                                    link.from !== linkedObject.key && link.to !== sourceKey\r\n                                );\r\n                            }\r\n\r\n                            const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\r\n                            const objectLinks = updatedLinkDataArray.filter(link => \r\n                                link.to !== sourceKey && objects.some(obj => obj.key === link.from)\r\n                            );\r\n                            \r\n                            if (objectLinks.length > 0) {\r\n                                const parentObject = objects.find(obj => \r\n                                    objectLinks.some(l => l.from === obj.key)\r\n                                );\r\n                                if (parentObject) {\r\n                                    updatedLinkDataArray.push({ from: targetKey, to: parentObject.key });\r\n                                    updatedLinkDataArray.push({ from: parentObject.key, to: sourceKey });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    // If source is object\r\n                    else if (sourceNode.category === \"object\") {\r\n                        if (targetNode.category === \"system\") {\r\n                            updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    nodeDataArray: updatedNodeDataArray,\r\n                    linkDataArray: updatedLinkDataArray,\r\n                };\r\n            });\r\n\r\n            // Send drag-drop changes to backend\r\n            try {\r\n                const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n                \r\n                const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n                    source: sourceKey,\r\n                    target: targetKey,\r\n                    sourceType: sourceNode.category,\r\n                    targetType: targetNode.category\r\n                });\r\n                \r\n                if (response.data.message === \"Drag-and-drop operation completed successfully\") {\r\n                    await fetchGraphData();\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error applying drag and drop:\", error);\r\n                let errorMessage = \"Error applying drag and drop.\";\r\n                if (error.response && error.response.data) {\r\n                    errorMessage += ` ${error.response.data.detail || ''}`;\r\n                }\r\n                alert(errorMessage);\r\n            }\r\n        }\r\n        \r\n        setDraggedItem(null);\r\n    };\r\n\r\n    // Sort and organize table data\r\n    const sortRows = (rows) => {\r\n        const unlinkedAttributes = rows.filter(row => !row.parentCluster && !row.parentObject);\r\n        const linkedRows = rows.filter(row => row.parentCluster || row.parentObject);\r\n\r\n        const sortedLinkedRows = [...linkedRows].sort((a, b) => {\r\n            const clusterA = a.parentCluster?.label || \"Unlinked\";\r\n            const clusterB = b.parentCluster?.label || \"Unlinked\";\r\n            const objectA = a.parentObject?.label || \"Unlinked\";\r\n            const objectB = b.parentObject?.label || \"Unlinked\";\r\n            const attributeA = a.attr.label;\r\n            const attributeB = b.attr.label;\r\n\r\n            const compareClusters = clusterA.localeCompare(clusterB);\r\n            if (compareClusters !== 0) return compareClusters;\r\n\r\n            const compareObjects = objectA.localeCompare(objectB);\r\n            if (compareObjects !== 0) return compareObjects;\r\n\r\n            return attributeA.localeCompare(attributeB);\r\n        });\r\n        \r\n        return [...unlinkedAttributes, ...sortedLinkedRows];\r\n    };\r\n\r\n    // Calculate counts for clusters and objects\r\n    const calculateCounts = (graphData) => {\r\n        const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n        const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n        const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n        const clusterCounts = {};\r\n        const objectCounts = {};\r\n\r\n        clusters.forEach(cluster => {\r\n            const linkedObjects = objects.filter(obj =>\r\n                graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key)\r\n            );\r\n            clusterCounts[cluster.key] = linkedObjects.length;\r\n        });\r\n\r\n        objects.forEach(obj => {\r\n            const linkedAttributes = attributes.filter(attr =>\r\n                graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key)\r\n            );\r\n            objectCounts[obj.key] = linkedAttributes.length;\r\n        });\r\n\r\n        return { clusterCounts, objectCounts };\r\n    };\r\n\r\n    // Process graph data into table format\r\n    useEffect(() => {\r\n        if (graphData) {\r\n            const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n            const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n            const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n            const rows = attributes.map((attr) => {\r\n                const parentObject = objects.find((obj) =>\r\n                    graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n                );\r\n\r\n                const parentCluster = parentObject\r\n                    ? clusters.find((sys) =>\r\n                        graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n                    )\r\n                    : null;\r\n\r\n                return { attr, parentObject, parentCluster };\r\n            });\r\n\r\n            const sorted = sortRows(rows);\r\n            setSortedRows(sorted);\r\n\r\n            // Calculate row spans for Cluster and Object columns\r\n            const spans = {};\r\n            let prevCluster = null;\r\n            let prevObject = null;\r\n            let clusterSpan = 1;\r\n            let objectSpan = 1;\r\n\r\n            sorted.forEach((row, index) => {\r\n                const currentCluster = row.parentCluster?.label || \"Unlinked\";\r\n                const currentObject = row.parentObject?.label || \"Unlinked\";\r\n\r\n                if (currentCluster === prevCluster) {\r\n                    clusterSpan++;\r\n                    spans[index] = { ...spans[index], clusterSpan: 0 };\r\n                } else {\r\n                    spans[index - clusterSpan] = { ...spans[index - clusterSpan], clusterSpan };\r\n                    clusterSpan = 1;\r\n                }\r\n\r\n                if (currentObject === prevObject) {\r\n                    objectSpan++;\r\n                    spans[index] = { ...spans[index], objectSpan: 0 };\r\n                } else {\r\n                    spans[index - objectSpan] = { ...spans[index - objectSpan], objectSpan };\r\n                    objectSpan = 1;\r\n                }\r\n\r\n                prevCluster = currentCluster;\r\n                prevObject = currentObject;\r\n            });\r\n\r\n            // Handle the last group\r\n            spans[sorted.length - clusterSpan] = { ...spans[sorted.length - clusterSpan], clusterSpan };\r\n            spans[sorted.length - objectSpan] = { ...spans[sorted.length - objectSpan], objectSpan };\r\n\r\n            setRowSpans(spans);\r\n\r\n            // Calculate counts for clusters and objects\r\n            const { clusterCounts, objectCounts } = calculateCounts(graphData);\r\n            setClusterCounts(clusterCounts);\r\n            setObjectCounts(objectCounts);\r\n        }\r\n    }, [graphData]);\r\n\r\n    // Input and popup handling\r\n    const handleClickInput = (key, currentLabel, currentName) => {\r\n        openPopup(key, currentLabel, currentName);\r\n        if (inputRefs.current[key] && inputRefs.current[key].current) {\r\n            inputRefs.current[key].current.focus();\r\n        }\r\n    };\r\n\r\n    const setInputRef = (key) => {\r\n        return inputRefs.current[key] ? inputRefs.current[key] : (inputRefs.current[key] = React.createRef());\r\n    };\r\n\r\n    // Add new attribute\r\n    const handleAddAttribute = () => {\r\n        setConfirmPopup({ isOpen: true });\r\n    };\r\n\r\n    const confirmAddAttribute = async () => {\r\n        setConfirmPopup({ isOpen: false });\r\n        const newAttributeKey = uuidv4();\r\n        const newAttribute = {\r\n            key: newAttributeKey,\r\n            category: \"attribute\",\r\n            label: \"New Attribute\",\r\n            hoverLabel: \"New Attribute\",\r\n        };\r\n        \r\n        try {\r\n            const response = await axios.post(\"http://localhost:8000/graph-data/\", {\r\n                nodeDataArray: [newAttribute, ...graphData.nodeDataArray],\r\n                linkDataArray: [...graphData.linkDataArray]\r\n            });\r\n            \r\n            if (response.data.message === \"Graph data updated successfully\") {\r\n                setGraphData((prev) => ({\r\n                    ...prev,\r\n                    nodeDataArray: [newAttribute, ...prev.nodeDataArray],\r\n                }));\r\n                await fetchGraphData();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding new Attribute:\", error);\r\n            let errorMessage = \"Error adding new Attribute.\";\r\n            if (error.response && error.response.data) {\r\n                errorMessage += ` ${error.response.data.detail || ''}`;\r\n            }\r\n            alert(errorMessage);\r\n        }\r\n    };\r\n    \r\n    const cancelAddAttribute = () => {\r\n        setConfirmPopup({ isOpen: false });\r\n    };\r\n\r\n    // Get cell background color based on category\r\n    const getCellColor = (category, isHovered) => {\r\n        if (isHovered) {\r\n            switch (category) {\r\n                case \"system\": return \"#dbeafe\"; // Light blue\r\n                case \"object\": return \"#dcfce7\"; // Light green\r\n                case \"attribute\": return \"#fce7f3\"; // Light pink\r\n                default: return \"#f8fafc\"; // Light gray\r\n            }\r\n        }\r\n        \r\n        return \"transparent\";\r\n    };\r\n\r\n    // Get cell border style\r\n    const getCellBorderStyle = (rowIndex, isFirst = false, isLast = false) => {\r\n        return {\r\n            borderBottom: \"1px solid #e2e8f0\",\r\n            borderRight: \"1px solid #e2e8f0\", \r\n            borderLeft: isFirst ? \"1px solid #e2e8f0\" : \"none\",\r\n            borderTop: rowIndex === 0 ? \"1px solid #e2e8f0\" : \"none\"\r\n        };\r\n    };\r\n\r\n    if (!graphData) return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"200px\",\r\n            color: \"#64748b\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"italic\",\r\n            border: \"1px dashed #cbd5e1\",\r\n            borderRadius: \"8px\",\r\n            backgroundColor: \"#f8fafc\"\r\n        }}>\r\n            Table will be displayed here after uploading a file.\r\n        </div>\r\n    );\r\n\r\n    // Utility function to display text with truncation\r\n    const getDisplayText = (text) => {\r\n        if (!text) return \"\";\r\n        const lines = text.split('\\n');\r\n        const firstTwoLines = lines.slice(0, 2).join('\\n');\r\n        \r\n        return (\r\n            <div style={{ position: 'relative', display: 'inline-block', width: \"100%\" }}>\r\n                <div \r\n                    style={{ \r\n                        overflow: 'hidden', \r\n                        whiteSpace: 'pre-line', \r\n                        maxWidth: \"calc(100% - 20px)\", \r\n                        marginRight: \"2px\",\r\n                        textOverflow: \"ellipsis\",\r\n                        display: \"-webkit-box\",\r\n                        WebkitLineClamp: 2,\r\n                        WebkitBoxOrient: \"vertical\"\r\n                    }}\r\n                    dangerouslySetInnerHTML={{ __html: firstTwoLines.substring(0, 100) }}\r\n                />\r\n                {text && text.length > 100 && (\r\n                    <svg \r\n                        xmlns=\"http://www.w3.org/2000/svg\" \r\n                        width=\"16\" \r\n                        height=\"16\" \r\n                        viewBox=\"0 0 24 24\" \r\n                        fill=\"none\" \r\n                        stroke=\"currentColor\" \r\n                        strokeWidth=\"2\" \r\n                        strokeLinecap=\"round\" \r\n                        strokeLinejoin=\"round\"\r\n                        style={{ \r\n                            position: 'absolute', \r\n                            bottom: '2px', \r\n                            right: '2px', \r\n                            cursor: \"pointer\",\r\n                            color: \"#64748b\"\r\n                        }}\r\n                    >\r\n                        <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n                        <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n                        <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\r\n                        <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\r\n                    </svg>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n            {/* Confirmation Popup */}\r\n            {confirmPopup.isOpen && (\r\n                <ConfirmationPopup \r\n                    onConfirm={confirmAddAttribute}\r\n                    onCancel={cancelAddAttribute}\r\n                    title=\"Add New Attribute\"\r\n                    message=\"An unlinked attribute will be created at the top of the table. Would you like to proceed?\"\r\n                />\r\n            )}\r\n\r\n            {/* Table */}\r\n            <div style={{ overflowX: \"auto\", boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\", borderRadius: \"8px\" }}>\r\n                <table style={{ \r\n                    width: \"100%\", \r\n                    borderCollapse: \"collapse\",\r\n                    fontSize: \"0.875rem\",\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: \"8px\",\r\n                    overflow: \"hidden\"\r\n                }}>\r\n                    <thead>\r\n                        <tr style={{ backgroundColor: \"#f1f5f9\" }}>\r\n                            <th style={{ \r\n                                padding: \"12px 8px\", \r\n                                textAlign: \"left\", \r\n                                borderBottom: \"2px solid #e2e8f0\", \r\n                                color: \"#1e293b\",\r\n                                fontWeight: \"600\",\r\n                                width: \"30%\"\r\n                            }}>\r\n                                Cluster\r\n                            </th>\r\n                            <th style={{ \r\n                                padding: \"12px 8px\", \r\n                                textAlign: \"left\", \r\n                                borderBottom: \"2px solid #e2e8f0\", \r\n                                color: \"#1e293b\",\r\n                                fontWeight: \"600\",\r\n                                width: \"30%\"\r\n                            }}>\r\n                                Object\r\n                            </th>\r\n                            <th style={{ \r\n                                padding: \"12px 8px\", \r\n                                textAlign: \"left\", \r\n                                borderBottom: \"2px solid #e2e8f0\", \r\n                                color: \"#1e293b\",\r\n                                fontWeight: \"600\",\r\n                                width: \"40%\",\r\n                                position: \"relative\"\r\n                            }}>\r\n                                <div style={{ \r\n                                    display: \"flex\", \r\n                                    justifyContent: \"space-between\", \r\n                                    alignItems: \"center\" \r\n                                }}>\r\n                                    <span>Attribute</span>\r\n                                    <button \r\n                                        onClick={handleAddAttribute} \r\n                                        title=\"Add new attribute\"\r\n                                        style={{\r\n                                            width: \"24px\",\r\n                                            height: \"24px\",\r\n                                            borderRadius: \"50%\",\r\n                                            backgroundColor: \"#1e40af\",\r\n                                            color: \"white\",\r\n                                            border: \"none\",\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            fontSize: \"1.1rem\",\r\n                                            lineHeight: 1,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\"\r\n                                        }}\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sortedRows.map((row, index) => (\r\n                            <TableRow \r\n                                key={row.attr.key}\r\n                                row={row}\r\n                                index={index}\r\n                                rowSpans={rowSpans}\r\n                                clusterCounts={clusterCounts}\r\n                                objectCounts={objectCounts}\r\n                                hoveredRow={hoveredRow}\r\n                                hoveredCell={hoveredCell}\r\n                                setHoveredRow={setHoveredRow}\r\n                                setHoveredCell={setHoveredCell}\r\n                                handleDragStart={handleDragStart}\r\n                                handleDragEnd={handleDragEnd}\r\n                                handleDragOver={handleDragOver}\r\n                                handleDragLeave={handleDragLeave}\r\n                                handleDrop={handleDrop}\r\n                                openPopup={openPopup}\r\n                                handleClickInput={handleClickInput}\r\n                                handleLabelChange={handleLabelChange}\r\n                                setInputRef={setInputRef}\r\n                                getDisplayText={getDisplayText}\r\n                                getCellColor={getCellColor}\r\n                                getCellBorderStyle={getCellBorderStyle}\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* CSS Styles for drag and drop */}\r\n            <style>\r\n                {`\r\n                    .draggable-item {\r\n                        transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n                    }\r\n                    \r\n                    .draggable-item:hover {\r\n                        opacity: 0.95;\r\n                    }\r\n                    \r\n                    .draggable-item.dragging {\r\n                        cursor: grabbing;\r\n                        transform: scale(0.98);\r\n                        opacity: 0.8;\r\n                    }\r\n                    \r\n                    .drop-target {\r\n                        background-color: rgba(59, 130, 246, 0.1) !important;\r\n                        box-shadow: inset 0 0 0 2px #3b82f6;\r\n                        transition: all 0.2s ease;\r\n                    }\r\n                    \r\n                    @keyframes pulse {\r\n                        0% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); }\r\n                        70% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }\r\n                        100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0); }\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}