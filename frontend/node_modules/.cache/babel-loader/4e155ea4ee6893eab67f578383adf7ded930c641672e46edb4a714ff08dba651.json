{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport useAppState from './useAppState';\nconst useFileUpload = (setGraphData, showNotification) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    startAIProcessing\n  } = useAppState();\n  const handleFileChange = event => {\n    console.log(\"File selected:\", event.target.files[0]);\n    setFile(event.target.files[0]);\n  };\n\n  // Modified handleFileUpload to skip confirmation dialog\n  const handleFileUpload = async (notification = null) => {\n    console.log(\"handleFileUpload called, file:\", file);\n    if (!file) {\n      console.log(\"No file selected\");\n      if (notification) {\n        notification(\"Please select a file before uploading.\", \"error\");\n      }\n      return;\n    }\n    console.log(\"Directly uploading file...\");\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    console.log(\"FormData created with file:\", file.name);\n    try {\n      console.log(\"Attempting to upload file to server...\");\n      // First upload the file\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"File upload response:\", response.data);\n\n      // Then start AI processing\n      const aiProcess = startAIProcessing(\"Analyzing file structure...\");\n\n      // Simulate AI progress in stages\n      let progress = 0;\n      const interval = setInterval(() => {\n        progress += 5;\n        console.log(\"AI progress:\", progress);\n\n        // Update message at certain thresholds\n        if (progress === 20) {\n          aiProcess.updateProgress(progress, \"Identifying data entities and relationships...\");\n        } else if (progress === 40) {\n          aiProcess.updateProgress(progress, \"Processing attribute characteristics...\");\n        } else if (progress === 60) {\n          aiProcess.updateProgress(progress, \"Analyzing semantic connections...\");\n        } else if (progress === 80) {\n          aiProcess.updateProgress(progress, \"Finalizing data structure...\");\n        }\n        aiProcess.updateProgress(progress);\n        if (progress >= 100) {\n          clearInterval(interval);\n          aiProcess.complete();\n\n          // Fetch graph data after AI processing completes\n          fetchGraphData();\n          if (notification) {\n            notification(response.data.message, \"success\");\n          }\n        }\n      }, 100);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      console.error(\"Error details:\", error.response ? error.response.data : \"No response data\");\n      let errorMessage = \"Error uploading file.\";\n      if (error.response && error.response.data) {\n        errorMessage += ` ${error.response.data.detail || error.response.data.message || JSON.stringify(error.response.data)}`;\n      }\n      if (notification) {\n        notification(errorMessage, \"error\");\n      }\n      setIsLoading(false);\n    }\n  };\n  const fetchGraphData = async (notification = null) => {\n    console.log(\"Fetching graph data...\");\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\n      console.log(\"Graph data response:\", response.data);\n      setGraphData(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching graph data:\", error);\n      let errorMessage = \"Error fetching graph data.\";\n      if (error.response && error.response.data) {\n        errorMessage += ` ${error.response.data.detail || ''}`;\n      }\n      if (notification) {\n        notification(errorMessage, \"error\");\n      }\n      setIsLoading(false);\n    }\n  };\n  return {\n    file,\n    isLoading,\n    handleFileChange,\n    handleFileUpload,\n    fetchGraphData\n  };\n};\n_s(useFileUpload, \"6JNo98ue6GuvItYTW6zFElVeJHs=\", false, function () {\n  return [useAppState];\n});\nexport default useFileUpload;","map":{"version":3,"names":["useState","axios","useAppState","useFileUpload","setGraphData","showNotification","_s","file","setFile","isLoading","setIsLoading","startAIProcessing","handleFileChange","event","console","log","target","files","handleFileUpload","notification","formData","FormData","append","name","response","post","headers","data","aiProcess","progress","interval","setInterval","updateProgress","clearInterval","complete","fetchGraphData","message","error","errorMessage","detail","JSON","stringify","get"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/hooks/useFileUpload.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport useAppState from './useAppState';\r\n\r\nconst useFileUpload = (setGraphData, showNotification) => {\r\n  const [file, setFile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const { startAIProcessing } = useAppState();\r\n\r\n  const handleFileChange = (event) => {\r\n    console.log(\"File selected:\", event.target.files[0]);\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  // Modified handleFileUpload to skip confirmation dialog\r\n  const handleFileUpload = async (notification = null) => {\r\n    console.log(\"handleFileUpload called, file:\", file);\r\n    \r\n    if (!file) {\r\n      console.log(\"No file selected\");\r\n      if (notification) {\r\n        notification(\"Please select a file before uploading.\", \"error\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    console.log(\"Directly uploading file...\");\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    \r\n    console.log(\"FormData created with file:\", file.name);\r\n    \r\n    try {\r\n      console.log(\"Attempting to upload file to server...\");\r\n      // First upload the file\r\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      \r\n      console.log(\"File upload response:\", response.data);\r\n      \r\n      // Then start AI processing\r\n      const aiProcess = startAIProcessing(\"Analyzing file structure...\");\r\n      \r\n      // Simulate AI progress in stages\r\n      let progress = 0;\r\n      const interval = setInterval(() => {\r\n        progress += 5;\r\n        console.log(\"AI progress:\", progress);\r\n        \r\n        // Update message at certain thresholds\r\n        if (progress === 20) {\r\n          aiProcess.updateProgress(progress, \"Identifying data entities and relationships...\");\r\n        } else if (progress === 40) {\r\n          aiProcess.updateProgress(progress, \"Processing attribute characteristics...\");\r\n        } else if (progress === 60) {\r\n          aiProcess.updateProgress(progress, \"Analyzing semantic connections...\");\r\n        } else if (progress === 80) {\r\n          aiProcess.updateProgress(progress, \"Finalizing data structure...\");\r\n        }\r\n        \r\n        aiProcess.updateProgress(progress);\r\n        \r\n        if (progress >= 100) {\r\n          clearInterval(interval);\r\n          aiProcess.complete();\r\n          \r\n          // Fetch graph data after AI processing completes\r\n          fetchGraphData();\r\n          \r\n          if (notification) {\r\n            notification(response.data.message, \"success\");\r\n          }\r\n        }\r\n      }, 100);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      console.error(\"Error details:\", error.response ? error.response.data : \"No response data\");\r\n      let errorMessage = \"Error uploading file.\";\r\n      if (error.response && error.response.data) {\r\n        errorMessage += ` ${error.response.data.detail || error.response.data.message || JSON.stringify(error.response.data)}`;\r\n      }\r\n      if (notification) {\r\n        notification(errorMessage, \"error\");\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchGraphData = async (notification = null) => {\r\n    console.log(\"Fetching graph data...\");\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\r\n      console.log(\"Graph data response:\", response.data);\r\n      setGraphData(response.data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching graph data:\", error);\r\n      let errorMessage = \"Error fetching graph data.\";\r\n      if (error.response && error.response.data) {\r\n        errorMessage += ` ${error.response.data.detail || ''}`;\r\n      }\r\n      if (notification) {\r\n        notification(errorMessage, \"error\");\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    file,\r\n    isLoading,\r\n    handleFileChange,\r\n    handleFileUpload,\r\n    fetchGraphData\r\n  };\r\n};\r\n\r\nexport default useFileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}