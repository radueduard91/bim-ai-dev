{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TableVisualization from \"./components/TableVisualization\";\nimport GraphVisualization from \"./components/GraphVisualization\";\nimport Popup from \"./components/Popup\";\nimport FileUpload from \"./components/FileUpload\";\nimport useGraphData from \"./useGraphData\"; // NEW LINE\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [popup, setPopup] = useState({\n    isOpen: false,\n    key: null,\n    value: \"\"\n  });\n  const [dimensions, setDimensions] = useState({\n    width: \"100%\",\n    height: \"600px\"\n  });\n  const {\n    graphData,\n    fetchGraphData\n  } = useGraphData(); // NEW LINE\n\n  // const [file, setFile] = useState(null); // COMMENTED OUT\n  // const [graphData, setGraphData] = useState(null);  // COMMENTED OUT\n  // const diagramRef = useRef(); // COMMENTED OUT\n\n  // Handle file change // COMMENTED OUT\n  // const handleFileChange = (event) => { // COMMENTED OUT\n  //   setFile(event.target.files[0]); // COMMENTED OUT\n  // }; // COMMENTED OUT\n\n  // Handle file upload  // COMMENTED OUT\n  // const handleFileUpload = async () => {  // COMMENTED OUT\n  //   if (!file) { // COMMENTED OUT\n  //     alert(\"Please select a file before uploading.\");  // COMMENTED OUT\n  //     return; // COMMENTED OUT\n  //   } // COMMENTED OUT\n\n  //   const formData = new FormData(); // COMMENTED OUT\n  //   formData.append(\"file\", file);  // COMMENTED OUT\n\n  //   try { // COMMENTED OUT\n  //     const response = await axios.post(\"http://localhost:8000/upload/\", formData, { // COMMENTED OUT\n  //       headers: { \"Content-Type\": \"multipart/form-data\" }, // COMMENTED OUT\n  //     }); // COMMENTED OUT\n  //     alert(response.data.message); // COMMENTED OUT\n  //     fetchGraphData();  // COMMENTED OUT\n  //   } catch (error) { // COMMENTED OUT\n  //     console.error(\"Error uploading file:\", error); // COMMENTED OUT\n  //     alert(\"Error uploading file. Please check the console for more details.\"); // COMMENTED OUT\n  //   } // COMMENTED OUT\n  // }; // COMMENTED OUT\n\n  // const fetchGraphData = async () => {  // COMMENTED OUT\n  //   try {  // COMMENTED OUT\n  //     const response = await axios.get(\"http://localhost:8000/graph-data/\"); // COMMENTED OUT\n  //     setGraphData(response.data); // COMMENTED OUT\n  //   } catch (error) { // COMMENTED OUT\n  //     console.error(\"Error fetching graph data:\", error); // COMMENTED OUT\n  //     alert(\"Error fetching graph data. Please check the console for more details.\"); // COMMENTED OUT\n  //   } // COMMENTED OUT\n  // }; // COMMENTED OUT\n\n  const openPopup = (key, currentValue) => {\n    setPopup({\n      isOpen: true,\n      key,\n      value: currentValue\n    });\n  };\n  const closePopup = () => {\n    setPopup({\n      isOpen: false,\n      key: null,\n      value: \"\"\n    });\n  };\n  const savePopupChanges = () => {\n    const updatedValue = popup.value;\n    setGraphData(prev => ({\n      ...prev,\n      nodeDataArray: prev.nodeDataArray.map(node => node.key === popup.key ? {\n        ...node,\n        hoverLabel: updatedValue\n      } : node)\n    }));\n    closePopup();\n  };\n  const handleLabelChange = (event, key) => {\n    const updatedValue = event.target.value;\n    setGraphData(prev => ({\n      ...prev,\n      nodeDataArray: prev.nodeDataArray.map(node => node.key === key ? {\n        ...node,\n        hoverLabel: updatedValue\n      } : node)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        borderRight: \"1px solid black\",\n        padding: \"10px\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Node Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableVisualization, {\n        graphData: graphData,\n        handleLabelChange: handleLabelChange,\n        openPopup: openPopup,\n        setGraphData: setGraphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Graph Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        onFileUpload: fetchGraphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }, this), \" \", /*#__PURE__*/_jsxDEV(GraphVisualization, {\n        graphData: graphData,\n        dimensions: dimensions,\n        setDimensions: setDimensions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: popup.isOpen,\n      value: popup.value,\n      onChange: e => setPopup({\n        ...popup,\n        value: e.target.value\n      }),\n      onSave: savePopupChanges,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lhkeji1O8i/olm7dZrZol/Lgxos=\", false, function () {\n  return [useGraphData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TableVisualization","GraphVisualization","Popup","FileUpload","useGraphData","jsxDEV","_jsxDEV","App","_s","popup","setPopup","isOpen","key","value","dimensions","setDimensions","width","height","graphData","fetchGraphData","openPopup","currentValue","closePopup","savePopupChanges","updatedValue","setGraphData","prev","nodeDataArray","map","node","hoverLabel","handleLabelChange","event","target","style","display","children","borderRight","padding","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","overflow","onFileUpload","onChange","e","onSave","onClose","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TableVisualization from \"./components/TableVisualization\";\r\nimport GraphVisualization from \"./components/GraphVisualization\";\r\nimport Popup from \"./components/Popup\";\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport useGraphData from \"./useGraphData\"; // NEW LINE\r\n\r\nconst App = () => {\r\n  const [popup, setPopup] = useState({ isOpen: false, key: null, value: \"\" });\r\n  const [dimensions, setDimensions] = useState({ width: \"100%\", height: \"600px\" });\r\n  const { graphData, fetchGraphData } = useGraphData(); // NEW LINE\r\n\r\n  // const [file, setFile] = useState(null); // COMMENTED OUT\r\n  // const [graphData, setGraphData] = useState(null);  // COMMENTED OUT\r\n  // const diagramRef = useRef(); // COMMENTED OUT\r\n\r\n  // Handle file change // COMMENTED OUT\r\n  // const handleFileChange = (event) => { // COMMENTED OUT\r\n  //   setFile(event.target.files[0]); // COMMENTED OUT\r\n  // }; // COMMENTED OUT\r\n\r\n  // Handle file upload  // COMMENTED OUT\r\n  // const handleFileUpload = async () => {  // COMMENTED OUT\r\n  //   if (!file) { // COMMENTED OUT\r\n  //     alert(\"Please select a file before uploading.\");  // COMMENTED OUT\r\n  //     return; // COMMENTED OUT\r\n  //   } // COMMENTED OUT\r\n\r\n  //   const formData = new FormData(); // COMMENTED OUT\r\n  //   formData.append(\"file\", file);  // COMMENTED OUT\r\n\r\n  //   try { // COMMENTED OUT\r\n  //     const response = await axios.post(\"http://localhost:8000/upload/\", formData, { // COMMENTED OUT\r\n  //       headers: { \"Content-Type\": \"multipart/form-data\" }, // COMMENTED OUT\r\n  //     }); // COMMENTED OUT\r\n  //     alert(response.data.message); // COMMENTED OUT\r\n  //     fetchGraphData();  // COMMENTED OUT\r\n  //   } catch (error) { // COMMENTED OUT\r\n  //     console.error(\"Error uploading file:\", error); // COMMENTED OUT\r\n  //     alert(\"Error uploading file. Please check the console for more details.\"); // COMMENTED OUT\r\n  //   } // COMMENTED OUT\r\n  // }; // COMMENTED OUT\r\n\r\n  // const fetchGraphData = async () => {  // COMMENTED OUT\r\n  //   try {  // COMMENTED OUT\r\n  //     const response = await axios.get(\"http://localhost:8000/graph-data/\"); // COMMENTED OUT\r\n  //     setGraphData(response.data); // COMMENTED OUT\r\n  //   } catch (error) { // COMMENTED OUT\r\n  //     console.error(\"Error fetching graph data:\", error); // COMMENTED OUT\r\n  //     alert(\"Error fetching graph data. Please check the console for more details.\"); // COMMENTED OUT\r\n  //   } // COMMENTED OUT\r\n  // }; // COMMENTED OUT\r\n\r\n  const openPopup = (key, currentValue) => {\r\n    setPopup({ isOpen: true, key, value: currentValue });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setPopup({ isOpen: false, key: null, value: \"\" });\r\n  };\r\n\r\n  const savePopupChanges = () => {\r\n    const updatedValue = popup.value;\r\n    setGraphData((prev) => ({\r\n      ...prev,\r\n      nodeDataArray: prev.nodeDataArray.map((node) =>\r\n        node.key === popup.key ? { ...node, hoverLabel: updatedValue } : node\r\n      ),\r\n    }));\r\n    closePopup();\r\n  };\r\n\r\n  const handleLabelChange = (event, key) => {\r\n        const updatedValue = event.target.value;\r\n      setGraphData((prev) => ({\r\n        ...prev,\r\n        nodeDataArray: prev.nodeDataArray.map((node) =>\r\n          node.key === key ? { ...node, hoverLabel: updatedValue } : node\r\n        ),\r\n      }));\r\n    };\r\n\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\", height: \"100%\" }}>\r\n      <div style={{ width: \"50%\", borderRight: \"1px solid black\", padding: \"10px\", overflowY: \"auto\" }}>\r\n        <h2>Node Table</h2>\r\n        <TableVisualization\r\n          graphData={graphData}\r\n          handleLabelChange={handleLabelChange}\r\n          openPopup={openPopup}\r\n          setGraphData={setGraphData}\r\n        />\r\n        <button  style={{ marginTop: \"10px\" }}>\r\n          Save Changes\r\n        </button>\r\n      </div>\r\n      <div style={{ width: \"50%\", padding: \"10px\", overflow: \"auto\" }}>\r\n        <h2>Graph Visualization</h2>\r\n         <FileUpload onFileUpload={fetchGraphData} /> {/* NEW LINE */}\r\n        <GraphVisualization\r\n          graphData={graphData}\r\n          dimensions={dimensions}\r\n          setDimensions={setDimensions}\r\n        />\r\n      </div>\r\n      <Popup\r\n        isOpen={popup.isOpen}\r\n        value={popup.value}\r\n        onChange={(e) => setPopup({ ...popup, value: e.target.value })}\r\n        onSave={savePopupChanges}\r\n        onClose={closePopup}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}