{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\GraphVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Utility function to safely stringify objects for logging\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst safeStringify = obj => {\n  try {\n    return JSON.stringify(obj, (key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (value.$$typeof) return '[React Element]';\n        return value;\n      }\n      return value;\n    }, 2);\n  } catch (error) {\n    return 'Unable to stringify object';\n  }\n};\n\n// Cluster Node Component\nconst ClusterNode = ({\n  data\n}) => {\n  // Validate data prop\n  if (!data || typeof data !== 'object') {\n    console.error('Invalid data prop for ClusterNode:', safeStringify(data));\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cluster-node\",\n    style: {\n      padding: '10px',\n      borderRadius: '5px',\n      background: 'linear-gradient(to bottom, #1E40AF, #3B82F6)',\n      color: 'white',\n      width: '180px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #1E3A8A'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '16px',\n          height: '16px',\n          borderRadius: '50%',\n          backgroundColor: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '14px',\n          textAlign: 'center'\n        },\n        children: data.label || 'Unnamed Cluster'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), data.hoverLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '8px',\n        fontSize: '12px',\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\n        padding: '4px',\n        borderRadius: '3px'\n      },\n      children: data.hoverLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n// Object Node as Table Component\n_c = ClusterNode;\nconst ObjectTableNode = ({\n  data\n}) => {\n  // Validate data prop\n  if (!data || typeof data !== 'object') {\n    console.error('Invalid data prop for ObjectTableNode:', safeStringify(data));\n    return null;\n  }\n\n  // Ensure harmonizedAttributes is an array with safe conversion\n  const harmonizedAttributes = Array.isArray(data.harmonizedAttributes) ? data.harmonizedAttributes : [];\n\n  // Validate each attribute\n  const validAttributes = harmonizedAttributes.map((attr, index) => {\n    // Ensure attr is an object\n    if (typeof attr !== 'object' || attr === null) {\n      console.warn(`Invalid attribute at index ${index}:`, safeStringify(attr));\n      return {\n        label: 'Invalid Attribute',\n        value: 'N/A'\n      };\n    }\n    return {\n      label: typeof attr.label === 'string' ? attr.label : 'Unknown',\n      value: typeof attr.value === 'string' ? attr.value : 'N/A'\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"object-table-node\",\n    style: {\n      padding: '10px',\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      color: '#1e293b',\n      minWidth: '280px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #10B981'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#10B981',\n        color: 'white',\n        padding: '8px 12px',\n        borderTopLeftRadius: '6px',\n        borderTopRightRadius: '6px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '0',\n          height: '0',\n          borderLeft: '7px solid transparent',\n          borderRight: '7px solid transparent',\n          borderBottom: '14px solid white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '14px'\n        },\n        children: data.label || 'Unnamed Object'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), data.hoverLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '12px',\n        padding: '0 8px 8px 8px',\n        color: '#64748b',\n        borderBottom: '1px solid #e2e8f0'\n      },\n      children: data.hoverLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '8px',\n        maxHeight: '200px',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f8fafc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '6px 8px',\n                textAlign: 'left',\n                borderBottom: '1px solid #e2e8f0'\n              },\n              children: \"Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '6px 8px',\n                textAlign: 'left',\n                borderBottom: '1px solid #e2e8f0'\n              },\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: validAttributes.length > 0 ? validAttributes.map((attr, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: index % 2 === 0 ? 'white' : '#f8fafc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '6px 8px',\n                borderBottom: '1px solid #e2e8f0',\n                color: '#8B5CF6',\n                fontWeight: 500\n              },\n              children: attr.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '6px 8px',\n                borderBottom: '1px solid #e2e8f0'\n              },\n              children: attr.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              style: {\n                padding: '8px',\n                textAlign: 'center',\n                color: '#94a3b8'\n              },\n              children: \"No attributes available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n// Define node types\n_c2 = ObjectTableNode;\nconst nodeTypes = {\n  cluster: ClusterNode,\n  objectTable: ObjectTableNode\n};\nconst GraphVisualization = ({\n  graphData,\n  dimensions,\n  onInit\n}) => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  // Process graph data to create React Flow nodes and edges\n  useEffect(() => {\n    // Log the entire graphData for debugging\n    console.log('Raw Graph Data:', safeStringify(graphData));\n    if (graphData && graphData.nodeDataArray && graphData.linkDataArray) {\n      try {\n        // Process the data to group harmonized attributes by object\n        const processedData = processGraphData(graphData);\n\n        // Log processed data for debugging\n        console.log('Processed Nodes:', safeStringify(processedData.nodes));\n        console.log('Processed Edges:', safeStringify(processedData.edges));\n        setNodes(processedData.nodes);\n        setEdges(processedData.edges);\n      } catch (error) {\n        console.error('Error processing graph data:', error);\n      }\n    }\n  }, [graphData]);\n\n  // Process graph data to create table view\n  const processGraphData = data => {\n    if (!data || !data.nodeDataArray || !data.linkDataArray) {\n      console.error('Invalid graph data structure:', safeStringify(data));\n      return {\n        nodes: [],\n        edges: []\n      };\n    }\n    const originalNodes = [...data.nodeDataArray];\n    const originalLinks = [...data.linkDataArray];\n\n    // Extract nodes by type\n    const clusters = originalNodes.filter(node => node.category === \"system\");\n    const objects = originalNodes.filter(node => node.category === \"object\");\n    const attributes = originalNodes.filter(node => node.category === \"attribute\");\n\n    // Create a mapping of object keys to their harmonized attributes\n    const objectToHarmonizedAttributes = {};\n\n    // First, find all links from objects to attributes\n    originalLinks.forEach(link => {\n      const sourceNode = originalNodes.find(node => node.key === link.from);\n      const targetNode = originalNodes.find(node => node.key === link.to);\n      if (sourceNode && targetNode && sourceNode.category === \"object\" && targetNode.category === \"attribute\") {\n        if (!objectToHarmonizedAttributes[sourceNode.key]) {\n          objectToHarmonizedAttributes[sourceNode.key] = [];\n        }\n\n        // Get the harmonized attribute name\n        const harmonizedName = targetNode.harmonisedAttribute || `Harmonised-${targetNode.label}`;\n\n        // Add to the object's harmonized attributes if not already present\n        const existingAttr = objectToHarmonizedAttributes[sourceNode.key].find(attr => attr.label === harmonizedName);\n        if (!existingAttr) {\n          objectToHarmonizedAttributes[sourceNode.key].push({\n            label: harmonizedName || 'Unknown',\n            originalAttribute: targetNode.label || 'Unknown',\n            hoverLabel: targetNode.hoverLabel || '',\n            value: targetNode.hoverLabel || 'Sample Value'\n          });\n        }\n      }\n    });\n\n    // Create flow nodes\n    const flowNodes = [];\n\n    // Position variables\n    let yPosition = 0;\n    const LEVEL_HEIGHT = 300;\n    const NODE_WIDTH = 280;\n\n    // Add cluster nodes (top level)\n    let clusterPositions = {};\n    clusters.forEach((cluster, index) => {\n      const xPosition = index * NODE_WIDTH * 1.5 - (clusters.length - 1) * NODE_WIDTH * 0.75;\n      const nodeId = cluster.key;\n      flowNodes.push({\n        id: nodeId,\n        type: 'cluster',\n        position: {\n          x: xPosition,\n          y: yPosition\n        },\n        data: {\n          label: cluster.label || 'Unnamed Cluster',\n          hoverLabel: cluster.hoverLabel || ''\n        },\n        sourcePosition: Position.Bottom,\n        targetPosition: Position.Top\n      });\n      clusterPositions[nodeId] = xPosition;\n    });\n\n    // Move to next level for object tables\n    yPosition += LEVEL_HEIGHT;\n\n    // First, organize objects by their parent cluster\n    const objectsByCluster = {};\n    originalLinks.forEach(link => {\n      const sourceNode = originalNodes.find(node => node.key === link.from);\n      const targetNode = originalNodes.find(node => node.key === link.to);\n      if (sourceNode && targetNode && sourceNode.category === \"system\" && targetNode.category === \"object\") {\n        if (!objectsByCluster[sourceNode.key]) {\n          objectsByCluster[sourceNode.key] = [];\n        }\n        objectsByCluster[sourceNode.key].push(targetNode);\n      }\n    });\n\n    // Create flow edges\n    const flowEdges = [];\n\n    // Add object table nodes (bottom level)\n    Object.entries(objectsByCluster).forEach(([clusterId, clusterObjects]) => {\n      const clusterXPosition = clusterPositions[clusterId];\n      const objectCount = clusterObjects.length;\n      clusterObjects.forEach((object, index) => {\n        // Position objects below their parent cluster, with spacing\n        const xOffset = (index - (objectCount - 1) / 2) * NODE_WIDTH * 1.5;\n        const xPosition = clusterXPosition + xOffset;\n        const nodeId = object.key;\n        flowNodes.push({\n          id: nodeId,\n          type: 'objectTable',\n          position: {\n            x: xPosition,\n            y: yPosition\n          },\n          data: {\n            label: object.label || 'Unnamed Object',\n            hoverLabel: object.hoverLabel || '',\n            harmonizedAttributes: objectToHarmonizedAttributes[nodeId] || []\n          },\n          sourcePosition: Position.Bottom,\n          targetPosition: Position.Top\n        });\n\n        // Add edge from cluster to object\n        flowEdges.push({\n          id: `${clusterId}-${nodeId}`,\n          source: clusterId,\n          target: nodeId,\n          animated: false,\n          style: {\n            stroke: '#555',\n            strokeWidth: 2\n          },\n          type: 'smoothstep'\n        });\n      });\n    });\n    return {\n      nodes: flowNodes,\n      edges: flowEdges\n    };\n  };\n\n  // Handle on init to pass back React Flow instance\n  const handleInit = reactFlowInstance => {\n    if (onInit) {\n      onInit(reactFlowInstance);\n    }\n\n    // Fit view\n    setTimeout(() => {\n      reactFlowInstance.fitView({\n        padding: 0.2\n      });\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.width) || '100%',\n      height: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.height) || '600px',\n      border: '1px solid #e2e8f0',\n      borderRadius: '8px'\n    },\n    children: graphData ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      onInit: handleInit,\n      minZoom: 0.2,\n      maxZoom: 2,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeStrokeWidth: 3,\n        zoomable: true,\n        pannable: true,\n        nodeColor: node => {\n          if (node.type === 'cluster') return '#3B82F6';\n          return '#10B981';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        color: \"#64748b\",\n        fontSize: \"16px\",\n        fontStyle: \"italic\",\n        background: \"#f8fafc\"\n      },\n      children: \"Graph will be displayed here after uploading a file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphVisualization, \"qOdGaiImnCja3mNU5uxxCrNYw9I=\");\n_c3 = GraphVisualization;\nexport default GraphVisualization;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ClusterNode\");\n$RefreshReg$(_c2, \"ObjectTableNode\");\n$RefreshReg$(_c3, \"GraphVisualization\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","Background","Controls","MiniMap","Position","jsxDEV","_jsxDEV","safeStringify","obj","JSON","stringify","key","value","$$typeof","error","ClusterNode","data","console","className","style","padding","borderRadius","background","color","width","boxShadow","border","children","display","alignItems","gap","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","fontSize","textAlign","label","hoverLabel","marginTop","_c","ObjectTableNode","harmonizedAttributes","Array","isArray","validAttributes","map","attr","index","warn","minWidth","borderTopLeftRadius","borderTopRightRadius","marginBottom","borderLeft","borderRight","borderBottom","maxHeight","overflowY","borderCollapse","length","colSpan","_c2","nodeTypes","cluster","objectTable","GraphVisualization","graphData","dimensions","onInit","_s","nodes","setNodes","edges","setEdges","log","nodeDataArray","linkDataArray","processedData","processGraphData","originalNodes","originalLinks","clusters","filter","node","category","objects","attributes","objectToHarmonizedAttributes","forEach","link","sourceNode","find","from","targetNode","to","harmonizedName","harmonisedAttribute","existingAttr","push","originalAttribute","flowNodes","yPosition","LEVEL_HEIGHT","NODE_WIDTH","clusterPositions","xPosition","nodeId","id","type","position","x","y","sourcePosition","Bottom","targetPosition","Top","objectsByCluster","flowEdges","Object","entries","clusterId","clusterObjects","clusterXPosition","objectCount","object","xOffset","source","target","animated","stroke","strokeWidth","handleInit","reactFlowInstance","setTimeout","fitView","minZoom","maxZoom","nodeStrokeWidth","zoomable","pannable","nodeColor","variant","size","justifyContent","fontStyle","_c3","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/GraphVisualization.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactFlow, {\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  Position\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\n// Utility function to safely stringify objects for logging\r\nconst safeStringify = (obj) => {\r\n  try {\r\n    return JSON.stringify(obj, (key, value) => {\r\n      if (typeof value === 'object' && value !== null) {\r\n        if (value.$$typeof) return '[React Element]';\r\n        return value;\r\n      }\r\n      return value;\r\n    }, 2);\r\n  } catch (error) {\r\n    return 'Unable to stringify object';\r\n  }\r\n};\r\n\r\n// Cluster Node Component\r\nconst ClusterNode = ({ data }) => {\r\n  // Validate data prop\r\n  if (!data || typeof data !== 'object') {\r\n    console.error('Invalid data prop for ClusterNode:', safeStringify(data));\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cluster-node\" \r\n      style={{\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        background: 'linear-gradient(to bottom, #1E40AF, #3B82F6)',\r\n        color: 'white',\r\n        width: '180px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        border: '2px solid #1E3A8A'\r\n      }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n        <div style={{ \r\n          width: '16px', \r\n          height: '16px', \r\n          borderRadius: '50%', \r\n          backgroundColor: 'white' \r\n        }}></div>\r\n        <div style={{\r\n          fontWeight: 'bold',\r\n          fontSize: '14px',\r\n          textAlign: 'center'\r\n        }}>{data.label || 'Unnamed Cluster'}</div>\r\n      </div>\r\n      {data.hoverLabel && (\r\n        <div style={{\r\n          marginTop: '8px',\r\n          fontSize: '12px',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n          padding: '4px',\r\n          borderRadius: '3px'\r\n        }}>{data.hoverLabel}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Object Node as Table Component\r\nconst ObjectTableNode = ({ data }) => {\r\n  // Validate data prop\r\n  if (!data || typeof data !== 'object') {\r\n    console.error('Invalid data prop for ObjectTableNode:', safeStringify(data));\r\n    return null;\r\n  }\r\n\r\n  // Ensure harmonizedAttributes is an array with safe conversion\r\n  const harmonizedAttributes = Array.isArray(data.harmonizedAttributes) \r\n    ? data.harmonizedAttributes \r\n    : [];\r\n\r\n  // Validate each attribute\r\n  const validAttributes = harmonizedAttributes.map((attr, index) => {\r\n    // Ensure attr is an object\r\n    if (typeof attr !== 'object' || attr === null) {\r\n      console.warn(`Invalid attribute at index ${index}:`, safeStringify(attr));\r\n      return {\r\n        label: 'Invalid Attribute',\r\n        value: 'N/A'\r\n      };\r\n    }\r\n\r\n    return {\r\n      label: typeof attr.label === 'string' ? attr.label : 'Unknown',\r\n      value: typeof attr.value === 'string' ? attr.value : 'N/A'\r\n    };\r\n  });\r\n  \r\n  return (\r\n    <div className=\"object-table-node\"\r\n      style={{\r\n        padding: '10px',\r\n        borderRadius: '8px',\r\n        backgroundColor: 'white',\r\n        color: '#1e293b',\r\n        minWidth: '280px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        border: '2px solid #10B981'\r\n      }}>\r\n      {/* Table Header */}\r\n      <div style={{\r\n        backgroundColor: '#10B981',\r\n        color: 'white',\r\n        padding: '8px 12px',\r\n        borderTopLeftRadius: '6px',\r\n        borderTopRightRadius: '6px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '8px',\r\n        marginBottom: '8px'\r\n      }}>\r\n        <div style={{\r\n          width: '0',\r\n          height: '0',\r\n          borderLeft: '7px solid transparent',\r\n          borderRight: '7px solid transparent',\r\n          borderBottom: '14px solid white'\r\n        }}></div>\r\n        <div style={{\r\n          fontWeight: 'bold',\r\n          fontSize: '14px'\r\n        }}>{data.label || 'Unnamed Object'}</div>\r\n      </div>\r\n      \r\n      {/* Table Description if available */}\r\n      {data.hoverLabel && (\r\n        <div style={{\r\n          fontSize: '12px',\r\n          padding: '0 8px 8px 8px',\r\n          color: '#64748b',\r\n          borderBottom: '1px solid #e2e8f0'\r\n        }}>{data.hoverLabel}</div>\r\n      )}\r\n      \r\n      {/* Harmonized Attributes Table */}\r\n      <div style={{ marginTop: '8px', maxHeight: '200px', overflowY: 'auto' }}>\r\n        <table style={{ \r\n          width: '100%', \r\n          borderCollapse: 'collapse',\r\n          fontSize: '12px'\r\n        }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: '#f8fafc' }}>\r\n              <th style={{ \r\n                padding: '6px 8px', \r\n                textAlign: 'left', \r\n                borderBottom: '1px solid #e2e8f0' \r\n              }}>Attribute</th>\r\n              <th style={{ \r\n                padding: '6px 8px', \r\n                textAlign: 'left', \r\n                borderBottom: '1px solid #e2e8f0' \r\n              }}>Value</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {validAttributes.length > 0 ? (\r\n              validAttributes.map((attr, index) => (\r\n                <tr key={index} style={{ \r\n                  backgroundColor: index % 2 === 0 ? 'white' : '#f8fafc'\r\n                }}>\r\n                  <td style={{ \r\n                    padding: '6px 8px', \r\n                    borderBottom: '1px solid #e2e8f0',\r\n                    color: '#8B5CF6',\r\n                    fontWeight: 500\r\n                  }}>{attr.label}</td>\r\n                  <td style={{ \r\n                    padding: '6px 8px', \r\n                    borderBottom: '1px solid #e2e8f0'\r\n                  }}>{attr.value}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"2\" style={{ \r\n                  padding: '8px', \r\n                  textAlign: 'center',\r\n                  color: '#94a3b8'\r\n                }}>No attributes available</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Define node types\r\nconst nodeTypes = {\r\n  cluster: ClusterNode,\r\n  objectTable: ObjectTableNode\r\n};\r\n\r\nconst GraphVisualization = ({ graphData, dimensions, onInit }) => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n\r\n  // Process graph data to create React Flow nodes and edges\r\n  useEffect(() => {\r\n    // Log the entire graphData for debugging\r\n    console.log('Raw Graph Data:', safeStringify(graphData));\r\n\r\n    if (graphData && graphData.nodeDataArray && graphData.linkDataArray) {\r\n      try {\r\n        // Process the data to group harmonized attributes by object\r\n        const processedData = processGraphData(graphData);\r\n        \r\n        // Log processed data for debugging\r\n        console.log('Processed Nodes:', safeStringify(processedData.nodes));\r\n        console.log('Processed Edges:', safeStringify(processedData.edges));\r\n        \r\n        setNodes(processedData.nodes);\r\n        setEdges(processedData.edges);\r\n      } catch (error) {\r\n        console.error('Error processing graph data:', error);\r\n      }\r\n    }\r\n  }, [graphData]);\r\n\r\n  // Process graph data to create table view\r\n  const processGraphData = (data) => {\r\n    if (!data || !data.nodeDataArray || !data.linkDataArray) {\r\n      console.error('Invalid graph data structure:', safeStringify(data));\r\n      return { nodes: [], edges: [] };\r\n    }\r\n\r\n    const originalNodes = [...data.nodeDataArray];\r\n    const originalLinks = [...data.linkDataArray];\r\n    \r\n    // Extract nodes by type\r\n    const clusters = originalNodes.filter(node => node.category === \"system\");\r\n    const objects = originalNodes.filter(node => node.category === \"object\");\r\n    const attributes = originalNodes.filter(node => node.category === \"attribute\");\r\n    \r\n    // Create a mapping of object keys to their harmonized attributes\r\n    const objectToHarmonizedAttributes = {};\r\n    \r\n    // First, find all links from objects to attributes\r\n    originalLinks.forEach(link => {\r\n      const sourceNode = originalNodes.find(node => node.key === link.from);\r\n      const targetNode = originalNodes.find(node => node.key === link.to);\r\n      \r\n      if (sourceNode && targetNode && \r\n          sourceNode.category === \"object\" && \r\n          targetNode.category === \"attribute\") {\r\n        \r\n        if (!objectToHarmonizedAttributes[sourceNode.key]) {\r\n          objectToHarmonizedAttributes[sourceNode.key] = [];\r\n        }\r\n        \r\n        // Get the harmonized attribute name\r\n        const harmonizedName = targetNode.harmonisedAttribute || `Harmonised-${targetNode.label}`;\r\n        \r\n        // Add to the object's harmonized attributes if not already present\r\n        const existingAttr = objectToHarmonizedAttributes[sourceNode.key]\r\n          .find(attr => attr.label === harmonizedName);\r\n          \r\n        if (!existingAttr) {\r\n          objectToHarmonizedAttributes[sourceNode.key].push({\r\n            label: harmonizedName || 'Unknown',\r\n            originalAttribute: targetNode.label || 'Unknown',\r\n            hoverLabel: targetNode.hoverLabel || '',\r\n            value: targetNode.hoverLabel || 'Sample Value'\r\n          });\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Create flow nodes\r\n    const flowNodes = [];\r\n    \r\n    // Position variables\r\n    let yPosition = 0;\r\n    const LEVEL_HEIGHT = 300;\r\n    const NODE_WIDTH = 280;\r\n    \r\n    // Add cluster nodes (top level)\r\n    let clusterPositions = {};\r\n    clusters.forEach((cluster, index) => {\r\n      const xPosition = (index * NODE_WIDTH * 1.5) - ((clusters.length - 1) * NODE_WIDTH * 0.75);\r\n      const nodeId = cluster.key;\r\n      \r\n      flowNodes.push({\r\n        id: nodeId,\r\n        type: 'cluster',\r\n        position: { x: xPosition, y: yPosition },\r\n        data: { \r\n          label: cluster.label || 'Unnamed Cluster',\r\n          hoverLabel: cluster.hoverLabel || ''\r\n        },\r\n        sourcePosition: Position.Bottom,\r\n        targetPosition: Position.Top\r\n      });\r\n      \r\n      clusterPositions[nodeId] = xPosition;\r\n    });\r\n    \r\n    // Move to next level for object tables\r\n    yPosition += LEVEL_HEIGHT;\r\n    \r\n    // First, organize objects by their parent cluster\r\n    const objectsByCluster = {};\r\n    originalLinks.forEach(link => {\r\n      const sourceNode = originalNodes.find(node => node.key === link.from);\r\n      const targetNode = originalNodes.find(node => node.key === link.to);\r\n      \r\n      if (sourceNode && targetNode && \r\n          sourceNode.category === \"system\" && \r\n          targetNode.category === \"object\") {\r\n        if (!objectsByCluster[sourceNode.key]) {\r\n          objectsByCluster[sourceNode.key] = [];\r\n        }\r\n        objectsByCluster[sourceNode.key].push(targetNode);\r\n      }\r\n    });\r\n    \r\n    // Create flow edges\r\n    const flowEdges = [];\r\n    \r\n    // Add object table nodes (bottom level)\r\n    Object.entries(objectsByCluster).forEach(([clusterId, clusterObjects]) => {\r\n      const clusterXPosition = clusterPositions[clusterId];\r\n      const objectCount = clusterObjects.length;\r\n      \r\n      clusterObjects.forEach((object, index) => {\r\n        // Position objects below their parent cluster, with spacing\r\n        const xOffset = ((index - (objectCount - 1) / 2) * NODE_WIDTH * 1.5);\r\n        const xPosition = clusterXPosition + xOffset;\r\n        const nodeId = object.key;\r\n        \r\n        flowNodes.push({\r\n          id: nodeId,\r\n          type: 'objectTable',\r\n          position: { x: xPosition, y: yPosition },\r\n          data: { \r\n            label: object.label || 'Unnamed Object',\r\n            hoverLabel: object.hoverLabel || '',\r\n            harmonizedAttributes: objectToHarmonizedAttributes[nodeId] || []\r\n          },\r\n          sourcePosition: Position.Bottom,\r\n          targetPosition: Position.Top\r\n        });\r\n        \r\n        // Add edge from cluster to object\r\n        flowEdges.push({\r\n          id: `${clusterId}-${nodeId}`,\r\n          source: clusterId,\r\n          target: nodeId,\r\n          animated: false,\r\n          style: { stroke: '#555', strokeWidth: 2 },\r\n          type: 'smoothstep'\r\n        });\r\n      });\r\n    });\r\n    \r\n    return { nodes: flowNodes, edges: flowEdges };\r\n  };\r\n\r\n  // Handle on init to pass back React Flow instance\r\n  const handleInit = (reactFlowInstance) => {\r\n    if (onInit) {\r\n      onInit(reactFlowInstance);\r\n    }\r\n    \r\n    // Fit view\r\n    setTimeout(() => {\r\n      reactFlowInstance.fitView({ padding: 0.2 });\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      width: dimensions?.width || '100%', \r\n      height: dimensions?.height || '600px', \r\n      border: '1px solid #e2e8f0',\r\n      borderRadius: '8px'\r\n    }}>\r\n      {graphData ? (\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          nodeTypes={nodeTypes}\r\n          fitView\r\n          onInit={handleInit}\r\n          minZoom={0.2}\r\n          maxZoom={2}\r\n        >\r\n          <Controls />\r\n          <MiniMap \r\n            nodeStrokeWidth={3}\r\n            zoomable\r\n            pannable\r\n            nodeColor={(node) => {\r\n              if (node.type === 'cluster') return '#3B82F6';\r\n              return '#10B981';\r\n            }}\r\n          />\r\n          <Background variant=\"dots\" gap={12} size={1} />\r\n        </ReactFlow>\r\n      ) : (\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          height: \"100%\",\r\n          color: \"#64748b\",\r\n          fontSize: \"16px\",\r\n          fontStyle: \"italic\",\r\n          background: \"#f8fafc\"\r\n        }}>\r\n          Graph will be displayed here after uploading a file.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}