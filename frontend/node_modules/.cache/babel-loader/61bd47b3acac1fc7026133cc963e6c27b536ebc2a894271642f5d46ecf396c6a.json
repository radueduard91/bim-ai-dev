{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TableVisualization from \"./components/TableVisualization\";\nimport GraphVisualization from \"./components/GraphVisualization\";\nimport FileUpload from \"./components/FileUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodeDataArray: [],\n    linkDataArray: []\n  });\n  useEffect(() => {\n    fetchGraphData();\n  }, []);\n  const fetchGraphData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\n      setGraphData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching graph data:\", error);\n    }\n  };\n  const handleDragEnd = async (sourceKey, targetKey, sourceType, targetType) => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n        source: sourceKey,\n        target: targetKey,\n        sourceType,\n        targetType\n      });\n      console.log(response.data.message);\n      fetchGraphData(); // Refresh data after drag-and-drop\n    } catch (error) {\n      console.error(\"Error applying drag-and-drop:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n        fetchGraphData: fetchGraphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableVisualization, {\n        graphData: graphData,\n        onDragEnd: handleDragEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(GraphVisualization, {\n        graphData: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IsP007GEe0WfZwNzzIuTSN5fdsA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TableVisualization","GraphVisualization","FileUpload","jsxDEV","_jsxDEV","App","_s","graphData","setGraphData","nodeDataArray","linkDataArray","fetchGraphData","response","get","data","error","console","handleDragEnd","sourceKey","targetKey","sourceType","targetType","post","source","target","log","message","style","display","flexDirection","height","children","flex","overflow","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport TableVisualization from \"./components/TableVisualization\";\r\nimport GraphVisualization from \"./components/GraphVisualization\";\r\nimport FileUpload from \"./components/FileUpload\";\r\n\r\nconst App = () => {\r\n  const [graphData, setGraphData] = useState({ nodeDataArray: [], linkDataArray: [] });\r\n\r\n  useEffect(() => {\r\n    fetchGraphData();\r\n  }, []);\r\n\r\n  const fetchGraphData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/graph-data/\");\r\n      setGraphData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching graph data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = async (sourceKey, targetKey, sourceType, targetType) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n        source: sourceKey,\r\n        target: targetKey,\r\n        sourceType,\r\n        targetType,\r\n      });\r\n      console.log(response.data.message);\r\n      fetchGraphData(); // Refresh data after drag-and-drop\r\n    } catch (error) {\r\n      console.error(\"Error applying drag-and-drop:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", height: \"100vh\" }}>\r\n      <div style={{ flex: 1, overflow: \"auto\" }}>\r\n        <FileUpload fetchGraphData={fetchGraphData} />\r\n        <TableVisualization\r\n          graphData={graphData}\r\n          onDragEnd={handleDragEnd}\r\n        />\r\n      </div>\r\n      <div style={{ flex: 1, overflow: \"auto\" }}>\r\n        <GraphVisualization graphData={graphData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}