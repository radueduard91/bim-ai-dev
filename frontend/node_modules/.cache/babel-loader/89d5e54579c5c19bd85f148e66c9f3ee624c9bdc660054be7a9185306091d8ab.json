{"ast":null,"code":"export const calculateCounts = graphData => {\n  const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n  const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n  const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n  const clusterCounts = {};\n  const objectCounts = {};\n  clusters.forEach(cluster => {\n    const linkedObjects = objects.filter(obj => graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key));\n    clusterCounts[cluster.key] = linkedObjects.length;\n  });\n  objects.forEach(obj => {\n    const linkedAttributes = attributes.filter(attr => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n    objectCounts[obj.key] = linkedAttributes.length;\n  });\n  return {\n    clusterCounts,\n    objectCounts\n  };\n};","map":{"version":3,"names":["calculateCounts","graphData","clusters","nodeDataArray","filter","node","category","objects","attributes","clusterCounts","objectCounts","forEach","cluster","linkedObjects","obj","linkDataArray","some","link","from","key","to","length","linkedAttributes","attr"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-dev/frontend/src/components/TableVisualization/CountCalculators.js"],"sourcesContent":["export const calculateCounts = (graphData) => {\r\n    const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n    const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n    const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n    const clusterCounts = {};\r\n    const objectCounts = {};\r\n\r\n    clusters.forEach(cluster => {\r\n        const linkedObjects = objects.filter(obj =>\r\n            graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key)\r\n        );\r\n        clusterCounts[cluster.key] = linkedObjects.length;\r\n    });\r\n\r\n    objects.forEach(obj => {\r\n        const linkedAttributes = attributes.filter(attr =>\r\n            graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key)\r\n        );\r\n        objectCounts[obj.key] = linkedAttributes.length;\r\n    });\r\n\r\n    return { clusterCounts, objectCounts };\r\n};"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAIC,SAAS,IAAK;EAC1C,MAAMC,QAAQ,GAAGD,SAAS,CAACE,aAAa,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAK,QAAQ,CAAC;EACrF,MAAMC,OAAO,GAAGN,SAAS,CAACE,aAAa,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAK,QAAQ,CAAC;EACpF,MAAME,UAAU,GAAGP,SAAS,CAACE,aAAa,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAK,WAAW,CAAC;EAE1F,MAAMG,aAAa,GAAG,CAAC,CAAC;EACxB,MAAMC,YAAY,GAAG,CAAC,CAAC;EAEvBR,QAAQ,CAACS,OAAO,CAACC,OAAO,IAAI;IACxB,MAAMC,aAAa,GAAGN,OAAO,CAACH,MAAM,CAACU,GAAG,IACpCb,SAAS,CAACc,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKN,OAAO,CAACO,GAAG,IAAIF,IAAI,CAACG,EAAE,KAAKN,GAAG,CAACK,GAAG,CACzF,CAAC;IACDV,aAAa,CAACG,OAAO,CAACO,GAAG,CAAC,GAAGN,aAAa,CAACQ,MAAM;EACrD,CAAC,CAAC;EAEFd,OAAO,CAACI,OAAO,CAACG,GAAG,IAAI;IACnB,MAAMQ,gBAAgB,GAAGd,UAAU,CAACJ,MAAM,CAACmB,IAAI,IAC3CtB,SAAS,CAACc,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,GAAG,CAACK,GAAG,IAAIF,IAAI,CAACG,EAAE,KAAKG,IAAI,CAACJ,GAAG,CACtF,CAAC;IACDT,YAAY,CAACI,GAAG,CAACK,GAAG,CAAC,GAAGG,gBAAgB,CAACD,MAAM;EACnD,CAAC,CAAC;EAEF,OAAO;IAAEZ,aAAa;IAAEC;EAAa,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}