{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableGraphVisualization\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGraphVisualization } from './hooks/useGraphVisualization';\nimport ViewControls from './components/ViewControls';\nimport ClusterSection from './components/ClusterSection';\nimport NoDataPlaceholder from './components/NoDataPlaceholder';\n\n/**\r\n * TableGraphVisualization - A component that visualizes graph data as tables\r\n * with 3NF compliance checks and AI-powered attribute rearrangement\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableGraphVisualization = ({\n  graphData,\n  dimensions\n}) => {\n  _s();\n  const {\n    processedData,\n    aiProcessedData,\n    show3NFStatus,\n    showAIRearrangement,\n    toggleAIRearrangement,\n    toggle3NFCheck,\n    isExpanded,\n    toggleExpand\n  } = useGraphVisualization(graphData);\n\n  // Calculate container styles based on dimensions\n  const containerStyle = {\n    width: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.width) || '100%',\n    height: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.height) || '600px',\n    padding: '10px',\n    background: '#f8fafc',\n    border: '1px solid #e2e8f0',\n    borderRadius: '8px',\n    overflow: 'auto',\n    maxHeight: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.height) || '600px',\n    position: 'relative',\n    boxSizing: 'border-box'\n  };\n\n  // Determine which data to display\n  const activeData = showAIRearrangement ? aiProcessedData : processedData;\n\n  // No data scenario\n  if (!graphData || !processedData.length) {\n    return /*#__PURE__*/_jsxDEV(NoDataPlaceholder, {\n      containerStyle: containerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(ViewControls, {\n      show3NFStatus: show3NFStatus,\n      showAIRearrangement: showAIRearrangement,\n      toggle3NFCheck: toggle3NFCheck,\n      toggleAIRearrangement: toggleAIRearrangement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), activeData.map((cluster, index) => /*#__PURE__*/_jsxDEV(ClusterSection, {\n      cluster: cluster,\n      show3NFStatus: show3NFStatus,\n      showAIRearrangement: showAIRearrangement,\n      isExpanded: isExpanded,\n      toggleExpand: toggleExpand\n    }, `cluster-${index}-${cluster.key}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TableGraphVisualization, \"Y6wfVMkOEl+aZyfLgWUYz8YKOmA=\", false, function () {\n  return [useGraphVisualization];\n});\n_c = TableGraphVisualization;\nexport default TableGraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableGraphVisualization\");","map":{"version":3,"names":["React","useGraphVisualization","ViewControls","ClusterSection","NoDataPlaceholder","jsxDEV","_jsxDEV","TableGraphVisualization","graphData","dimensions","_s","processedData","aiProcessedData","show3NFStatus","showAIRearrangement","toggleAIRearrangement","toggle3NFCheck","isExpanded","toggleExpand","containerStyle","width","height","padding","background","border","borderRadius","overflow","maxHeight","position","boxSizing","activeData","length","fileName","_jsxFileName","lineNumber","columnNumber","style","children","map","cluster","index","key","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableGraphVisualization/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useGraphVisualization } from './hooks/useGraphVisualization';\r\nimport ViewControls from './components/ViewControls';\r\nimport ClusterSection from './components/ClusterSection';\r\nimport NoDataPlaceholder from './components/NoDataPlaceholder';\r\n\r\n/**\r\n * TableGraphVisualization - A component that visualizes graph data as tables\r\n * with 3NF compliance checks and AI-powered attribute rearrangement\r\n */\r\nconst TableGraphVisualization = ({ graphData, dimensions }) => {\r\n  const {\r\n    processedData,\r\n    aiProcessedData,\r\n    show3NFStatus,\r\n    showAIRearrangement,\r\n    toggleAIRearrangement,\r\n    toggle3NFCheck,\r\n    isExpanded,\r\n    toggleExpand\r\n  } = useGraphVisualization(graphData);\r\n\r\n  // Calculate container styles based on dimensions\r\n  const containerStyle = {\r\n    width: dimensions?.width || '100%', \r\n    height: dimensions?.height || '600px',\r\n    padding: '10px',\r\n    background: '#f8fafc',\r\n    border: '1px solid #e2e8f0',\r\n    borderRadius: '8px',\r\n    overflow: 'auto',\r\n    maxHeight: dimensions?.height || '600px',\r\n    position: 'relative',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  // Determine which data to display\r\n  const activeData = showAIRearrangement ? aiProcessedData : processedData;\r\n\r\n  // No data scenario\r\n  if (!graphData || !processedData.length) {\r\n    return <NoDataPlaceholder containerStyle={containerStyle} />;\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {/* View Controls */}\r\n      <ViewControls \r\n        show3NFStatus={show3NFStatus}\r\n        showAIRearrangement={showAIRearrangement}\r\n        toggle3NFCheck={toggle3NFCheck}\r\n        toggleAIRearrangement={toggleAIRearrangement}\r\n      />\r\n\r\n      {/* Clusters and Objects Rendering */}\r\n      {activeData.map((cluster, index) => (\r\n        <ClusterSection \r\n          key={`cluster-${index}-${cluster.key}`}\r\n          cluster={cluster}\r\n          show3NFStatus={show3NFStatus}\r\n          showAIRearrangement={showAIRearrangement}\r\n          isExpanded={isExpanded}\r\n          toggleExpand={toggleExpand}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableGraphVisualization;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,iBAAiB,MAAM,gCAAgC;;AAE9D;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM;IACJC,aAAa;IACbC,eAAe;IACfC,aAAa;IACbC,mBAAmB;IACnBC,qBAAqB;IACrBC,cAAc;IACdC,UAAU;IACVC;EACF,CAAC,GAAGjB,qBAAqB,CAACO,SAAS,CAAC;;EAEpC;EACA,MAAMW,cAAc,GAAG;IACrBC,KAAK,EAAE,CAAAX,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEW,KAAK,KAAI,MAAM;IAClCC,MAAM,EAAE,CAAAZ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,MAAM,KAAI,OAAO;IACrCC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,SAAS;IACrBC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,CAAAlB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,MAAM,KAAI,OAAO;IACxCO,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE;EACb,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGhB,mBAAmB,GAAGF,eAAe,GAAGD,aAAa;;EAExE;EACA,IAAI,CAACH,SAAS,IAAI,CAACG,aAAa,CAACoB,MAAM,EAAE;IACvC,oBAAOzB,OAAA,CAACF,iBAAiB;MAACe,cAAc,EAAEA;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9D;EAEA,oBACE7B,OAAA;IAAK8B,KAAK,EAAEjB,cAAe;IAAAkB,QAAA,gBAEzB/B,OAAA,CAACJ,YAAY;MACXW,aAAa,EAAEA,aAAc;MAC7BC,mBAAmB,EAAEA,mBAAoB;MACzCE,cAAc,EAAEA,cAAe;MAC/BD,qBAAqB,EAAEA;IAAsB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EAGDL,UAAU,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7BlC,OAAA,CAACH,cAAc;MAEboC,OAAO,EAAEA,OAAQ;MACjB1B,aAAa,EAAEA,aAAc;MAC7BC,mBAAmB,EAAEA,mBAAoB;MACzCG,UAAU,EAAEA,UAAW;MACvBC,YAAY,EAAEA;IAAa,GALtB,WAAWsB,KAAK,IAAID,OAAO,CAACE,GAAG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMvC,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzDIH,uBAAuB;EAAA,QAUvBN,qBAAqB;AAAA;AAAAyC,EAAA,GAVrBnC,uBAAuB;AA2D7B,eAAeA,uBAAuB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}