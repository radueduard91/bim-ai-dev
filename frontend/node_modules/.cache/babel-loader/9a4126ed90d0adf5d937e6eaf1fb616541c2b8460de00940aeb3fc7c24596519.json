{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R40008\\\\Asset Model Server\\\\python\\\\bim-ai-poc\\\\frontend\\\\src\\\\components\\\\TableVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableVisualization = ({\n  graphData,\n  handleLabelChange,\n  openPopup,\n  setGraphData,\n  fetchGraphData\n}) => {\n  _s();\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [sortedRows, setSortedRows] = useState([]);\n  const [rowSpans, setRowSpans] = useState({});\n  const [clusterCounts, setClusterCounts] = useState({});\n  const [objectCounts, setObjectCounts] = useState({});\n  const [inputRefs, setInputRefs] = useState({});\n  const handleDragStart = (event, key) => {\n    event.dataTransfer.setData(\"text/plain\", key);\n    setDraggedItem(key);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = async (event, targetKey, targetCategory) => {\n    event.preventDefault();\n    const sourceKey = event.dataTransfer.getData(\"text/plain\");\n    if (sourceKey && sourceKey !== targetKey) {\n      setGraphData(prev => {\n        let updatedNodeDataArray = [...prev.nodeDataArray];\n        let updatedLinkDataArray = [...prev.linkDataArray];\n\n        // Find the source node and target node.\n        const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\n        const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\n        if (sourceNode && targetNode) {\n          // Remove all existing links where the source node is the to\n          updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n          if (sourceNode.category === \"attribute\") {\n            // If target is object, create new link\n            if (targetNode.category === \"object\") {\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n            // if target is system, check if object exists then create new links\n            else if (targetNode.category === \"system\") {\n              const linkedObject = updatedNodeDataArray.find(node => prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey));\n              if (linkedObject) {\n                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\n              }\n              const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\n              const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\n              if (objectLinks.length > 0) {\n                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\n                if (parentObject) {\n                  updatedLinkDataArray.push({\n                    from: targetKey,\n                    to: parentObject.key\n                  });\n                  updatedLinkDataArray.push({\n                    from: parentObject.key,\n                    to: sourceKey\n                  });\n                }\n              }\n            }\n          }\n\n          //If source is object\n          else if (sourceNode.category === \"object\") {\n            if (targetNode.category === \"system\") {\n              updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\n              updatedLinkDataArray.push({\n                from: targetKey,\n                to: sourceKey\n              });\n            }\n          }\n        }\n        return {\n          ...prev,\n          nodeDataArray: updatedNodeDataArray,\n          linkDataArray: updatedLinkDataArray\n        };\n      });\n      const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\n      const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\n      try {\n        const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\n          source: sourceKey,\n          target: targetKey,\n          sourceType: sourceNode.category,\n          targetType: targetNode.category\n        });\n        if (response.data.message === \"Drag-and-drop operation completed successfully\") {\n          await fetchGraphData();\n        }\n      } catch (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\n          alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.error(\"Error applying drag and drop:\", error.request);\n          alert(\"Error applying drag and drop. No response from server\");\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.error(\"Error applying drag and drop:\", error.message);\n          alert(`Error applying drag and drop: ${error.message}`);\n        }\n      }\n    }\n    setDraggedItem(null);\n  };\n\n  // Sort function\n  const sortRows = rows => {\n    return [...rows].sort((a, b) => {\n      var _a$parentCluster, _b$parentCluster, _a$parentObject, _b$parentObject;\n      const clusterA = ((_a$parentCluster = a.parentCluster) === null || _a$parentCluster === void 0 ? void 0 : _a$parentCluster.label) || \"Unlinked\";\n      const clusterB = ((_b$parentCluster = b.parentCluster) === null || _b$parentCluster === void 0 ? void 0 : _b$parentCluster.label) || \"Unlinked\";\n      const objectA = ((_a$parentObject = a.parentObject) === null || _a$parentObject === void 0 ? void 0 : _a$parentObject.label) || \"Unlinked\";\n      const objectB = ((_b$parentObject = b.parentObject) === null || _b$parentObject === void 0 ? void 0 : _b$parentObject.label) || \"Unlinked\";\n      const attributeA = a.attr.label;\n      const attributeB = b.attr.label;\n      const compareClusters = clusterA.localeCompare(clusterB);\n      if (compareClusters !== 0) return compareClusters;\n      const compareObjects = objectA.localeCompare(objectB);\n      if (compareObjects !== 0) return compareObjects;\n      return attributeA.localeCompare(attributeB);\n    });\n  };\n\n  // Calculate counts for clusters and objects\n  const calculateCounts = graphData => {\n    const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n    const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n    const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n    const clusterCounts = {};\n    const objectCounts = {};\n    clusters.forEach(cluster => {\n      const linkedObjects = objects.filter(obj => graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key));\n      clusterCounts[cluster.key] = linkedObjects.length;\n    });\n    objects.forEach(obj => {\n      const linkedAttributes = attributes.filter(attr => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n      objectCounts[obj.key] = linkedAttributes.length;\n    });\n    return {\n      clusterCounts,\n      objectCounts\n    };\n  };\n  useEffect(() => {\n    if (graphData) {\n      const clusters = graphData.nodeDataArray.filter(node => node.category === \"system\");\n      const objects = graphData.nodeDataArray.filter(node => node.category === \"object\");\n      const attributes = graphData.nodeDataArray.filter(node => node.category === \"attribute\");\n      const rows = attributes.map(attr => {\n        const parentObject = objects.find(obj => graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key));\n        const parentCluster = parentObject ? clusters.find(sys => graphData.linkDataArray.some(link => link.from === sys.key && link.to === parentObject.key)) : null;\n        return {\n          attr,\n          parentObject,\n          parentCluster\n        };\n      });\n      const sorted = sortRows(rows);\n      setSortedRows(sorted);\n\n      // Calculate row spans for Cluster and Object columns\n      const spans = {};\n      let prevCluster = null;\n      let prevObject = null;\n      let clusterSpan = 1;\n      let objectSpan = 1;\n      sorted.forEach((row, index) => {\n        var _row$parentCluster, _row$parentObject;\n        const currentCluster = ((_row$parentCluster = row.parentCluster) === null || _row$parentCluster === void 0 ? void 0 : _row$parentCluster.label) || \"Unlinked\";\n        const currentObject = ((_row$parentObject = row.parentObject) === null || _row$parentObject === void 0 ? void 0 : _row$parentObject.label) || \"Unlinked\";\n        if (currentCluster === prevCluster) {\n          clusterSpan++;\n          spans[index] = {\n            ...spans[index],\n            clusterSpan: 0\n          };\n        } else {\n          spans[index - clusterSpan] = {\n            ...spans[index - clusterSpan],\n            clusterSpan\n          };\n          clusterSpan = 1;\n        }\n        if (currentObject === prevObject) {\n          objectSpan++;\n          spans[index] = {\n            ...spans[index],\n            objectSpan: 0\n          };\n        } else {\n          spans[index - objectSpan] = {\n            ...spans[index - objectSpan],\n            objectSpan\n          };\n          objectSpan = 1;\n        }\n        prevCluster = currentCluster;\n        prevObject = currentObject;\n      });\n\n      // Handle the last group\n      spans[sorted.length - clusterSpan] = {\n        ...spans[sorted.length - clusterSpan],\n        clusterSpan\n      };\n      spans[sorted.length - objectSpan] = {\n        ...spans[sorted.length - objectSpan],\n        objectSpan\n      };\n      setRowSpans(spans);\n\n      // Calculate counts for clusters and objects\n      const {\n        clusterCounts,\n        objectCounts\n      } = calculateCounts(graphData);\n      setClusterCounts(clusterCounts);\n      setObjectCounts(objectCounts);\n    }\n  }, [graphData]);\n  const getDisplayText = text => {\n    if (!text) return \"\";\n    const lines = text.split('\\n');\n    const firstTwoLines = lines.slice(0, 2).join('\\n');\n    return lines.length > 2 ? `${firstTwoLines} [Click to expand...]` : firstTwoLines;\n  };\n  const handleClickInput = (key, currentLabel, currentName) => {\n    openPopup(key, currentLabel, currentName);\n    if (inputRefs[key] && inputRefs[key].current) {\n      inputRefs[key].current.focus();\n    }\n  };\n  const setInputRef = key => {\n    setInputRefs(prevRefs => {\n      if (prevRefs[key]) {\n        return prevRefs;\n      } else {\n        return {\n          ...prevRefs,\n          [key]: /*#__PURE__*/React.createRef()\n        };\n      }\n    });\n    return inputRefs[key];\n  };\n  if (!graphData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Table will be displayed here after uploading a file.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\",\n            fontSize: \"0.9em\"\n          },\n          children: \"Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\",\n            fontSize: \"0.9em\"\n          },\n          children: \"Object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"5px\",\n            fontSize: \"0.9em\"\n          },\n          children: \"Attribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: sortedRows.map((row, index) => {\n        var _rowSpans$index, _row$parentCluster4, _row$parentCluster5, _row$parentCluster12, _row$parentCluster13, _row$parentCluster15, _rowSpans$index2, _row$parentObject4, _row$parentObject5, _row$parentObject12, _row$parentObject13, _row$parentObject15;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [((_rowSpans$index = rowSpans[index]) === null || _rowSpans$index === void 0 ? void 0 : _rowSpans$index.clusterSpan) > 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: rowSpans[index].clusterSpan,\n            style: {\n              border: \"1px solid black\",\n              padding: \"2px\",\n              position: \"relative\",\n              fontSize: \"0.9em\"\n            },\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => {\n              var _row$parentCluster2;\n              return handleDrop(e, (_row$parentCluster2 = row.parentCluster) === null || _row$parentCluster2 === void 0 ? void 0 : _row$parentCluster2.key, \"system\");\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => {\n                var _row$parentCluster3;\n                return handleDragStart(e, (_row$parentCluster3 = row.parentCluster) === null || _row$parentCluster3 === void 0 ? void 0 : _row$parentCluster3.key);\n              },\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                lineHeight: \"1.2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  flex: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: [((_row$parentCluster4 = row.parentCluster) === null || _row$parentCluster4 === void 0 ? void 0 : _row$parentCluster4.label) || \"Unlinked\", \" [\", clusterCounts[(_row$parentCluster5 = row.parentCluster) === null || _row$parentCluster5 === void 0 ? void 0 : _row$parentCluster5.key] || 0, \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/edit-icon.png\",\n                alt: \"Edit\",\n                style: {\n                  width: \"16px\",\n                  height: \"16px\",\n                  cursor: \"pointer\",\n                  marginLeft: \"5px\"\n                },\n                onClick: () => {\n                  var _row$parentCluster6, _row$parentCluster7, _row$parentCluster8;\n                  return openPopup((_row$parentCluster6 = row.parentCluster) === null || _row$parentCluster6 === void 0 ? void 0 : _row$parentCluster6.key, ((_row$parentCluster7 = row.parentCluster) === null || _row$parentCluster7 === void 0 ? void 0 : _row$parentCluster7.hoverLabel) || \"\", ((_row$parentCluster8 = row.parentCluster) === null || _row$parentCluster8 === void 0 ? void 0 : _row$parentCluster8.label) || \"\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                overflow: 'hidden',\n                whiteSpace: 'pre-line'\n              },\n              onClick: () => {\n                var _row$parentCluster9, _row$parentCluster10, _row$parentCluster11;\n                return handleClickInput((_row$parentCluster9 = row.parentCluster) === null || _row$parentCluster9 === void 0 ? void 0 : _row$parentCluster9.key, ((_row$parentCluster10 = row.parentCluster) === null || _row$parentCluster10 === void 0 ? void 0 : _row$parentCluster10.hoverLabel) || \"\", ((_row$parentCluster11 = row.parentCluster) === null || _row$parentCluster11 === void 0 ? void 0 : _row$parentCluster11.label) || \"\");\n              },\n              children: getDisplayText((_row$parentCluster12 = row.parentCluster) === null || _row$parentCluster12 === void 0 ? void 0 : _row$parentCluster12.hoverLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_row$parentCluster13 = row.parentCluster) === null || _row$parentCluster13 === void 0 ? void 0 : _row$parentCluster13.hoverLabel) || \"\",\n              onChange: e => {\n                var _row$parentCluster14;\n                return handleLabelChange(e, (_row$parentCluster14 = row.parentCluster) === null || _row$parentCluster14 === void 0 ? void 0 : _row$parentCluster14.key);\n              },\n              style: {\n                display: \"none\"\n              },\n              ref: setInputRef((_row$parentCluster15 = row.parentCluster) === null || _row$parentCluster15 === void 0 ? void 0 : _row$parentCluster15.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this) : null, ((_rowSpans$index2 = rowSpans[index]) === null || _rowSpans$index2 === void 0 ? void 0 : _rowSpans$index2.objectSpan) > 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: rowSpans[index].objectSpan,\n            style: {\n              border: \"1px solid black\",\n              padding: \"2px\",\n              position: \"relative\",\n              fontSize: \"0.9em\"\n            },\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => {\n              var _row$parentObject2;\n              return handleDrop(e, (_row$parentObject2 = row.parentObject) === null || _row$parentObject2 === void 0 ? void 0 : _row$parentObject2.key, \"object\");\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => {\n                var _row$parentObject3;\n                return handleDragStart(e, (_row$parentObject3 = row.parentObject) === null || _row$parentObject3 === void 0 ? void 0 : _row$parentObject3.key);\n              },\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                lineHeight: \"1.2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  flex: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: [\" \", ((_row$parentObject4 = row.parentObject) === null || _row$parentObject4 === void 0 ? void 0 : _row$parentObject4.label) || \"Unlinked\", \" (\", objectCounts[(_row$parentObject5 = row.parentObject) === null || _row$parentObject5 === void 0 ? void 0 : _row$parentObject5.key] || 0, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/edit-icon.png\",\n                alt: \"Edit\",\n                style: {\n                  width: \"16px\",\n                  height: \"16px\",\n                  cursor: \"pointer\",\n                  marginLeft: \"5px\"\n                },\n                onClick: () => {\n                  var _row$parentObject6, _row$parentObject7, _row$parentObject8;\n                  return openPopup((_row$parentObject6 = row.parentObject) === null || _row$parentObject6 === void 0 ? void 0 : _row$parentObject6.key, ((_row$parentObject7 = row.parentObject) === null || _row$parentObject7 === void 0 ? void 0 : _row$parentObject7.hoverLabel) || \"\", ((_row$parentObject8 = row.parentObject) === null || _row$parentObject8 === void 0 ? void 0 : _row$parentObject8.label) || \"\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                overflow: 'hidden',\n                whiteSpace: 'pre-line'\n              },\n              onClick: () => {\n                var _row$parentObject9, _row$parentObject10, _row$parentObject11;\n                return handleClickInput((_row$parentObject9 = row.parentObject) === null || _row$parentObject9 === void 0 ? void 0 : _row$parentObject9.key, ((_row$parentObject10 = row.parentObject) === null || _row$parentObject10 === void 0 ? void 0 : _row$parentObject10.hoverLabel) || \"\", ((_row$parentObject11 = row.parentObject) === null || _row$parentObject11 === void 0 ? void 0 : _row$parentObject11.label) || \"\");\n              },\n              children: getDisplayText((_row$parentObject12 = row.parentObject) === null || _row$parentObject12 === void 0 ? void 0 : _row$parentObject12.hoverLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_row$parentObject13 = row.parentObject) === null || _row$parentObject13 === void 0 ? void 0 : _row$parentObject13.hoverLabel) || \"\",\n              onChange: e => {\n                var _row$parentObject14;\n                return handleLabelChange(e, (_row$parentObject14 = row.parentObject) === null || _row$parentObject14 === void 0 ? void 0 : _row$parentObject14.key);\n              },\n              style: {\n                display: \"none\"\n              },\n              ref: setInputRef((_row$parentObject15 = row.parentObject) === null || _row$parentObject15 === void 0 ? void 0 : _row$parentObject15.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"2px\",\n              position: \"relative\",\n              fontSize: \"0.9em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => handleDragStart(e, row.attr.key),\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                lineHeight: \"1.2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  flex: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\"\n                },\n                children: [\" \", row.attr.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/edit-icon.png\",\n                alt: \"Edit\",\n                style: {\n                  width: \"16px\",\n                  height: \"16px\",\n                  cursor: \"pointer\",\n                  marginLeft: \"5px\"\n                },\n                onClick: () => openPopup(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                overflow: 'hidden',\n                whiteSpace: 'pre-line'\n              },\n              onClick: () => handleClickInput(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\"),\n              children: getDisplayText(row.attr.hoverLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row.attr.hoverLabel || \"\",\n              onChange: e => handleLabelChange(e, row.attr.key),\n              style: {\n                display: \"none\"\n              },\n              ref: setInputRef(row.attr.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, row.attr.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n};\n_s(TableVisualization, \"HhY+Jda78XqWXvVPJ1rcDeoBpNo=\");\n_c = TableVisualization;\nexport default TableVisualization;\nvar _c;\n$RefreshReg$(_c, \"TableVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","TableVisualization","graphData","handleLabelChange","openPopup","setGraphData","fetchGraphData","_s","draggedItem","setDraggedItem","sortedRows","setSortedRows","rowSpans","setRowSpans","clusterCounts","setClusterCounts","objectCounts","setObjectCounts","inputRefs","setInputRefs","handleDragStart","event","key","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","targetKey","targetCategory","sourceKey","getData","prev","updatedNodeDataArray","nodeDataArray","updatedLinkDataArray","linkDataArray","sourceNode","find","node","targetNode","filter","link","to","category","push","from","linkedObject","some","objects","objectLinks","obj","length","parentObject","l","response","post","source","target","sourceType","targetType","data","message","error","console","status","alert","detail","request","sortRows","rows","sort","a","b","_a$parentCluster","_b$parentCluster","_a$parentObject","_b$parentObject","clusterA","parentCluster","label","clusterB","objectA","objectB","attributeA","attr","attributeB","compareClusters","localeCompare","compareObjects","calculateCounts","clusters","attributes","forEach","cluster","linkedObjects","linkedAttributes","map","sys","sorted","spans","prevCluster","prevObject","clusterSpan","objectSpan","row","index","_row$parentCluster","_row$parentObject","currentCluster","currentObject","getDisplayText","text","lines","split","firstTwoLines","slice","join","handleClickInput","currentLabel","currentName","current","focus","setInputRef","prevRefs","createRef","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","borderCollapse","border","padding","fontSize","_rowSpans$index","_row$parentCluster4","_row$parentCluster5","_row$parentCluster12","_row$parentCluster13","_row$parentCluster15","_rowSpans$index2","_row$parentObject4","_row$parentObject5","_row$parentObject12","_row$parentObject13","_row$parentObject15","rowSpan","position","onDragOver","e","onDrop","_row$parentCluster2","draggable","onDragStart","_row$parentCluster3","display","alignItems","lineHeight","flex","overflow","textOverflow","whiteSpace","src","alt","height","cursor","marginLeft","onClick","_row$parentCluster6","_row$parentCluster7","_row$parentCluster8","hoverLabel","_row$parentCluster9","_row$parentCluster10","_row$parentCluster11","type","value","onChange","_row$parentCluster14","ref","_row$parentObject2","_row$parentObject3","_row$parentObject6","_row$parentObject7","_row$parentObject8","_row$parentObject9","_row$parentObject10","_row$parentObject11","_row$parentObject14","_c","$RefreshReg$"],"sources":["C:/Users/R40008/Asset Model Server/python/bim-ai-poc/frontend/src/components/TableVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TableVisualization = ({ graphData, handleLabelChange, openPopup, setGraphData, fetchGraphData }) => {\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n    const [sortedRows, setSortedRows] = useState([]);\r\n    const [rowSpans, setRowSpans] = useState({});\r\n    const [clusterCounts, setClusterCounts] = useState({});\r\n    const [objectCounts, setObjectCounts] = useState({});\r\n     const [inputRefs, setInputRefs] = useState({});\r\n\r\n\r\n    const handleDragStart = (event, key) => {\r\n        event.dataTransfer.setData(\"text/plain\", key);\r\n        setDraggedItem(key);\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleDrop = async (event, targetKey, targetCategory) => {\r\n        event.preventDefault();\r\n        const sourceKey = event.dataTransfer.getData(\"text/plain\");\r\n\r\n        if (sourceKey && sourceKey !== targetKey) {\r\n            setGraphData((prev) => {\r\n                let updatedNodeDataArray = [...prev.nodeDataArray];\r\n                let updatedLinkDataArray = [...prev.linkDataArray];\r\n\r\n                // Find the source node and target node.\r\n                const sourceNode = prev.nodeDataArray.find(node => node.key === sourceKey);\r\n                const targetNode = prev.nodeDataArray.find(node => node.key === targetKey);\r\n                if (sourceNode && targetNode) {\r\n                    // Remove all existing links where the source node is the to\r\n                    updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n\r\n                    if (sourceNode.category === \"attribute\") {\r\n                        // If target is object, create new link\r\n                        if (targetNode.category === \"object\") {\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                        // if target is system, check if object exists then create new links\r\n                        else if (targetNode.category === \"system\") {\r\n                            const linkedObject = updatedNodeDataArray.find(node =>\r\n                                prev.linkDataArray.some(link => link.from === node.key && link.to === sourceKey)\r\n                            )\r\n                            if (linkedObject) {\r\n                                updatedLinkDataArray = updatedLinkDataArray.filter(link => link.from !== linkedObject.key && link.to !== sourceKey);\r\n                            }\r\n\r\n                            const objects = updatedNodeDataArray.filter(node => node.category === \"object\");\r\n                            const objectLinks = updatedLinkDataArray.filter(link => link.to !== sourceKey && objects.some(obj => obj.key === link.from));\r\n                            if (objectLinks.length > 0) {\r\n                                const parentObject = objects.find(obj => objectLinks.some(l => l.from === obj.key));\r\n                                if (parentObject) {\r\n                                    updatedLinkDataArray.push({ from: targetKey, to: parentObject.key })\r\n                                    updatedLinkDataArray.push({ from: parentObject.key, to: sourceKey });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //If source is object\r\n                    else if (sourceNode.category === \"object\") {\r\n                        if (targetNode.category === \"system\") {\r\n                            updatedLinkDataArray = updatedLinkDataArray.filter(link => link.to !== sourceKey);\r\n                            updatedLinkDataArray.push({ from: targetKey, to: sourceKey });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    nodeDataArray: updatedNodeDataArray,\r\n                    linkDataArray: updatedLinkDataArray,\r\n                };\r\n            });\r\n\r\n            const sourceNode = graphData.nodeDataArray.find(node => node.key === sourceKey);\r\n            const targetNode = graphData.nodeDataArray.find(node => node.key === targetKey);\r\n            try {\r\n                const response = await axios.post(\"http://localhost:8000/apply-drag-drop/\", {\r\n                    source: sourceKey,\r\n                    target: targetKey,\r\n                    sourceType: sourceNode.category,\r\n                    targetType: targetNode.category\r\n                });\r\n                if (response.data.message === \"Drag-and-drop operation completed successfully\") {\r\n                    await fetchGraphData()\r\n                }\r\n\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.error(\"Error applying drag and drop:\", error.response.status, error.response.data);\r\n                    alert(`Error applying drag and drop. Status: ${error.response.status}, Message: ${error.response.data.detail}`);\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.error(\"Error applying drag and drop:\", error.request);\r\n                    alert(\"Error applying drag and drop. No response from server\");\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.error(\"Error applying drag and drop:\", error.message);\r\n                    alert(`Error applying drag and drop: ${error.message}`);\r\n                }\r\n            }\r\n        }\r\n        setDraggedItem(null)\r\n    };\r\n\r\n    // Sort function\r\n    const sortRows = (rows) => {\r\n        return [...rows].sort((a, b) => {\r\n            const clusterA = a.parentCluster?.label || \"Unlinked\";\r\n            const clusterB = b.parentCluster?.label || \"Unlinked\";\r\n            const objectA = a.parentObject?.label || \"Unlinked\";\r\n            const objectB = b.parentObject?.label || \"Unlinked\";\r\n            const attributeA = a.attr.label;\r\n            const attributeB = b.attr.label;\r\n\r\n            const compareClusters = clusterA.localeCompare(clusterB);\r\n            if (compareClusters !== 0) return compareClusters;\r\n\r\n            const compareObjects = objectA.localeCompare(objectB);\r\n            if (compareObjects !== 0) return compareObjects;\r\n\r\n            return attributeA.localeCompare(attributeB);\r\n        });\r\n    };\r\n\r\n    // Calculate counts for clusters and objects\r\n    const calculateCounts = (graphData) => {\r\n        const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n        const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n        const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n        const clusterCounts = {};\r\n        const objectCounts = {};\r\n\r\n        clusters.forEach(cluster => {\r\n            const linkedObjects = objects.filter(obj =>\r\n                graphData.linkDataArray.some(link => link.from === cluster.key && link.to === obj.key)\r\n            );\r\n            clusterCounts[cluster.key] = linkedObjects.length;\r\n        });\r\n\r\n        objects.forEach(obj => {\r\n            const linkedAttributes = attributes.filter(attr =>\r\n                graphData.linkDataArray.some(link => link.from === obj.key && link.to === attr.key)\r\n            );\r\n            objectCounts[obj.key] = linkedAttributes.length;\r\n        });\r\n\r\n        return { clusterCounts, objectCounts };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (graphData) {\r\n            const clusters = graphData.nodeDataArray.filter((node) => node.category === \"system\");\r\n            const objects = graphData.nodeDataArray.filter((node) => node.category === \"object\");\r\n            const attributes = graphData.nodeDataArray.filter((node) => node.category === \"attribute\");\r\n\r\n            const rows = attributes.map((attr) => {\r\n                const parentObject = objects.find((obj) =>\r\n                    graphData.linkDataArray.some((link) => link.from === obj.key && link.to === attr.key)\r\n                );\r\n\r\n                const parentCluster = parentObject\r\n                    ? clusters.find((sys) =>\r\n                        graphData.linkDataArray.some((link) => link.from === sys.key && link.to === parentObject.key)\r\n                    )\r\n                    : null;\r\n\r\n                return { attr, parentObject, parentCluster }\r\n            });\r\n\r\n            const sorted = sortRows(rows);\r\n            setSortedRows(sorted);\r\n\r\n            // Calculate row spans for Cluster and Object columns\r\n            const spans = {};\r\n            let prevCluster = null;\r\n            let prevObject = null;\r\n            let clusterSpan = 1;\r\n            let objectSpan = 1;\r\n\r\n            sorted.forEach((row, index) => {\r\n                const currentCluster = row.parentCluster?.label || \"Unlinked\";\r\n                const currentObject = row.parentObject?.label || \"Unlinked\";\r\n\r\n                if (currentCluster === prevCluster) {\r\n                    clusterSpan++;\r\n                    spans[index] = { ...spans[index], clusterSpan: 0 };\r\n                } else {\r\n                    spans[index - clusterSpan] = { ...spans[index - clusterSpan], clusterSpan };\r\n                    clusterSpan = 1;\r\n                }\r\n\r\n                if (currentObject === prevObject) {\r\n                    objectSpan++;\r\n                    spans[index] = { ...spans[index], objectSpan: 0 };\r\n                } else {\r\n                    spans[index - objectSpan] = { ...spans[index - objectSpan], objectSpan };\r\n                    objectSpan = 1;\r\n                }\r\n\r\n                prevCluster = currentCluster;\r\n                prevObject = currentObject;\r\n            });\r\n\r\n            // Handle the last group\r\n            spans[sorted.length - clusterSpan] = { ...spans[sorted.length - clusterSpan], clusterSpan };\r\n            spans[sorted.length - objectSpan] = { ...spans[sorted.length - objectSpan], objectSpan };\r\n\r\n            setRowSpans(spans);\r\n\r\n            // Calculate counts for clusters and objects\r\n            const { clusterCounts, objectCounts } = calculateCounts(graphData);\r\n            setClusterCounts(clusterCounts);\r\n            setObjectCounts(objectCounts);\r\n        }\r\n    }, [graphData]);\r\n\r\n\r\n   const getDisplayText = (text) => {\r\n        if (!text) return \"\";\r\n        const lines = text.split('\\n');\r\n         const firstTwoLines = lines.slice(0, 2).join('\\n');\r\n         return lines.length > 2 ? `${firstTwoLines} [Click to expand...]` : firstTwoLines;\r\n    };\r\n\r\n     const handleClickInput = (key, currentLabel, currentName) => {\r\n        openPopup(key, currentLabel, currentName);\r\n        if (inputRefs[key] && inputRefs[key].current) {\r\n          inputRefs[key].current.focus();\r\n        }\r\n    }\r\n\r\n\r\n      const setInputRef = (key) => {\r\n          setInputRefs(prevRefs => {\r\n            if (prevRefs[key]) {\r\n              return prevRefs;\r\n            } else {\r\n              return {...prevRefs, [key]: React.createRef() };\r\n            }\r\n          });\r\n        return inputRefs[key];\r\n     }\r\n\r\n\r\n    if (!graphData) return <p>Table will be displayed here after uploading a file.</p>;\r\n\r\n    return (\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n                <tr>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\", fontSize: \"0.9em\" }}>Cluster</th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\", fontSize: \"0.9em\" }}>Object</th>\r\n                    <th style={{ border: \"1px solid black\", padding: \"5px\", fontSize: \"0.9em\" }}>Attribute</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {sortedRows.map((row, index) => (\r\n                    <tr key={row.attr.key}>\r\n                        {rowSpans[index]?.clusterSpan > 0 ? (\r\n                            <td\r\n                                rowSpan={rowSpans[index].clusterSpan}\r\n                                style={{ border: \"1px solid black\", padding: \"2px\", position: \"relative\", fontSize: \"0.9em\",  }}\r\n                                onDragOver={(e) => handleDragOver(e)}\r\n                                onDrop={(e) => handleDrop(e, row.parentCluster?.key, \"system\")}\r\n                            >\r\n                                <div\r\n                                    draggable\r\n                                    onDragStart={(e) => handleDragStart(e, row.parentCluster?.key)}\r\n                                    style={{ display: \"flex\", alignItems: \"center\" , lineHeight: \"1.2\"}}\r\n                                >\r\n                                    <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{row.parentCluster?.label || \"Unlinked\"} [{clusterCounts[row.parentCluster?.key] || 0}]</span>\r\n                                      <img\r\n                                          src=\"/edit-icon.png\"\r\n                                          alt=\"Edit\"\r\n                                          style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\",marginLeft: \"5px\" }}\r\n                                           onClick={() => openPopup(row.parentCluster?.key, row.parentCluster?.hoverLabel || \"\", row.parentCluster?.label || \"\")}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                  <div\r\n                                        style={{ width: \"50%\", overflow: 'hidden', whiteSpace: 'pre-line' }}\r\n                                          onClick={() => handleClickInput(row.parentCluster?.key, row.parentCluster?.hoverLabel || \"\", row.parentCluster?.label || \"\")}\r\n                                    >\r\n                                            {getDisplayText(row.parentCluster?.hoverLabel)}\r\n                                   </div>\r\n\r\n                                     <input\r\n                                    type=\"text\"\r\n                                    value={row.parentCluster?.hoverLabel || \"\"}\r\n                                    onChange={(e) => handleLabelChange(e, row.parentCluster?.key)}\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={setInputRef(row.parentCluster?.key)}\r\n                                />\r\n\r\n                            </td>\r\n                        ) : null}\r\n                        {rowSpans[index]?.objectSpan > 0 ? (\r\n                            <td\r\n                                rowSpan={rowSpans[index].objectSpan}\r\n                                style={{ border: \"1px solid black\", padding: \"2px\", position: \"relative\" , fontSize: \"0.9em\",  }}\r\n                                onDragOver={(e) => handleDragOver(e)}\r\n                                onDrop={(e) => handleDrop(e, row.parentObject?.key, \"object\")}\r\n                            >\r\n                                <div\r\n                                     draggable\r\n                                     onDragStart={(e) => handleDragStart(e, row.parentObject?.key)}\r\n                                     style={{ display: \"flex\", alignItems: \"center\", lineHeight: \"1.2\" }}\r\n                                >\r\n                                   <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}> {row.parentObject?.label || \"Unlinked\"} ({objectCounts[row.parentObject?.key] || 0})</span>\r\n\r\n                                     <img\r\n                                          src=\"/edit-icon.png\"\r\n                                          alt=\"Edit\"\r\n                                          style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\", marginLeft:\"5px\" }}\r\n                                          onClick={() => openPopup(row.parentObject?.key, row.parentObject?.hoverLabel || \"\", row.parentObject?.label || \"\")}\r\n                                    />\r\n                                </div>\r\n\r\n                                    <div\r\n                                        style={{ width: \"50%\", overflow: 'hidden', whiteSpace: 'pre-line'  }}\r\n                                         onClick={() => handleClickInput(row.parentObject?.key, row.parentObject?.hoverLabel || \"\", row.parentObject?.label || \"\")}\r\n                                    >\r\n                                            {getDisplayText(row.parentObject?.hoverLabel)}\r\n                                   </div>\r\n\r\n                                   <input\r\n                                    type=\"text\"\r\n                                    value={row.parentObject?.hoverLabel || \"\"}\r\n                                    onChange={(e) => handleLabelChange(e, row.parentObject?.key)}\r\n                                     style={{ display: \"none\"  }}\r\n                                        ref={setInputRef(row.parentObject?.key)}\r\n                                />\r\n\r\n                            </td>\r\n                        ) : null}\r\n                        <td style={{ border: \"1px solid black\", padding: \"2px\", position: \"relative\",  fontSize: \"0.9em\", }}>\r\n                            <div\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, row.attr.key)}\r\n                                 style={{ display: \"flex\", alignItems: \"center\", lineHeight: \"1.2\" }}\r\n                            >\r\n                                   <span style={{ flex: 1, overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}> {row.attr.label}</span>\r\n                                     <img\r\n                                         src=\"/edit-icon.png\"\r\n                                        alt=\"Edit\"\r\n                                        style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\", marginLeft:\"5px\" }}\r\n                                          onClick={() => openPopup(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\")}\r\n                                    />\r\n                            </div>\r\n                                 <div\r\n                                        style={{ width: \"50%\", overflow: 'hidden', whiteSpace: 'pre-line'  }}\r\n                                          onClick={() => handleClickInput(row.attr.key, row.attr.hoverLabel || \"\", row.attr.label || \"\")}\r\n                                    >\r\n                                            {getDisplayText(row.attr.hoverLabel)}\r\n                                   </div>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={row.attr.hoverLabel || \"\"}\r\n                                         onChange={(e) => handleLabelChange(e, row.attr.key)}\r\n                                           style={{ display: \"none\" }}\r\n                                            ref={setInputRef(row.attr.key)}\r\n                                />\r\n\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TableVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}